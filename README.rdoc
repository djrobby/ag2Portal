== Welcome to aGestiona2

aGestiona2® is Agua y Gestión platform as a service.
The goal of the entire system is to be the Employee Productivity Suite for the organization.
Based on REST services and applications written essentially in Ruby on Rails®, is also coded in Java, jQuery, and more.
Open source tools used:
	Alfresco® Community
	Producteev by Jive®
	Google® Apps

Designed and developed by Néstor Rodríguez Maldonado.

== Components


  |-- ag2Portal
  |   |-- ag2Admin
  |   |-- ag2Directory
  |   |-- ag2Finance
  |   |-- ag2Gest
  |   |-- ag2HelpDesk
  |   |-- ag2Human
  |   |-- ag2Logistics
  |   |-- ag2Purchase
  |   |-- ag2Tech
  |   |-- ag2TeamNet
  |   |-- ag2TimeRecord
  |   |-- Producteev
  |   `-- Google Apps

ag2Portal
  Holds all the code that's specific to this particular application.

ag2Admin
  Contains subdirectories for images, stylesheets, and JavaScript files.

ag2Directory
  Holds controllers that should be named like weblogs_controller.rb for
  automated URL mapping. All controllers should descend from
  ApplicationController which itself descends from ActionController::Base.

ag2Finance
  Holds models that should be named like post.rb. Models descend from
  ActiveRecord::Base by default.

ag2Gest
  Holds the template files for the view that should be named like
  weblogs/index.html.erb for the WeblogsController#index action. All views use
  eRuby syntax by default.

ag2HelpDesk
  Holds the template files for layouts to be used with views. This models the
  common header/footer method of wrapping views. In your views, define a layout
  using the <tt>layout :default</tt> and create a file named default.html.erb.
  Inside default.html.erb, call <% yield %> to render the view using this
  layout.

ag2Human
  Holds view helpers that should be named like weblogs_helper.rb. These are
  generated for you automatically when using generators for controllers.
  Helpers can be used to wrap functionality for your views into methods.

ag2Logistics
  Configuration files for the Rails environment, the routing map, the database,
  and other dependencies.

ag2Purchase
  Contains the database schema in schema.rb. db/migrate contains all the
  sequence of Migrations for your schema.

ag2Tech
  This directory is where your application documentation will be stored when
  generated using <tt>rake doc:app</tt>

ag2TeamNet
  Application specific libraries. Basically, any kind of custom code that
  doesn't belong under controllers, models, or helpers. This directory is in
  the load path.

ag2TimeRecord
  The directory available for the web server. Also contains the dispatchers and the
  default HTML files. This should be set as the DOCUMENT_ROOT of your web
  server.

Producteev
  Helper scripts for automation and generation.

Google Apps
  Unit and functional tests along with fixtures. When using the rails generate
  command, template test files will be generated for you and placed in this
  directory.
