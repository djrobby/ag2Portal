<script>
  var text_field_color;

  $(document).ready(function() {
    var contact = $('#fnt_entity_type').val();
    if (contact == "")
      contact = "0";
    if (contact == "0") {// Empty type
      $('#fnt_company').prop('disabled', true);
      $('#fnt_last_name').prop('disabled', true);
      $('#fnt_first_name').prop('disabled', true);
    } else if (contact == "1") {// Type is Person
      $('#fnt_company').prop('disabled', true);
      $('#fnt_last_name').prop('disabled', false);
      $('#fnt_first_name').prop('disabled', false);
    } else {// Type is Company or Other
      $('#fnt_company').prop('disabled', false);
      $('#fnt_last_name').prop('disabled', true);
      $('#fnt_first_name').prop('disabled', true);
    }
    // Save default text color
    text_field_color = $("#fnt_phone").css('color')
  });

  jQuery(function($) {
    $('#form_new_entity').on('submit', function() {
      var entity_type = $('#fnt_entity_type').val();
      var fiscal_id = $('#fnt_fiscal_id').val();
      var company = $('#fnt_company').val();
      var last_name = $('#fnt_last_name').val();
      var first_name = $('#fnt_first_name').val();
      var phone = $('#fnt_phone').val();
      var cellular = $('#fnt_cellular').val();
      var email = $('#fnt_email').val();
      var street_type = $('#fnt_street_type').val();
      var street_name = $('#fnt_street_name').val();
      var street_number = $('#fnt_street_number').val();
      var building = $('#fnt_building').val();
      var floor = $('#fnt_floor').val();
      var floor_office = $('#fnt_floor_office').val();
      var zipcode = $('#fnt_zipcode').val();
      var town = $('#fnt_town').val();
      var province = $('#fnt_province').val();
      var region = $('#fnt_region').val();
      var country = $('#fnt_country').val();
      var organization = $('#fnt_organization').val();

      if ((entity_type == "") || (fiscal_id == "")  || (phone == "")  ||
          (street_type == "") || (zipcode == "")  || (town == "")  || (province == "") ||
          (street_name == "") || (street_number == "")  || (region == "")  || (country == "") ||
          (organization == "")) {
        // Error: Mandatory fields
        alert('<%= I18n.t(:mandatory_subtitle) %>');
        return false;
      } else if (((last_name == "") && (first_name == "") && (company == "")) ||
                 ((last_name != "") && (first_name != "") && (company != ""))) {
        // Error: Name and company empty OR Name and company filled
        alert('<%= I18n.t("ag2_admin.entities.new_entity.entity_type_alert") %>');
        return false;
      } else if (fiscal_id.length < 8) {
        // Error: Fiscal Id too short
        alert('<%= I18n.t("ag2_admin.entities.new_entity.entity_fiscal_short") %>');
        return false;
      } else {
        // validate fiscal id
        var entity = $('#fnt_fiscal_id').val();
        if (entity == "")
          entity = "0";
        jQuery.getJSON('et_validate_fiscal_id_textfield/' + entity, function(data) {
          if (data.fiscal_id == "$err") {
            // Error color & focus
            $("#fnt_fiscal_id").css('color', 'red');
            alert('<%= I18n.t("ag2_admin.entities.fiscal_error") %>');
            $('#fnt_fiscal_id').select();
          }
          else {
            // Default color
            $("#fnt_fiscal_id").css('color', text_field_color);
            alert(data.fiscal_id + ': ' + data.fiscal_name + '.');
            // Hide the modal and exit
            $("#new-entity").modal('hide');
            alert('<%= I18n.t("ag2_admin.entities.new_entity.submit") %>');
          }
        });
      }
    });
    
    // when the #fnt_town field changes
    $("#fnt_town").change(function() {
      // make a POST call and replace the content
      var contact = $('#fnt_town').val();
      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_province_textfield_from_town/' + contact, function(data) {
        $("#fnt_province").val(data.province_id);
        $("#fnt_region").val(data.region_id);
        $("#fnt_country").val(data.country_id);
      })
      return false;
    });

    // when the #fnt_province field changes
    $("#fnt_province").change(function() {
      // make a POST call and replace the content
      var contact = $('#fnt_province').val();
      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_region_textfield_from_province/' + contact, function(data) {
        $("#fnt_region").val(data.region_id);
        $("#fnt_country").val(data.country_id);
      })
      return false;
    });

    // when the #fnt_zipcode field changes
    $("#fnt_zipcode").change(function() {
      // make a POST call and replace the content
      var contact = $('#fnt_zipcode').val();
      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_province_textfield_from_zipcode/' + contact, function(data) {
        $("#fnt_town").val(data.town_id);
        $("#fnt_province").val(data.province_id);
        $("#fnt_region").val(data.region_id);
        $("#fnt_country").val(data.country_id);
      })
      return false;
    });

    // when the #fnt_region field changes
    $("#fnt_region").change(function() {
      // make a POST call and replace the content
      var contact = $('#fnt_region').val();
      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_country_textfield_from_region/' + contact, function(data) {
        $("#fnt_country").val(data.id);
      })
      return false;
    });

    // when the #fnt_entity_type field changes
    $("#fnt_entity_type").change(function() {
      // make a POST call and replace the content
      var contact = $('#fnt_entity_type').val();
      if (contact == "")
        contact = "0";
      if (contact == "0") {// Empty type
        $('#fnt_company').prop('disabled', true);
        $('#fnt_last_name').prop('disabled', true);
        $('#fnt_first_name').prop('disabled', true);
      } else if (contact == "1") {// Type is Person
        $('#fnt_company').prop('disabled', true);
        $('#fnt_last_name').prop('disabled', false);
        $('#fnt_first_name').prop('disabled', false);
      } else {// Type is Company or Other
        $('#fnt_company').prop('disabled', false);
        $('#fnt_last_name').prop('disabled', true);
        $('#fnt_first_name').prop('disabled', true);
      }
      return false;
    });
  });
</script>

<div id="new-entity" class="modal fade" style="display: none;">
  <%= simple_form_for Entity.new, :url => ag2_admin.entities_path, :remote => :true, :html => { "data-type" => :json, :class => 'modal-footer-right form-inline', :id => 'form_new_entity' } do |f| %>
  <div class="modal-header">
    <a class="close" data-dismiss="modal">&#215;</a>
    <h3><%= I18n.t('ag2_admin.entities.new_entity.title') %></h3>
    <span class="shrinked"><%= I18n.t(:mandatory_subtitle) %></span>
  </div>
  <div class="modal-body">
    <%= f.input :entity_type_id, :autofocus => true, collection: EntityType.all(order: 'name'), :input_html => { :class => 'mid-text-field', :id => 'fnt_entity_type' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :fiscal_id, :input_html => { onkeyup: "caps(this)", :class => 'mid-text-field', :id => 'fnt_fiscal_id' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :company, required: true, :input_html => { :class => 'x-large-text-field', :id => 'fnt_company' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :last_name, required: true, :input_html => { :class => 'x-large-text-field', :id => 'fnt_last_name' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :first_name, required: true, :input_html => { :class => 'x-large-text-field', :id => 'fnt_first_name' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :phone, required: true, :input_html => { :class => 'mid-text-field', :id => 'fnt_phone' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :cellular, :input_html => { :class => 'mid-text-field', :id => 'fnt_cellular' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :email, :input_html => { :class => 'x-large-text-field', :id => 'fnt_email' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :street_type_id, required: true, collection: StreetType.all(order: 'street_type_code'), :input_html => { :class => 'mid-text-field', :id => 'fnt_street_type' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :street_name, required: true, :input_html => { :class => 'x-large-text-field', :id => 'fnt_street_name' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :street_number, required: true, :input_html => { :class => 'small-text-field number-text-field', :id => 'fnt_street_number' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :building, :input_html => { :class => 'mid-text-field', :id => 'fnt_building' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :floor, :input_html => { :class => 'small-text-field number-text-field', :id => 'fnt_floor' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :floor_office, :input_html => { :class => 'small-text-field number-text-field', :id => 'fnt_floor_office' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :zipcode_id, required: true, collection: @zipcodes, label_method: :second, value_method: :first, :input_html => { :class => 'large-text-field', :id => 'fnt_zipcode' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :town_id, required: true, collection: @towns, label_method: :second, value_method: :first, :input_html => { :class => 'x-large-text-field', :id => 'fnt_town' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :province_id, required: true, collection: @provinces, label_method: :second, value_method: :first, :input_html => { :class => 'x-large-text-field', :id => 'fnt_province' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :region_id, required: true, collection: @regions, label_method: :second, value_method: :first, :input_html => { :class => 'x-large-text-field', :id => 'fnt_region' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :country_id, required: true, collection: @countries, label_method: :second, value_method: :first, :input_html => { :class => 'large-text-field', :id => 'fnt_country' }, :label_html => { :class => 'form-label' } %>
    <% if session[:organization] != '0' %>
    <%= f.input :organization_id, collection: Organization.where("id = ?", "#{session[:organization]}").all, input_html: { class: 'x-large-text-field', :id => 'fnt_organization' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% elsif current_user.organizations.count > 0 %>
    <%= f.input :organization_id, collection: current_user.organizations.order('name'), input_html: { class: 'x-large-text-field', :id => 'fnt_organization' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% else %>
    <%= f.input :organization_id, collection: Organization.order('name'), input_html: { class: 'x-large-text-field', :id => 'fnt_organization' }, label_html: { class: 'form-label' } %>
    <% end %>
  </div>
  <div class="modal-footer">
    <%= f.submit I18n.t('ag2_admin.entities.new_entity.btn_new'), disable_with: t("activerecord.attributes.pre_reading.loading"), :class => "btn btn-primary" %>
    <a class="btn btn-primary" data-dismiss="modal" href="#"><%= t :close_button %></a>
  </div>
  <% end %>
</div>
