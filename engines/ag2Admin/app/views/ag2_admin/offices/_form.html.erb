<script>
  var _thisForm = '';

  $(document).ready(function() {
    $('.sel2').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; },
      allowClear: true
    });
    // Initialize form variable
    _thisForm = $("#office_office_code").closest('form')[0];
  });

  jQuery(function($) {
    // when the #office_town_id field changes
    $("#office_town_id").change(function() {
      // make a POST call and replace the content
      var office = $('select#office_town_id :selected').val();
      if (office == "")
        office = "0";
      jQuery.getJSON('update_province_textfield_from_town/' + office, function(data) {
        $("#office_province_id").select2("val", data.id);
      })
      return false;
    });

    // when the #office_zipcode_id field changes
    $("#office_zipcode_id").change(function() {
      // make a POST call and replace the content
      var office = $('select#office_zipcode_id :selected').val();
      var code = $('#office_office_code').val();
      if (office == "")
        office = "0";
      jQuery.getJSON('update_province_textfield_from_zipcode/' + office, function(data) {
        $("#office_town_id").select2("val", data.town_id);
        $("#office_province_id").select2("val", data.province_id);
        if (code == "")
          $("#office_office_code").val(data.zipcode);
      })
      return false;
    });

    // when #generate_code_btn is clicked
    $("#generate_code_btn").click(function() {
      // make a POST call and replace the content
      var office = $('select#office_zipcode_id :selected').val();
      if (office == "")
        office = "0";
      jQuery.getJSON('update_code_textfield_from_zipcode/' + office, function(data) {
        $("#office_office_code").val(data.zipcode);
      })
      return false;
    });

    // when the #office_max_order_total field changes
    $("#office_max_order_total").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate(_this);
      return false;
    });

    // when the #office_max_order_price field changes
    $("#office_max_order_price").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate(_this);
      return false;
    });

    // when the #office_overtime_pct field changes
    $("#office_overtime_pct").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate(_this);
      return false;
    });
    
    // when submit    
    $(_thisForm).on('submit', function() {
      // Must change decimal separator, if comma, in numeric fields
      var total = $('#office_max_order_total').val().replace(",", ".");
      var price = $('#office_max_order_price').val().replace(",", ".");
      var overtime = $('#office_overtime_pct').val().replace(",", ".");
      $('#office_max_order_total').val(total);
      $('#office_max_order_price').val(price);
      $('#office_overtime_pct').val(overtime);
    });
    
    // Recalculate amounts & prices
    function recalculate(_this) {
      // make a POST call and replace the content
      var total = $('#office_max_order_total').val();
      if (total == "")
        total = "0";
      var price = $('#office_max_order_price').val();
      if (price == "")
        price = "0";
      var overtime = $('#office_overtime_pct').val();
      if (overtime == "")
        overtime = "0";
      // Right formatted for passing as REST parameter
      total = parseInt(right_number(total, 2) * 100);
      price = parseInt(right_number(price, 4) * 10000);
      overtime = parseInt(right_number(overtime, 2) * 100);
      jQuery.getJSON('co_update_total_and_price/' + total + '/' + price + '/' + overtime, function(data) {
        $('#office_max_order_total').val(data.total);
        $('#office_max_order_price').val(data.price);
        $('#office_overtime_pct').val(data.overtime);
      });
    }
  });
</script>

<%= simple_form_for @office, :html => {:class => 'form-vertical well' } do |f| %>
<%= f.error_notification %>
<%= display_base_errors resource %>
<%= f.input :name, :required => true, :autofocus => true, :input_html => { :class => 'x-large-text-field' }, :label_html => { :class => 'form-label' } %>
<%= f.association :company, collection: Company.all(order: 'name'), :input_html => { :class => 'x-large-text-field' }, :label_html => { :class => 'form-label' } %>
<div>
  <label class="multi-field-label-two"> <%= f.input :office_code, :input_html => { :class => 'x-large-text-field' }, :label_html => { :class => 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :phone, :input_html => { :class => 'x-large-text-field' }, :label_html => { :class => 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"><%= f.input :fax, :input_html => { :class => 'x-large-text-field' }, :label_html => { :class => 'form-label' } %></label>
  <label class="multi-field-label-two"><%= f.input :cellular, :input_html => { :class => 'x-large-text-field' }, :label_html => { :class => 'form-label' } %></label>
</div>
<div>
  <label class="multi-field-label-three-thinner"> <%= f.association :street_type, collection: StreetType.all(order: 'street_type_code'), :input_html => { :class => 'x-large-text-field' }, :label_html => { :class => 'form-label' } %> </label>
  <label class="multi-field-label-three-wider"> <%= f.input :street_name, :input_html => { :class => 'x-large-text-field' }, :label_html => { :class => 'form-label' } %> </label>
  <label class="multi-field-label-three-thinner"> <%= f.input :street_number, :input_html => { :class => 'large-text-field number-text-field' }, :label_html => { :class => 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-three-wider"> <%= f.input :building, :input_html => { :class => 'x-large-text-field' }, :label_html => { :class => 'form-label' } %> </label>
  <label class="multi-field-label-three-thinner"> <%= f.input :floor, :input_html => { :class => 'large-text-field number-text-field' }, :label_html => { :class => 'form-label' } %> </label>
  <label class="multi-field-label-three-thinner"> <%= f.input :floor_office, :input_html => { :class => 'large-text-field number-text-field' }, :label_html => { :class => 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-three"> <%= f.association :zipcode, collection: Zipcode.all(order: 'zipcode'), :input_html => { :class => 'x-large-text-field sel2' }, :label_html => { :class => 'form-label' } %> </label>
  <label class="multi-field-label-three"> <%= f.association :town, collection: Town.all(order: 'name'), :input_html => { :class => 'x-large-text-field sel2' }, :label_html => { :class => 'form-label' } %> </label>
  <label class="multi-field-label-three"> <%= f.association :province, collection: Province.all(order: 'name'), :input_html => { :class => 'x-large-text-field sel2' }, :label_html => { :class => 'form-label' } %> </label>
</div>
<%= f.input :email, :input_html => { :class => 'large-text-field' }, :label_html => { :class => 'form-label-under-sel2' } %>
<% if (current_user.has_role? :Administrator) || (current_user.has_role? :ag2Human_User) || (current_user.has_role? :ag2Human_Guest) %>
<%= f.input :nomina_id, :input_html => { :class => 'small-text-field' }, :label_html => { :class => 'form-label' } %>
<% end %>
<!-- Commercial info -->
<h4><%=t 'ag2_admin.offices.commercial_info' %></h4>
<div>
  <label class="multi-field-label-two"> <%= f.input :max_order_total, as: :string, input_html: { value: (number_with_precision(f.object.max_order_total, precision: 2) if f.object.max_order_total), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :max_order_price, as: :string, input_html: { value: (number_with_precision(f.object.max_order_price, precision: 4) if f.object.max_order_price), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<!-- Employment info -->
<h4><%=t 'ag2_admin.offices.employment_info' %></h4>
<div>
  <label class="multi-field-label-two"> <%= f.input :overtime_pct, as: :string, input_html: { value: (number_with_precision(f.object.overtime_pct, precision: 2) if f.object.overtime_pct), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<!-- Notifications -->
<% if can? :crud, OfficeNotification %>
  <table class="form-table">
    <tbody>
      <tr class="form-tr underlined-tr">
        <td class="form-td-two left-winged">
          <h4><%= t 'ag2_admin.offices.notifications_info' %></h4>
        </td>
        <td class="form-td-two right-winged">
          <%= link_to_add_fields(t("ag2_admin.offices.btn_new_notification"), f, :office_notifications, "notification_fields", "new-notification-fields", class: "btn btn-warning fnt-new-notification-btn") %>
        </td>
      </tr>
    </tbody>
  </table>
  <%= render 'notifications_table', f: f %>
<% end %>
<!-- Buttons -->
<table class="form-table">
  <tbody>
    <tr class="form-tr">
      <td class="form-td-two left-winged"> <%= f.button :submit, :class => 'btn-primary' %> </td>
      <td class="form-td-two right-winged"><a href="#" id="generate_code_btn" class="btn btn-warning"><%= t 'ag2_admin.offices.generate_code_btn'%></a></td>
    </tr>
  </tbody>
</table>
<% end %>
