<script>
  var _f = '';
  var invalidIBAN = '<%= t("activerecord.errors.models.company_bank_account.iban_invalid") %>';
  var tryAgain = '<%= t("should_try_again") %>';

  $(document).ready(function() {
    $('.wsel2').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; },
      dropdownCssClass: 'shrinked',
      dropdownAutoWidth: true,
      containerCssClass: 'sub-select2-field'
    });
    $('.idatepicker').datepicker({
      format : 'dd/mm/yyyy',
      weekStart : 1
    }).on('changeDate', function(e){
      $('.idatepicker').datepicker('hide');
    });
    // Retrieves parent values
    _f = $(".fnt-class").closest('form')[0];
  });

  jQuery(function($) {
    // when the .fnt-bank field changes
    $(".fnt-bank").change(function() {
      // preserve the current object
      var _this = (this);
      // make a POST call and replace the content
      var bank = $(this).closest('tr').find('select.fnt-bank').val();
      if (bank == "") bank = "0";
      jQuery.getJSON('co_update_office_select_from_bank/' + bank, function(data) {
        var o = data.office;
        $(_this).closest('tr').find('.fnt-office').removeClass('wsel2');
        $(_this).closest('tr').find('.fnt-office').select2('destroy');
        $(_this).closest('tr').find('.fnt-office').html("");
        $(_this).closest('tr').find('.fnt-office').append($('<option></option>').val("").html(""));
        if (!o.length) {
          $.each(data, function(id, option) {
            if (id == 'office' && option != "") {
              $(_this).closest('tr').find('.fnt-office').append($('<option></option>').val(option[0]).html(option[1] + " " + option[2] + " " + option[3]));
            }
          });
        } else {
          $.each(o, function(id, option) {
            $(_this).closest('tr').find('.fnt-office').append($('<option></option>').val(option[0]).html(option[1] + " " + option[2] + " " + option[3]));
          });
        }
        $(_this).closest('tr').find('.fnt-office').addClass('wsel2');
        $(_this).closest('tr').find('.fnt-office').select2({
          formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; },
          dropdownCssClass: 'shrinked',
          dropdownAutoWidth: true,
          containerCssClass: 'sub-select2-field'
        });
      });
      return false;
    });

    // when #check_iban_btn is clicked
    $(".check_iban_btn").click(function() {
      // var country = $(this).closest('tr').find('select.fnt-country').val();
      // var dc = $(this).closest('tr').find('.fnt-iban-dc').val();
      // var bank = $(this).closest('tr').find('select.fnt-bank').val();
      // var office = $(this).closest('tr').find('select.fnt-office').val();
      // var account = $(this).closest('tr').find('.fnt-account').val();
      var iban = $(this).closest('tr').find('.fnt-iban').val();
      var isValidIBAN = validate_iban_new(invalidIBAN, tryAgain, iban);
      return false;
    });

    /*
     * Very special function!
     * This one re-calculate table totals after delete an item
     * When the .icon-trash clicked
     * Replace behavior of link_to_remove_fields
     * (the same was done in nested_si.js)
     */
    $(".icon-trash").click(function() {
      remove_fields(this);
    });
  });
</script>

<table id="accounts-table" class="table table-condensed table-striped shrinked fixed">
  <!-- class -->
  <col width="10%" />
  <!-- country  -->
  <!--<col width="7%" />-->
  <!-- iban dc  -->
  <!--<col width="4%" />-->
  <!-- bank  -->
  <!--<col width="8%" />-->
  <!-- bank office  -->
  <!--<col width="8%" />-->
  <!-- account no  -->
  <!--<col width="12%" />-->
  <!-- iban -->
  <col width="29%" />
  <!-- holder name -->
  <col width="29%" />
  <!-- holder fiscal_id -->
  <col width="8%" />
  <!-- bank_suffix -->
  <col width="5%" />
  <!-- starting_at -->
  <col width="7%" />
  <!-- ending_at -->
  <col width="7%" />
  <!-- button -->
  <col width="5%" />
  <thead>
    <%= render 'accounts_header' %>
  </thead>
  <tbody>
    <%= f.simple_fields_for :company_bank_accounts, defaults: { input_html: { class: 'sub-form' } } do |i| %>
    <tr class="fields">
      <td><%= i.association :bank_account_class, label: false, wrapper: false, collection: @classes, input_html: { class: 'wsel2 fnt-class' } %></td>
      <!--<td><%#= i.association :country, label: false, wrapper: false, label_method: :full_name, value_method: :id, input_html: { class: 'wsel2 fnt-country' } %></td>-->
      <!--<td><%#= i.input :iban_dc, label: false, wrapper: false, input_html: { onkeyup: "caps(this)", class: 'sub-alfanumeric-text-field fnt-iban-dc', maxlength: 2 } %></td>-->
      <!--<td><%#= i.association :bank, label: false, wrapper: false, collection: @banks, input_html: { class: 'wsel2 fnt-bank', maxlength: 4 } %></td>-->
      <!--<td><%#= i.association :bank_office, label: false, wrapper: false, collection: @offices, input_html: { class: 'wsel2 fnt-office', maxlength: 4 } %></td>-->
      <!--<td><%#= i.input :account_no, label: false, wrapper: false, input_html: { class: 'sub-alfanumeric-text-field fnt-account', maxlength: 12 } %></td>-->
      <td><%= i.input :iban, label: false, wrapper: false, input_html: { onkeydown: "only_digit_or_letter(event)", onkeyup: "caps(this)", class: 'sub-alfanumeric-text-field fnt-iban', minlength: 4, maxlength: 34 } %></td>
      <td><%= i.input :holder_name, label: false, wrapper: false, input_html: { onkeyup: "caps(this)", class: 'sub-alfanumeric-text-field fnt-name', maxlength: 40 } %></td>
      <td><%= i.input :holder_fiscal_id, label: false, wrapper: false, input_html: { onkeyup: "caps(this)", class: 'sub-alfanumeric-text-field fnt-fiscal-id' } %></td>
      <td><%= i.input :bank_suffix, label: false, wrapper: false, input_html: { onkeyup: "caps(this)", class: 'sub-alfanumeric-text-field fnt-suffix', maxlength: 3 } %></td>
      <td><%= i.input :starting_at, label: false, wrapper: false, start_year: Time.now.year - 100, end_year: Time.now.year + 100, as: :string, input_html: { value: (i.object.starting_at.strftime("%d/%m/%Y") if i.object.starting_at), class: 'sub-alfanumeric-text-field idatepicker fnt-starting-at' } %></td>
      <td><%= i.input :ending_at, label: false, wrapper: false, start_year: Time.now.year - 100, end_year: Time.now.year + 100, as: :string, input_html: { value: (i.object.ending_at.strftime("%d/%m/%Y") if i.object.ending_at), class: 'sub-alfanumeric-text-field idatepicker fnt-ending-at' } %></td>
      <% if @breadcrumb == 'create' || @breadcrumb == 'update' %>
      <td>
        <%= link_to_remove_fields('<i class="icon-trash"></i>'.html_safe, i) %>
        <a href="#" class="check_iban_btn" title="<%=t('validate') %>"><i class="icon-ok"></i></a>
      </td>
      <% end %>
    </tr>
    <% end %>
  </tbody>
</table>
