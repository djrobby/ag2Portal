if @offer_request.nil?
	return
end
if @items.count <= 0
	return
end

# Localization for numbers
delimiter = I18n.locale == :es ? "." : ","
suppliers = @suppliers.count <= 0 ? 1 : @suppliers.count

# Choose report layout depending on whether there are suppliers
if @suppliers.count <= 0
	report.set_layout tlf: 'reports/offer_request_form_ns', layout_options: { default: true }
else
	report.set_layout tlf: 'reports/offer_request_form', layout_options: { default: true }
end

#
# Report events
#
# On page create
report.events.on :page_create do |e|
	# Set page-number
	e.page.item(:page_no).value(e.page.no)
end
# On report generate
report.events.on :generate do |e|
	e.pages.each do |page|
		# Set total-page-number
		page.item(:page_count).value(e.report.page_count / suppliers)
	end
end

#
# List configuration (stores & events)
#
report.layout.config.list(:default) do |c|
	# Define the variables used in list
	c.use_stores page_quantity: 0, page_amount: 0, page_tax: 0

	# On list page footer insertion
	c.events.on :page_footer_insert do |e|
		# Display page sutotals
		e.section.item(:page_subtotals).value(I18n.t("every_report.page_subtotals"))
		e.section.item(:page_quantity).value(number_with_precision(e.store.page_quantity, precision: 4))
		e.section.item(:page_amount).value(number_with_precision(e.store.page_amount, precision: 4))
		e.section.item(:page_tax).value(number_with_precision(e.store.page_tax, precision: 4))
		# Initialize subtotals to 0
		e.store.page_quantity = 0
		e.store.page_amount = 0
		e.store.page_tax = 0
	end
	# On list footer insertion
	c.events.on :footer_insert do |e|
		# Display list totals
		e.section.item(:subtotal_c).value(I18n.t("activerecord.attributes.offer_request.subtotal"))
		e.section.item(:bonus_c).value(I18n.t("activerecord.attributes.offer_request.bonus") + " " + number_with_precision(@offer_request.discount_pct, precision: 2) + "%")
		e.section.item(:taxable_c).value(I18n.t("activerecord.attributes.offer_request.taxable_c"))
		e.section.item(:taxes_c).value(I18n.t("activerecord.attributes.offer_request.taxes"))
		e.section.item(:total_c).value(I18n.t("activerecord.attributes.offer_request.total").upcase)
		e.section.item(:subtotal).value(number_with_precision(@offer_request.subtotal, precision: 2, delimiter: delimiter))
		e.section.item(:bonus).value(number_with_precision(@offer_request.bonus, precision: 2, delimiter: delimiter))
		e.section.item(:taxable).value(number_with_precision(@offer_request.taxable, precision: 2, delimiter: delimiter))
		e.section.item(:taxes).value(number_with_precision(@offer_request.taxes, precision: 2, delimiter: delimiter))
		e.section.item(:total).value(number_with_precision(@offer_request.total, precision: 2, delimiter: delimiter))
		# Display tax details
		e.section.item(:tax_details).value(I18n.t("activerecord.attributes.offer_request.tax_breakdown"))
		@offer_request.tax_breakdown.each do |tb|
			e.section.item(:tax_list).value(tb[0].to_s.rjust(2, '0') + " " + tb[1] + ": " +
											number_with_precision(tb[3], precision: 2, delimiter: delimiter) + " Ã— " +
											number_with_precision(tb[2], precision: 2, delimiter: delimiter) + "% = " +
											number_with_precision(tb[4], precision: 2, delimiter: delimiter) + "\n")
		end
	end
end

#
# Choose report partials depending on whether there are suppliers
#
if @suppliers.count > 0
	# One form for each supplier
	@suppliers.each do |s|
		report.partial! 'offer_request_form_header_footer', s: s	# passing current s
		report.partial! 'offer_request_form_list'
	end
else
	# No suppliers
	report.partial! 'offer_request_form_ns_header_footer'
	report.partial! 'offer_request_form_list'
end
