if @request_items_report.blank?
	return
end

# Localization for numbers
delimiter = I18n.locale == :es ? "." : ","

report.set_layout tlf: 'reports/request_items_report', layout_options: { default: true }

#
# Report events
#
# On page create
report.events.on :page_create do |e|
	# Set page-number
	e.page.item(:page_no).value(e.page.no)
end
# On report generate
report.events.on :generate do |e|
	e.pages.each do |page|
		# Set total-page-number
		page.item(:page_count).value(e.report.page_count)
	end
end

#
# List configuration (stores & events)
#
report.layout.config.list(:default) do |c|
	# Define the variables used in list
	c.use_stores page_rows: 0, p_quantityfull: 0, p_pricefull: 0, p_amountfull: 0, p_taxfull: 0

	# On list page footer insertion
	c.events.on :page_footer_insert do |e|
		# Display page sutotals
		e.section.item(:sum_rows_title).value(I18n.t("ag2_purchase.ag2_purchase_track.request_report.sum_rows_title"))
		e.section.item(:sum_rows).value(e.store.page_rows)
		e.section.item(:full_total_c).value I18n.t("ag2_purchase.ag2_purchase_track.every_report.full_total")
		e.section.item(:quantity_full).value(number_with_precision(e.store.p_quantityfull, precision: 4))
		e.section.item(:price_full).value(number_with_precision(e.store.p_pricefull, precision: 4))
		e.section.item(:amount_full).value(number_with_precision(e.store.p_amountfull, precision: 4))
		e.section.item(:tax_full).value(number_with_precision(e.store.p_taxfull, precision: 4))		

	end
end

# New page & start
report.start_new_page

# Page header
report.page.values report_title: I18n.t("ag2_purchase.ag2_purchase_track.request_report.report_title")
report.page.values from_title: I18n.t("every_report.from_title")
report.page.values to_title: I18n.t("every_report.to_title")
report.page.values from: @from
report.page.values to: @to
# Page footer
report.page.values(printed_at: formatted_timestamp(Time.now),
				   pt: I18n.t("every_report.pt"),
				   pd: I18n.t("every_report.pd"))


# List header
report.page.list(:default).header do |header|
	report.page.values request_no_c: I18n.t("activerecord.attributes.offer_request.request_no")
	report.page.values request_date_c: I18n.t("activerecord.attributes.offer_request.request_date")
	report.page.values deadline_date_c: I18n.t("activerecord.attributes.offer_request.deadline_date")
	report.page.values approved_offer_c: I18n.t("activerecord.attributes.offer_request.approved_offer")
	report.page.values total_c: I18n.t("activerecord.attributes.offer_request.total")
	report.page.values approval_date_c: I18n.t("activerecord.attributes.offer_request.approval_date")
	report.page.values approver_c: I18n.t("activerecord.attributes.offer_request.approver")
	header.item(:full_code_c).value I18n.t("activerecord.attributes.offer_request_item.product_c")
	header.item(:description_c).value I18n.t("activerecord.attributes.offer_request_item.description_c")
	header.item(:quantity_c).value I18n.t("activerecord.attributes.offer_request_item.quantity_c")
	header.item(:price_c).value I18n.t("activerecord.attributes.offer_request_item.price_c")
	header.item(:amount_c).value I18n.t("activerecord.attributes.offer_request_item.amount_c")
	header.item(:tax_c).value I18n.t("activerecord.attributes.offer_request_item.tax_c")
end

request_number = @request_items_report.first.offer_request.request_no

# List detail
@request_items_report.each do |i|

			if !i.offer_request.request_no.blank? && (i.offer_request.request_no != request_number)
				report.page.list(:default).page_break
				report.page.list(:default) do |list|
					list.store.page_rows = 0
					list.store.p_quantityfull = 0
					list.store.p_pricefull = 0
					list.store.p_amountfull = 0
					list.store.p_taxfull = 0
				end
				request_number = i.offer_request.request_no
			end

	report.page.list(:default).add_row do |row|
	report.page.values request_no: i.offer_request.request_no
	report.page.values request_date: formatted_date(i.offer_request.request_date) unless i.offer_request.request_date.blank?
	report.page.values deadline_date: formatted_date(i.offer_request.deadline_date) unless i.offer_request.deadline_date.blank?
	report.page.values approved_offer: i.offer_request.approved_offer.partial_name unless i.offer_request.approved_offer.blank?
	report.page.values total: number_with_precision(i.offer_request.total, precision: 2, delimiter: I18n.locale == :es ? "." : ",") unless i.offer_request.total.blank?
	report.page.values approval_date: formatted_timestamp(i.offer_request.approval_date.utc.getlocal) unless i.offer_request.approval_date.blank?
	report.page.values approver: i.offer_request.approver.email unless i.offer_request.approver.blank?
		row.item(:full_code).value i.product.full_code
		row.item(:description).value i.description
		row.item(:quantity).value number_with_precision(i.quantity, precision: 4)
		row.item(:price).value number_with_precision(i.price, precision: 4)
		row.item(:amount).value number_with_precision(i.amount, precision: 4)
		row.item(:tax).value number_with_precision(i.tax, precision: 4)	

	end
	# Store page subtotals
  report.page.list(:default) do |list|
		list.store.page_rows += 1
		list.store.p_quantityfull += i.quantity
		list.store.p_pricefull += i.price
		list.store.p_amountfull += i.amount
		list.store.p_taxfull += i.tax
	end
end

