var form = $("form.simple_bill");
var content = '';
    //content += '<h1>Initial Billing</h1>';
    //content += `<tbody>`;
<% unless @bill.blank? or @bill.invoices.blank?  %>
    <% @bill.invoices.each_with_index do |invoice, index| %>

    content += '<h5><%= t("activerecord.attributes.contracting_request.invoice_number") %>: <%= invoice.try(:invoice_no) %></h5>';
    content += '<h5><%= invoice.try(:biller).try(:name) %> | <%= t("activerecord.attributes.contracting_request.fiscal_id") %> <%= invoice.try(:biller).try(:fiscal_id) %></h5>';
    content += '<h5><%= t("activerecord.attributes.contracting_request.payment_method") %> </h5>';

    content += `<table class="table table<%= index %>">`;
    content += `<tbody>`;

    content+= '<tr><th><%= t("activerecord.attributes.contracting_request.code") %></th><th><%= t("activerecord.attributes.contracting_request.subcode") %></th><th><%= t("activerecord.attributes.contracting_request.quantity") %></th><th><%= t("activerecord.attributes.contracting_request.price") %></th><th><%= t("activerecord.attributes.contracting_request.amount") %></th><th><%= t("activerecord.attributes.contracting_request.tax") %></th><th><%= t("activerecord.attributes.contracting_request.discount") %></th><th><%= t("activerecord.attributes.contracting_request.discount_pct") %></th><th><%= t("activerecord.attributes.contracting_request.total") %></th></tr>';

    <% InvoiceItem.where(invoice_id: invoice.id).each do |item| %>
      content+= '<tr class="in_item in_item<%= item.id %>">';
      content+= '<td><%= item.code %></td>';
      content+= '<td><%= item.subcode %></td>';
      content+= '<td><input class="mid-text-field input-sm" name="invoice_item[<%= item.id %>]quantity" type="number" value="<%= item.quantity %>"></td>';
      content+= '<td><input class="mid-text-field input-sm" name="invoice_item[<%= item.id %>]price" type="number" value="<%= item.price %>"></td>';
      content+= '<td class="amount td-amount<%= item.id %>"><%= item.amount %></td>';
      content+= '<td><%= escape_javascript(collection_select("invoice_item["+item.id.to_s+"]", :tax_type_id, TaxType.where("expiration >= 'Date.today' OR expiration IS NULL").order('description'), :id, :tax, {include_blank: true, selected: item.tax_type_id}, {:class=>"x-large-text-field"})) %></td>';
      content+= '<td><input class="mid-text-field input-sm" name="invoice_item[<%= item.id %>]discount" type="number" value="<%= item.discount %>"></td>';
      content+= '<td class="inp"><input class="mid-text-field input-sm" name="invoice_item[<%= item.id %>]discount_pct" type="number" value="<%= item.discount_pct %>"></td>';
      content+= '<td class="total total<%= item.id %>"><%= item.total %></td>';
      content+= '</tr>';

    <% end %> /*End invoice.invoice_items*/

      /*Add Subtotal etc dinamyc*/
      content+= '<tr class="subtotal">';
      content+= '<td colspan="7" class="no-boder"></td>';
      content+= '<td class="subtotal black-border"><b><%= t("activerecord.attributes.contracting_request.subtotal").upcase %></b></td>';
      content+= '<td class="subtotal<%= index %> black-border"><%= invoice.subtotal %></td>';
      content+= '</tr>';

    <% invoice.tax_breakdown.each do |tax| %>
      <% if tax[0] != TaxType.exempt.tax %>
        content+= '<tr class="breakdown">';
        content+= '<td colspan="3" class="no-boder"></td>';
        content+= '<td class="no-boder" colspan="2"><b><%= t("activerecord.attributes.contracting_request.base_imp") %>: </b> <%= tax[1] %></td>';
        content+= `<td class="no-boder"><%= "#{pluralize(tax[3], 'artículo')}"  %></td>`;
        content+= '<td><b>IVA (<%= tax[0] %>%)</b></td>';
        content+= '<td><%= tax[2] %></td>';
        content+= '</tr>';
      <% end %>
    <% end %>

    content+= '<tr>';
    content+= '<td colspan="7" class="black-border"></td>';
    content+= '<td class="black-border"><b>TOTAL</b></td>';
    content+= '<td class="black-border total_invoice"><%= invoice.total %></td>';
    content+= '</tr>';

    /*End Subtotal dinamyc*/

    content += "</tbody>";
    content += "</table>";

    content += '<hr style="border-width: 2px; border-top: 1px solid #000000;">';

    // form.attr("action", "bills/<%= @bill.id %>")

  <% end %> /*End Bill.invoices*/
<% end %> /*End if*/
form.append(content);

$("#new-bill").modal("hide");
$("#bill-supply-modal").modal("show");

$(document).ready(function() {
  $('#bill-supply-modal').on('hidden', function () {
    $("#bills").html("<%= escape_javascript(render('show_tab_bills')) %>");
  })
  $("#readings").html("<%= escape_javascript(render('show_tab_readings')) %>");

  $("#bill-suply-form input, #bill-suply-form select").change(function() {


    /*$('td select').get(0).value; option checkbox*/
    /*this - devuelve elemento atributo name invoice_item[47]quantity
    this.value -> valor*/

    /*Get id element*/
    var _id = this.name.substring(this.name.indexOf("[")+1, this.name.indexOf("]")); //Obtengo el número de name

    /*Saber que tipo de input ha cambiado*/
    var str = this.name.substring(this.name.length-3 ,this.name.length);

    /*Valor cambiado*/
    var value = this.value;

    /*Change Total and Subtotal*/
    /*Delete Taxs and append tax en función de cuanto son*/

    /*Get all values*/
    var _tax = $(`#invoice_item_${_id}_tax_type_id`).find(":selected").text(); //Obtengo el Impuesto


    var _quantity = $(`.in_item${_id} input`).get(0).value;
    var _price = $(`.in_item${_id} input`).get(1).value;
    var _discount = $(`.in_item${_id} input`).get(2).value;
    var _discountpct = $(`.in_item${_id} input`).get(3).value;

    var index_table = $(`.in_item${_id} input`).closest("table").attr('class').substring(11, ($(`.in_item${_id} input`).closest("table").attr('class').length)); //Get number table Cambiada
    var invoice = "." + $(`.in_item${_id} input`).closest("table").attr('class').substring(6, ($(`.in_item${_id} input`).closest("table").attr('class').length)); //Get class identifier table Cambiada


    if (str == "unt"){ //discount
      _discount = value;
    }
    if (str == "pct"){ //discount_pct
      _discountpct = value;
    }
    if (str == "ice"){ //price
      _price = value;
    }
    if (str == "ity"){ //quantity
      _quantity = value;
    }
    if (str == "id]"){ //Select Option Impuesto and Update Attributte
      var opt_total = $(`#invoice_item_${_id}_tax_type_id option`).length; //get total option

      //Remove Attributte Selected DOM
      for (var opt = 0; opt < opt_total; opt++){
        if ($(`#invoice_item_${_id}_tax_type_id option`)[opt].hasAttribute("selected")){
          $(`#invoice_item_${_id}_tax_type_id option`)[opt].removeAttribute('selected');
        }
      }

      //Add Attribute selected value changed
      $(`#invoice_item_${_id}_tax_type_id`).find(":selected").attr("selected", "selected");

    }

    var net_price = parseFloat(_price) - parseFloat(_discount);
    var amount =  parseFloat(_quantity) * net_price;
    var bonus;

    if (_discountpct == undefined){
      bonus = 0;
    } else {
      bonus = (parseFloat(_discountpct)/100) * amount;
    }

    var total = amount - bonus;

    $(`.total${_id}`).get(0).innerHTML = total.toFixed(2);
    $(`.td-amount${_id}`).get(0).innerHTML = amount.toFixed(2);



    /*SUBTOTAL*/
    /*Get Table*/
    //$(`.in_item${_id} input`).closest("table"); //Get element table parent equivalente a INVOICE
    //$(`.in_item${_id} input`).closest("table").attr('class'); //Get class element table
    var total_invoiceitem = $(invoice).find('tr.in_item').length; //Get cada InvoiceItem []Array Total (ej 2)
    //var subtotal_arra = $(invoice).find('td.total'); //Get Array with totales de cada InvoiceItem de cada Invoice
    var subtotal = 0.0;
    for (var k=0; k < total_invoiceitem; k++){
      subtotal = subtotal + parseFloat($(invoice).find('td.amount')[k].textContent);
    }
    $(`.subtotal${index_table}`).get(0).innerHTML = subtotal.toFixed(2);
    /*END SUBTOTAL*/

    /*TAXES*/

    var total_taxes = $(invoice).find('tr.in_item select option').length; // Get Total all option INVOICE

    //Get All taxes selected InvoicesItem
    var taxes = []
    for (var p = 0; p < total_invoiceitem; p++) {
      taxes[p] = $(invoice).find('tr.in_item select option:selected')[p].textContent;
    }

    //Get Cada InvoiceItem Selected con su Base imponible
    var taxes_value = [];
    for (var t = 0; t < total_invoiceitem; t++) {
      //taxes_value[t] = {tax: $(invoice).find('tr.in_item select option:selected')[t], value:    }
      taxes_value[t] = {tax: $(invoice).find('tr.in_item select option:selected')[t].textContent, base_imp: $(invoice).find('tr.in_item td.amount')[t].textContent } //Array Object {Tax: "1.5", Value: "56"}

      //taxes[p] = $(invoice).find('tr.in_item select option')[p].textContent;
    }

    /*AGRUPAR*/
    //Todos los impuestos posibles que hay
    var uniqueTaxes = [];
    $.each(taxes, function(i, el){
      if($.inArray(el, uniqueTaxes) === -1) uniqueTaxes.push(el); //Si valor -1 (No encontrado) -> Push
    });

    var array_taxes = [];
    for (var z=0; z < uniqueTaxes.length; z++) {

      var total_tax = 0;
      var articulo = 0;
      var str_item = "<%= t('activerecord.attributes.contracting_request.item') %>";
      for (var zx=0; zx < taxes_value.length; zx++){
        if (uniqueTaxes[z] == taxes_value[zx].tax ){
          total_tax += parseFloat(taxes_value[zx].base_imp);
          articulo++;
        }
      }

      if (articulo > 1) {
        str_item = "<%= t('activerecord.attributes.contracting_request.items') %>";
      }
      /*Hacer porcentaje*/

      var baseim = total_tax; //BaseImponible

      total_tax = ((total_tax * parseFloat(uniqueTaxes[z])) / 100).toFixed(4); //Percentage Calculated for each Group

      array_taxes[z] = {tax: uniqueTaxes[z], percentage_total: total_tax, base_imp: baseim, item: {quantity: articulo, item: str_item }   };

    }

    var invoice_total = 0; //Cálculo each INVOICE total

    $(invoice + " .breakdown").remove();

    for (var taxes = 0; taxes < array_taxes.length; taxes++) {
      if (isNaN(array_taxes[taxes].percentage_total) ){
        array_taxes[taxes].percentage_total = 0;
      }

      if (array_taxes[taxes].tax == ""){
        array_taxes[taxes].tax = 0;
      }

      $(invoice + " .subtotal" ).first().after(`<tr class="breakdown"><td colspan="3" class="no-boder"></td><td class="no-boder" colspan="2" ><b><%= t("activerecord.attributes.contracting_request.base_imp") %>: </b>${array_taxes[taxes].base_imp}</td><td class="no-boder">${array_taxes[taxes].item.quantity} ${array_taxes[taxes].item.item}</td><td><b>IVA (${array_taxes[taxes].tax}%)</b></td><td>${array_taxes[taxes].percentage_total}</td></tr>` ); //Add tr element breakdown

      invoice_total += parseFloat(array_taxes[taxes].percentage_total);

    }

    /*END TAXES*/

    /*TOTAL INVOICE*/
    invoice_total += subtotal;
    $(invoice + " .total_invoice").get(0).innerHTML = invoice_total.toFixed(4);

  });

    // update fields new-bill modal form
    $("#bills_billing_period_id").select2("val",null)
    $("#bills_invoice_date").val("")
    $("#bills_payday_limit").val("")
    $("#bills_billing_period_id option[value='<%= @reading.billing_period_id %>']").remove()
    $("#bill-supply-modal").on("hidden.bs.modal", function(){
    $("form.simple_bill").html("");
  });

});
