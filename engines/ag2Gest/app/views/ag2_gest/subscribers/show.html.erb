<% session[:return_to_subscriber] = I18n.t('ag2_gest.subscribers.show.return_to') %>
<% session[:return_to_subscriber_url] = "#{request.protocol}#{request.host_with_port}#{request.fullpath}" %>

<style>
  .tr-no-top-border td {
    border-top: none !important;
  }
  .td-no-top-border {
    border-top: none !important;
  }
  td[no-top-border] {
    border-top: none !important;
  }

  a.pull-right {
    margin-bottom: 20px;
  }
  .soft-padding{
    padding-top: 8px;
    padding-bottom: 8px;
  }

  button:hover + title {
    display: block!important;
  }

  .newInvoiceModal {
    width:600px;
    height:300px;
  }
  .newInvoiceModal .modal-header {
    background-color:#ccc;
  }
  .newInvoiceModal .modal-header button {
    font-size:30px;
  }
  .newInvoiceModal .modal-body {
    overflow-y: hidden;
    height: 100%;
    max-height:190px;
  }
    .modal-invoice { width: 80%; margin-left: -40%;/*height: 96%;margin-top: -5%;*/}
    /*.modal-invoice .modal-body{ max-height: 575px;}*/
    .mid-text-field {width: 53%;}
    .large-text-field {width: 90%;}
    .table-center td, .table-center th {text-align: center;}
    .zeroPadding {
      padding: 0 !important;
    }
    .icon-chevron-right, .icon-chevron-down{
      cursor: pointer;
    }

  .accordion-inner {
    background-color: #F7F7F7;
  }
  #bill-supply-modal {
    width: 1020px !important;
    left: 32% !important;
  }
</style>

<%= render '/layouts/ag2_gest/subscribersbreadcrumb' %>

<h3><%= t('.title') %></h3>
<%# active = @subscriber.active_ != 0 ? true : false %>
<table class="table">
  <tbody>
    <tr>
      <td><b><%= t('activerecord.attributes.subscriber.id') %>:</b></td>
      <td id="fnt_subid"><%= @subscriber.id %></td>
      <td><b><%= t('activerecord.attributes.subscriber.full_name') %>:</b></td>
      <td><%= @subscriber.try(:full_name) %></td>
      <td><b><%= t('activerecord.attributes.subscriber.fiscal_id_c') %>:</b></td>
      <td><%= @subscriber.try(:fiscal_id) %></td>
    </tr>
    <tr>
      <td><b><%= t('activerecord.attributes.subscriber.subscriber_code') %>:</b></td>
      <td class="highlighted bolded"><%= @subscriber.try(:full_code) %></td>
      <td><b><%= t('activerecord.attributes.subscriber.client_id') %>:</b></td>
      <td><%= link_to @subscriber.try(:client_full_code), ag2_gest.client_path(@subscriber.client_id) unless @subscriber.client.blank? %></td>
      <td><b><%= t('activerecord.attributes.subscriber.pub_entity') %>:</b></td>
      <td><%= @subscriber.try(:pub_entity) %></td>
    </tr>
    <tr>
      <td><b><%= t('activerecord.attributes.subscriber.starting_at') %>:</b></td>
      <td><%= I18n.localize(@subscriber.try(:starting_at)) unless @subscriber.starting_at.blank? %></td>
      <td><b><%= t('activerecord.attributes.subscriber.ending_at') %>:</b></td>
      <td><%= I18n.localize(@subscriber.try(:ending_at)) unless @subscriber.ending_at.blank? %></td>
      <td><b><%= t('activerecord.attributes.subscriber.active') %>:</b></td>
      <td> <% if @subscriber.active %> <i class="icon-thumbs-up"></i> <% else %> <i class="icon-thumbs-down"></i> <% end %> </td>
    </tr>
    <tr>
      <td><b><%= t('activerecord.attributes.subscriber.non_billable') %>:</b></td>
      <td>
        <i id="icon_down" class="icon-thumbs-down <%= 'hide' unless @subscriber.non_billable %>"></i> &nbsp; <a id='billable_button' class="btn btn-primary btn-mini nextBtn <%= 'hide' unless @subscriber.non_billable %>"><%= t('activerecord.attributes.subscriber.billable_button') %></a>
        <i id="icon_up" class="icon-thumbs-up <%= 'hide' unless !@subscriber.non_billable %>"></i> &nbsp; <a id='non_billable_button' class="btn btn-primary btn-mini nextBtn <%= 'hide' unless !@subscriber.non_billable %>"><%= t('activerecord.attributes.subscriber.non_billable_button') %></a>
      </td>
      <td class="bolded" id="show_current_debt_label"><%= t('activerecord.attributes.subscriber.debt') %>:</td>
      <!--<td>
        <a id='sub_load_debt_button' class="btn btn-primary btn-mini nextBtn"><%#= t(:view) %></a>
        <span class="highlighted bolded" id="show_current_debt"><%#= t(:debt_message) %></span>
      </td>-->
      <td class="highlighted bolded" id="show_current_debt"><%= number_with_precision(@current_debt, precision: 2, delimiter: I18n.locale == :es ? "." : ",") unless @current_debt.blank? %></td>
      <td><b><%= t('activerecord.attributes.subscriber.deposit') %>:</b></td>
      <td colspan="2" class="highlighted bolded"><%= number_with_precision(@subscriber.deposit, precision: 2, delimiter: I18n.locale == :es ? "." : ",") unless @subscriber.deposit.blank? %></td>
    </tr>
  </tbody>
</table>

<h4><%= t('activerecord.attributes.subscriber.address_data') %></h4>
<table class="table">
  <tbody>
    <tr>
      <td><b><%= t('activerecord.attributes.subscriber.service_point_id') %>:</b></td>
      <td><%= link_to @subscriber.try(:service_point_to_full_label), service_point_path(@subscriber.service_point) unless @subscriber.service_point.blank? %></td>
      <td><b><%= t('activerecord.attributes.subscriber.cadastral_reference') %>:</b></td>
      <td><%= !@subscriber.cadastral_reference.blank? ? @subscriber.try(:cadastral_reference) : @subscriber.try(:service_point).try(:cadastral_reference)%></td>
      <td><b><%= t('activerecord.attributes.subscriber.pub_record') %>:</b></td>
      <td><%= !@subscriber.pub_record.blank? ? @subscriber.try(:pub_record) : @subscriber.try(:service_point).try(:pub_record) %></td>
    </tr>
    <tr>
      <td><b><%= t('activerecord.attributes.subscriber.direction') %>:</b></td>
      <td colspan="3"><%= @subscriber.address_1 %></td>
      <td><b><%= t('activerecord.attributes.subscriber.zipcode_id') %>:</b></td>
      <td><%= @subscriber.try(:zipcode_zipcode) %></td>
    </tr>
    <tr>
      <td><b><%= t('activerecord.attributes.subscriber.alt_code') %>:</b></td>
      <td><%= @subscriber.try(:street_directory_alt_code) %></td>
      <td><b><%= t('activerecord.attributes.subscriber.center_id') %>:</b></td>
      <td><%= link_to @subscriber.try(:center_name), ag2_gest.center_path(@subscriber.center_id) unless @subscriber.center_id.blank? %></td>
      <td><b><%= t('activerecord.attributes.subscriber.town_id') %>:</b></td>
      <td><%= @subscriber.try(:center).try(:town_name) %></td>
    </tr>
    <tr>
      <td><b><%= t('activerecord.attributes.subscriber.province_id') %></b></td>
      <td><%= @subscriber.try(:center).try(:town).try(:province_name) %></td>
      <td><b><%= t('activerecord.attributes.subscriber.region_id') %>:</b></td>
      <td><%= @subscriber.try(:center).try(:town).try(:province).try(:region_name) %></td>
      <td><b><%= t('activerecord.attributes.subscriber.country_id') %>:</b></td>
      <td><%= @subscriber.try(:center).try(:town).try(:province).try(:region).try(:country_name) %></td>
    </tr>
  </tbody>
</table>

<%= link_to t("ag2_gest.subscribers.back_to_main_page"), subscribers_path %>
<br/>
<br/>

<ul class="nav nav-tabs" id="myTab">
  <li class="active"><a href="#details" data-toggle="tab"><%= t('activerecord.attributes.subscriber.detail') %></a></li>
  <li><a href="#tariffs" data-toggle="tab"><%= t('activerecord.attributes.subscriber.tariffs') %></a></li>
  <li><a href="#readings" data-toggle="tab"><%= t('activerecord.attributes.subscriber.readings') %></a></li>
  <li><a href="#bills" data-toggle="tab"><%= t('activerecord.attributes.subscriber.invoices') %></a></li>
  <li><a href="#direction" data-toggle="tab"><%= t('activerecord.attributes.subscriber.data_supply') %></a></li>
  <li><a href="#debits" data-toggle="tab"><%= t('activerecord.attributes.subscriber.debits') %></a></li>
  <li><a href="#notes" data-toggle="tab"><%= t('activerecord.attributes.subscriber.notes') %></a></li>
</ul>

<div class="tab-content" id="myTabContent">

  <!-- DETAILS -->
  <div class="tab-pane fade active in" id="details">
    <%= render 'show_tab_details' %>
  </div>

  <!-- TARIFFS -->
  <div class="tab-pane fade" id="tariffs">
    <%= render 'show_tab_tariffs' %>
  </div>

  <!-- READINGS -->
  <div class="tab-pane fade" id="readings">
    <%= render 'show_tab_readings' %>
  </div>

  <!-- INVOICES / Link to CHARGEINVOICE-->
  <div class="tab-pane fade" id="bills">
    <%= render 'show_tab_bills' %>
  </div>

  <!-- POSTAL ADDRESS (CLIENT) -->
  <div class="tab-pane fade" id="direction">
    <%= render 'show_tab_direction' %>
  </div>

  <!-- ClientBankAccount -->
  <div class="tab-pane fade" id="debits">
    <%= render 'show_tab_debits' %>
  </div>

  <!-- Notes -->
  <div class="tab-pane fade" id="notes">
    <%= render 'show_tab_annotations' %>
  </div>

</div>

<!-- MODALS -->
<%= render '/ag2_gest/subscribers/modals/new_reading' %>
<%= render '/ag2_gest/subscribers/modals/change_data_detail' %>
<%= render '/ag2_gest/subscribers/modals/change_data_supply' %>
<%= render '/ag2_gest/subscribers/modals/new_client_bank_account' %>
<%= render '/ag2_gest/subscribers/modals/quit_meter' %>
<%= render '/ag2_gest/subscribers/modals/add_meter' %>
<%= render '/ag2_gest/subscribers/modals/change_meter' %>

<!-- Embedded Modals -->
<!-- New service bill -->
<div id="new-bill" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
    <h3 id="myModalLabel">Nueva factura</h3>
  </div>
  <%= simple_form_for :bills, url: simple_bill_subscriber_path(@subscriber), remote: true, :html => { :class => 'modal-footer-right form-inline' } do |f| %>
    <div class="modal-body">
      <%= f.input :billing_period_id, label: I18n.t("ag2_gest.bills.index.billing_period_id"), collection: @billing_periods_reading, label_method: :to_label_, value_method: :id, input_html: { class: "large-text-field", id: "billing_period_reading" }, :label_html => { :class => 'form-label' } %>
      <%#= f.input :invoice_date, required: true, label: I18n.t("ag2_gest.bills.index.invoice_date"), :label_html => { :class => 'form-label' }, :input_html => {class: "mid-text-field date_picker", id: "invoice_date"} %>
      <%#= f.input :payday_limit, required: false, label: I18n.t("ag2_gest.bills.index.payday_limit"), :label_html => { :class => 'form-label' }, :input_html => {class: "mid-text-field date_picker"} %>
    </div>
    <div class="modal-footer">
      <span class="left-floated shrinked" style="vertical-align: bottom" id="alert_date"></span><br>
      <span class="left-floated shrinked" style="vertical-align: bottom" id="alert_bill"></span>
      <%= f.submit "Crear factura", disable_with: t("activerecord.attributes.pre_reading.loading"), class: "btn btn-primary", id: "submit_bills" %>
      <button id="btn" type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true"><%= t :close_button %></button>
    </div>
  <% end %>
</div>

<!-- User Update new service bill -->
<div id="bill-supply-modal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="modal_invoice" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
    <h3 id="myModalLabel"><%= "Factura de suministro" %></h3>
  </div>
  <div class="modal-body" style="overflow-x: hidden;">

    <%= simple_form_for :simple_bill, url: update_simple_subscriber_path(@subscriber), method: "post" do |f| %>
    <% end %>

  </div>
  <div class="modal-footer">
    <span class="left-floated shrinked" style="vertical-align: bottom"><%= t("activerecord.attributes.contracting_request.text_footer") %></span>
    <a class="btn btn-primary" id="submit-simple-bill"><%= t("activerecord.attributes.contracting_request.update") %></a>
    <a class="btn btn-primary" data-dismiss="modal" aria-hidden="true"><%= t("activerecord.attributes.contracting_request.close") %></a>
  </div>
</div>

<script type="text/javascript">
  var text_field_color;

  $.urlParam = function(name){
    var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
    if(results == null){
      return null
    }else{
      return results[1] || 0;
    }
  }

  // When DOM is fully loaded
  $(window).load(function() {
    // Charge aux dropdowns
    var subscriber_id = $("#fnt_id").val();
    if (subscriber_id == "") subscriber_id = "0";
    jQuery.getJSON('sub_load_dropdowns/' + subscriber_id, function(data) {
        var z = data.zipcodes;
        var t = data.towns;
        var p = data.provinces;
        var r = data.regions;
        var c = data.countries;
        var s = data.street_types;
        var z_id = data.zipcode_id;
        var t_id = data.town_id;
        var p_id = data.province_id;
        var r_id = data.region_id;
        var c_id = data.country_id;
        var s_id = data.street_type_id;
        var b = data.banks;
        var bo = data.bank_offices;
        var bac = data.bank_account_classes;
        var ml = data.meter_location;
        var bp = data.billing_period;
        var pj = data.projects;
        var rt = data.reading_type;
        // var bpr = data.billing_periods_reading;
        // var bca = data.billable_concept_availables;
        // var cd = data.current_debt;
        // var cdl = data.current_debt_label;

        // current debt
        // $("#show_current_debt").text(cd);
        //$("#show_current_debt_label").text(cdl);

        // billable concept
        // $("#BillableConcept_").html("");
        // $("#BillableConcept_").val("val", "");
        // $("#BillableConcept_").append($('<option></option>').val("").html(""));
        // if (!bca.length) {
        //   $.each(data, function(id, option) {
        //     if (id == 'billable_concept_availables' && option != "") {
        //       $("#BillableConcept_").append($('<option></option>').val(option[0]).html(option[1]));
        //     }
        //   });
        // } else {
        //   $.each(bca, function(id, option) {
        //       $("#BillableConcept_").append($('<option></option>').val(option[0]).html(option[1]));
        //   });
        // }
        // meter locations
        $("#input_add_meter_location").html("");
        $("#input_add_meter_location").val("val", "");
        $("#input_add_meter_location").append($('<option></option>').val("").html(""));
        $("#input_c_meter_location").html("");
        $("#input_c_meter_location").val("val", "");
        $("#input_c_meter_location").append($('<option></option>').val("").html(""));
        if (!ml.length) {
          $.each(data, function(id, option) {
            if (id == 'meter_location' && option != "") {
              $("#input_add_meter_location").append($('<option></option>').val(option[0]).html(option[1]));
              $("#input_c_meter_location").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(ml, function(id, option) {
              $("#input_add_meter_location").append($('<option></option>').val(option[0]).html(option[1]));
              $("#input_c_meter_location").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        // billing periods
        $("#billing_period").html("");
        $("#billing_period").val("val", "");
        $("#billing_period").append($('<option></option>').val("").html(""));
        $("#input_q_billing_period").html("");
        $("#input_q_billing_period").val("val", "");
        $("#input_q_billing_period").append($('<option></option>').val("").html(""));
        $("#input_a_billing_period").html("");
        $("#input_a_billing_period").val("val", "");
        $("#input_a_billing_period").append($('<option></option>').val("").html(""));
        $("#input_add_billing_period").html("");
        $("#input_add_billing_period").val("val", "");
        $("#input_add_billing_period").append($('<option></option>').val("").html(""));
        $("#input_quit_billing_period").html("");
        $("#input_quit_billing_period").val("val", "");
        $("#input_quit_billing_period").append($('<option></option>').val("").html(""));
        if (!bp.length) {
          $.each(data, function(id, option) {
            if (id == 'billing_period' && option != "") {
              $("#billing_period").append($('<option></option>').val(option[0]).html(option[1]));
              $("#input_q_billing_period").append($('<option></option>').val(option[0]).html(option[1]));
              $("#input_a_billing_period").append($('<option></option>').val(option[0]).html(option[1]));
              $("#input_add_billing_period").append($('<option></option>').val(option[0]).html(option[1]));
              $("#input_quit_billing_period").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(bp, function(id, option) {
            $("#billing_period").append($('<option></option>').val(option[0]).html(option[1]));
            $("#input_q_billing_period").append($('<option></option>').val(option[0]).html(option[1]));
            $("#input_a_billing_period").append($('<option></option>').val(option[0]).html(option[1]));
            $("#input_add_billing_period").append($('<option></option>').val(option[0]).html(option[1]));
            $("#input_quit_billing_period").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        // reading periods not billed
        // $("#billing_period_reading").html("");
        // $("#billing_period_reading").val("val", "");
        // $("#billing_period_reading").append($('<option></option>').val("").html(""));
        // if (!bpr.length) {
        //   $.each(data, function(id, option) {
        //     if (id == 'billing_periods_reading' && option != "") {
        //       $("#billing_period_reading").append($('<option></option>').val(option[0]).html(option[1]));
        //     }
        //   });
        // } else {
        //   $.each(bpr, function(id, option) {
        //       $("#billing_period_reading").append($('<option></option>').val(option[0]).html(option[1]));
        //   });
        // }
        // projects
        $("#project").html("");
        $("#project").val("val", "");
        $("#project").append($('<option></option>').val("").html(""));
        if (!pj.length) {
          $.each(data, function(id, option) {
            if (id == 'projects' && option != "") {
              $("#project").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(pj, function(id, option) {
              $("#project").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        // reading types
        $("#reading_type").html("");
        $("#reading_type").val("val", "");
        $("#reading_type").append($('<option></option>').val("").html(""));
        if (!rt.length) {
          $.each(data, function(id, option) {
            if (id == 'reading_type' && option != "") {
              $("#reading_type").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(rt, function(id, option) {
              $("#reading_type").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }

        // zipcodes
        $("#fnt_zipcode").html("");
        $("#fnt_zipcode").val("val", "");
        $("#fnt_zipcode").append($('<option></option>').val("").html(""));
        if (!z.length) {
          $.each(data, function(id, option) {
            if (id == 'zipcodes' && option != "") {
              $("#fnt_zipcode").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(z, function(id, option) {
              $("#fnt_zipcode").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (z_id != 0) $("#fnt_zipcode").val(z_id);
        // towns
        $("#fnt_town").html("");
        $("#fnt_town").val("val", "");
        $("#fnt_town").append($('<option></option>').val("").html(""));
        if (!t.length) {
          $.each(data, function(id, option) {
            if (id == 'towns' && option != "") {
              $("#fnt_town").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(t, function(id, option) {
              $("#fnt_town").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (t_id != 0) $("#fnt_town").val(t_id);
        // provinces
        $("#fnt_province").html("");
        $("#fnt_province").val("val", "");
        $("#fnt_province").append($('<option></option>').val("").html(""));
        if (!p.length) {
          $.each(data, function(id, option) {
            if (id == 'provinces' && option != "") {
              $("#fnt_province").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(p, function(id, option) {
              $("#fnt_province").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (p_id != 0) $("#fnt_province").val(p_id);
        // regions
        $("#fnt_region").html("");
        $("#fnt_region").val("val", "");
        $("#fnt_region").append($('<option></option>').val("").html(""));
        if (!r.length) {
          $.each(data, function(id, option) {
            if (id == 'regions' && option != "") {
              $("#fnt_region").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(r, function(id, option) {
              $("#fnt_region").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (r_id != 0) $("#fnt_region").val(r_id);
        // countries
        $("#fnt_country").html("");
        $("#fnt_country").val("val", "");
        $("#fnt_country").append($('<option></option>').val("").html(""));
        $("#fnt_bank_country").html("");
        $("#fnt_bank_country").val("val", "");
        $("#fnt_bank_country").append($('<option></option>').val("").html(""));
        if (!c.length) {
          $.each(data, function(id, option) {
            if (id == 'countries' && option != "") {
              $("#fnt_country").append($('<option></option>').val(option[0]).html(option[1]));
              $("#fnt_bank_country").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(c, function(id, option) {
            $("#fnt_country").append($('<option></option>').val(option[0]).html(option[1]));
            $("#fnt_bank_country").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (c_id != 0) $("#fnt_country").val(c_id);
        // street types
        $("#fnt_street_type").html("");
        $("#fnt_street_type").val("val", "");
        $("#fnt_street_type").append($('<option></option>').val("").html(""));
        if (!s.length) {
          $.each(data, function(id, option) {
            if (id == 'street_types' && option != "") {
              $("#fnt_street_type").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(c, function(id, option) {
            $("#fnt_street_type").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (s_id != 0) $("#fnt_street_type").val(s_id);

        // banks
        $("#fnt_bank").html("");
        $("#fnt_bank").val("val", "");
        $("#fnt_bank").append($('<option></option>').val("").html(""));
        if (!b.length) {
          $.each(data, function(id, option) {
            if (id == 'banks' && option != "") {
              $("#fnt_bank").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(b, function(id, option) {
              $("#fnt_bank").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        // bank offices
        $("#fnt_bank_office").html("");
        $("#fnt_bank_office").val("val", "");
        $("#fnt_bank_office").append($('<option></option>').val("").html(""));
        if (!bo.length) {
          $.each(data, function(id, option) {
            if (id == 'bank_offices' && option != "") {
              $("#fnt_bank_office").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(bo, function(id, option) {
              $("#fnt_bank_office").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        // bank account classes
        $("#fnt_bank_account_class").html("");
        $("#fnt_bank_account_class").val("val", "");
        $("#fnt_bank_account_class").append($('<option></option>').val("").html(""));
        if (!bac.length) {
          $.each(data, function(id, option) {
            if (id == 'bank_account_classes' && option != "") {
              $("#fnt_bank_account_class").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(bac, function(id, option) {
              $("#fnt_bank_account_class").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }

        return false;
    });
  });

  // When DOM is loaded
  $(document).ready(function () {
    // Save default text color
    text_field_color = $("#alert_bill").css('color')
    // $("#show_current_debt").hide();
    // $("#sub_load_debt_button").show();

    $("#billable_button").click(function(){
      var subscriber_id = "<%= @subscriber.id %>"
      var result = confirm("<%= t('activerecord.attributes.subscriber.alert_billable')%>");
      if (result) {
        jQuery.getJSON(subscriber_id + '/billable_button', function(data) {
          $("#icon_down").addClass("hide");
          $("#billable_button").addClass("hide");
          $("#icon_up").removeClass("hide");
          $("#non_billable_button").removeClass("hide");
          $("#new_bill").removeClass("hide");
        });
        return false;
      }
    });

    $("#non_billable_button").click(function(){
      var subscriber_id = "<%= @subscriber.id %>"
      var result = confirm("<%= t('activerecord.attributes.subscriber.alert_non_billable')%>");
      if (result) {
        jQuery.getJSON(subscriber_id + '/non_billable_button', function(data) {
          $("#icon_up").addClass("hide");
          $("#non_billable_button").addClass("hide");
          $("#icon_down").removeClass("hide");
          $("#billable_button").removeClass("hide");
          $("#new_bill").addClass("hide");
        });
        return false;
      }
    });

    $("#sub_load_postal_button").click(function(){
      var subscriber_id = $("#fnt_id").val();
      if (subscriber_id == "") subscriber_id = "0";
      jQuery.getJSON('sub_load_postal/' + subscriber_id, function(data) {
        var z = data.zipcodes;
        var t = data.towns;
        var p = data.provinces;
        var r = data.regions;
        var c = data.countries;
        var s = data.street_types;
        var z_id = data.zipcode_id;
        var t_id = data.town_id;
        var p_id = data.province_id;
        var r_id = data.region_id;
        var c_id = data.country_id;
        var s_id = data.street_type_id;

        // zipcodes
        $("#fnt_zipcode").html("");
        $("#fnt_zipcode").val("val", "");
        $("#fnt_zipcode").append($('<option></option>').val("").html(""));
        if (!z.length) {
          $.each(data, function(id, option) {
            if (id == 'zipcodes' && option != "") {
              $("#fnt_zipcode").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(z, function(id, option) {
              $("#fnt_zipcode").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (z_id != 0) $("#fnt_zipcode").val(z_id);
        // towns
        $("#fnt_town").html("");
        $("#fnt_town").val("val", "");
        $("#fnt_town").append($('<option></option>').val("").html(""));
        if (!t.length) {
          $.each(data, function(id, option) {
            if (id == 'towns' && option != "") {
              $("#fnt_town").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(t, function(id, option) {
              $("#fnt_town").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (t_id != 0) $("#fnt_town").val(t_id);
        // provinces
        $("#fnt_province").html("");
        $("#fnt_province").val("val", "");
        $("#fnt_province").append($('<option></option>').val("").html(""));
        if (!p.length) {
          $.each(data, function(id, option) {
            if (id == 'provinces' && option != "") {
              $("#fnt_province").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(p, function(id, option) {
              $("#fnt_province").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (p_id != 0) $("#fnt_province").val(p_id);
        // regions
        $("#fnt_region").html("");
        $("#fnt_region").val("val", "");
        $("#fnt_region").append($('<option></option>').val("").html(""));
        if (!r.length) {
          $.each(data, function(id, option) {
            if (id == 'regions' && option != "") {
              $("#fnt_region").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(r, function(id, option) {
              $("#fnt_region").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (r_id != 0) $("#fnt_region").val(r_id);
        // countries
        $("#fnt_country").html("");
        $("#fnt_country").val("val", "");
        $("#fnt_country").append($('<option></option>').val("").html(""));
        if (!c.length) {
          $.each(data, function(id, option) {
            if (id == 'countries' && option != "") {
              $("#fnt_country").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(c, function(id, option) {
              $("#fnt_country").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (c_id != 0) $("#fnt_country").val(c_id);

        // street types
        $("#fnt_street_type").html("");
        $("#fnt_street_type").val("val", "");
        $("#fnt_street_type").append($('<option></option>').val("").html(""));
        if (!s.length) {
          $.each(data, function(id, option) {
            if (id == 'street_types' && option != "") {
              $("#fnt_street_type").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(s, function(id, option) {
            $("#fnt_street_type").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (s_id != 0) $("#fnt_street_type").val(s_id);

        return false;
      });
    });

    $("#sub_load_bank_button").click(function(){
      var subscriber_id = $("#fnt_id").val();
      if (subscriber_id == "") subscriber_id = "0";
      jQuery.getJSON('sub_load_bank/' + subscriber_id, function(data) {
        var b = data.banks;
        var bo = data.bank_offices;
        var bac = data.bank_account_classes;
        var c = data.countries;
        var b_id = data.bank_id;
        var bo_id = data.bank_office_id;
        var bac_id = data.bank_account_class_id;
        var c_id = data.country_id;

        // banks
        $("#fnt_bank").html("");
        $("#fnt_bank").val("val", "");
        $("#fnt_bank").append($('<option></option>').val("").html(""));
        if (!b.length) {
          $.each(data, function(id, option) {
            if (id == 'banks' && option != "") {
              $("#fnt_bank").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(b, function(id, option) {
              $("#fnt_bank").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (b_id != 0) $("#fnt_bank").val(b_id);
        // bank offices
        $("#fnt_bank_office").html("");
        $("#fnt_bank_office").val("val", "");
        $("#fnt_bank_office").append($('<option></option>').val("").html(""));
        if (!bo.length) {
          $.each(data, function(id, option) {
            if (id == 'bank_offices' && option != "") {
              $("#fnt_bank_office").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(bo, function(id, option) {
              $("#fnt_bank_office").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (bo_id != 0) $("#fnt_bank_office").val(bo_id);
        // bank account classes
        $("#fnt_bank_account_class").html("");
        $("#fnt_bank_account_class").val("val", "");
        $("#fnt_bank_account_class").append($('<option></option>').val("").html(""));
        if (!bac.length) {
          $.each(data, function(id, option) {
            if (id == 'bank_account_classes' && option != "") {
              $("#fnt_bank_account_class").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(bac, function(id, option) {
              $("#fnt_bank_account_class").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (bac_id != 0) $("#fnt_bank_account_class").val(bac_id);
        // countries
        $("#fnt_bank_country").html("");
        $("#fnt_bank_country").val("val", "");
        $("#fnt_bank_country").append($('<option></option>').val("").html(""));
        if (!c.length) {
          $.each(data, function(id, option) {
            if (id == 'countries' && option != "") {
              $("#fnt_bank_country").append($('<option></option>').val(option[0]).html(option[1]));
            }
          });
        } else {
          $.each(c, function(id, option) {
              $("#fnt_bank_country").append($('<option></option>').val(option[0]).html(option[1]));
          });
        }
        if (c_id != 0) $("#fnt_bank_country").val(c_id);

        return false;
      });
    });

    $("#sub_load_debt_button").click(function(){
      var subscriber_id = $("#fnt_subid").text();
      if (subscriber_id != "" && subscriber_id != "0") {
        $("#sub_load_debt_button").hide();
        $("#show_current_debt").show();
        jQuery.getJSON('sub_load_debt/' + subscriber_id, function(data) {
          var cd = data.current_debt;
          var cdl = data.current_debt_label;
          // current debt
          $("#show_current_debt").text(cd);
          return false;
        });
      }
    });

    $(".icon-chevron-right").click(function(){
      if ($(this).hasClass('icon-chevron-right')) {
        $(this).removeClass("icon-chevron-right").addClass("icon-chevron-down");
      }else{
        $(this).removeClass("icon-chevron-down").addClass("icon-chevron-right");
      }
    });

    $('#myTab a').click(function (e) {
      e.preventDefault();
      e.stopPropagation();

      $('#myTab li').removeClass('active');
      $(this).parent().addClass('active');
      $('.tab-pane.active').removeClass('active').removeClass('in');
      $('#'+this.href.split('#')[1]).addClass('active').addClass('in');
      // MJ
      window.location.hash = $(this).attr('href');
    });

    // if(window.location.hash){
    //    $('#myTab a[href="'+window.location.hash+'"]').tab('show');
    // }
    if (location.hash !== '') $('#myTab a[href="' + location.hash + '"]').tab('show');
      return $('#myTab a[data-toggle="tab"]').on('shown', function(e) {
       return location.hash = $(e.target).attr('href').substr(1);
    });

    $("#payment-method-select").on("change", function(){
      if (this.value == "Caja") {
        $("#cash-machine").removeClass("hide");
      }
      else {
        $("#cash-machine").addClass("hide");
      }
    });

    $('.popover-test').popover({
      html : true,
    }).popover('toggle');

    var active = true;

    /*Show or Hiden All Bills*/
    $('#collapse-init').click(function () {

      if (active) {
        active = false;
        $('.accordion-body').collapse('show');
          $('.accordion-toggle').children().removeClass().addClass("icon-minus");
          $(this).text('Ocultar todos');
      } else {
        active = true;
        $('.accordion-body').collapse('hide');
        $('.accordion-toggle').children().removeClass().addClass("icon-plus");
        $(this).text('Ver todos');
      }
    });

    $('.accor').click(function () {
      /*Execute function before than bootstrap*/
      /*var accordion = $(this).closest(".accordion-group");
      accordion.children(".accordion-body").hasClass("in");

      if (accordion.children(".accordion-body").hasClass("in")){
        this.children[0].className = "icon-minus";
      }else {
        this.children[0].className = "icon-plus";
      }*/
      if (this.classList.contains("collapsed")){
        this.children[0].className = "icon-minus";
      }else {
        this.children[0].className = "icon-plus";
      }
    });

    if($.urlParam('bill') != null){

    };

  });
  $("#submit-simple-bill").click(function () {
    $("form.simple_bill").submit();
  });

  jQuery(function($) {
    // $("#invoice_date").on('changeDate', function() {
    //   // preserve the current object
    //   var invoice_date = $("#invoice_date").val();
    //   var office_id = "<%= @subscriber.office_id %>";
    //   if (invoice_date == "") {
    //     return false;
    //   }
    //   // Right formatted date
    //   invoice_date = right_date(invoice_date,"<%= I18n.locale %>");
    //   // make the POST call
    //   jQuery.getJSON('su_check_invoice_date/' + office_id  + '/' + invoice_date, function(data) {
    //     if (data.code != "") {
    //       $("#invoice_date").val("");
    //       alert(data.code);
    //     }
    //   });
    //   return false;
    // });

    $("#billing_period_reading").change(function() {
      // make a POST call and replace the content
      $("#submit_bills").show();
      var period = $('#billing_period_reading').val();
      var subscriber_id = "<%= @subscriber.id %>";
      var office_id = "<%= @subscriber.office_id %>";
      var today = new Date();
      var dd = today.getDate();
      var mm = today.getMonth()+1; //January is 0!
      var yyyy = today.getFullYear();
      if(dd<10) {
          dd = '0'+dd
      }
      if(mm<10) {
          mm = '0'+mm
      }
      today = dd + '/' + mm + '/' + yyyy;
      var invoice_date = right_date(today,"<%= I18n.locale %>");
      if (period == "")
        period = "$";
      jQuery.getJSON('su_find_invoice_to_period/' + period + '/' + subscriber_id, function(data) {
        $("#alert_date").html(data.alert_date);
        $("#alert_date").css('color', text_field_color);
        if (data.code_bill == "$fact") {
          $("#alert_bill").html(data.alert_bill);
          $("#alert_bill").css('color', text_field_color);
        } else if (data.code_bill == "$refact") {
          $("#alert_bill").html(data.alert_bill);
          $("#alert_bill").css('color', text_field_color);
        } else if (data.code_bill == "$err") {
          $("#alert_bill").html(data.alert_bill);
          $("#alert_bill").css('color', 'red');
          $("#submit_bills").hide();
        }
      });
      jQuery.getJSON('su_check_invoice_date/' + office_id  + '/' + invoice_date, function(data) {
        if (data.code != "") {
          $("#submit_bills").hide();
          alert(data.code);
        }
      });
      return false;
    });

    $("#submit_bills").click(function () {
      // var invoice_date = $("#invoice_date").val();
      var billing_period_reading = $("#billing_period_reading").val();
      if (billing_period_reading == "" ) {
        alert("<%= I18n.t(:mandatory_subtitle) %>");
        return false;
      }
    });
  });
</script>
