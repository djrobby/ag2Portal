if @subscriber_eco_report.blank?
  return
end

# Localization for numbers
delimiter = I18n.locale == :es ? "." : ","

report.set_layout tlf: 'reports/subscriber_eco_report', layout_options: { default: true }

#
# Report events
#
# On page create
report.events.on :page_create do |e|
  # Set page-number
  e.page.item(:page_no).value(e.page.no)
end
# On report generate
report.events.on :generate do |e|
  e.pages.each do |page|
    # Set total-page-number
    page.item(:page_count).value(e.report.page_count)
  end
end

#
# List configuration (stores & events)
#
report.layout.config.list(:default) do |c|
  # Define the variables used in list
  c.use_stores page_rows: 0, page_debt: 0

  # On list page footer insertion
  c.events.on :page_footer_insert do |e|
    # Display page sutotals
    e.section.item(:sum_rows_title).value(I18n.t("ag2_gest.ag2_gest_track.subscriber_report.sum_rows_title"))
    e.section.item(:sum_rows_debt).value(I18n.t("ag2_gest.ag2_gest_track.subscriber_report.sum_rows_debt"))
    e.section.item(:sum_rows).value(e.store.page_rows)
    e.section.item(:full_debt).value number_with_precision((e.store.page_debt), precision: 4, delimiter: I18n.locale == :es ? "." : ",")
    # Initialize subtotals to 0
    #e.store.page_rows = 0
  end
end

# New page & start
report.start_new_page

# Page header
report.page.values report_title: I18n.t("ag2_gest.ag2_gest_track.subscriber_report.report_debt_title")

# Page footer
report.page.values(printed_at: formatted_timestamp(Time.now),
           pt: I18n.t("every_report.pt"),
           pd: I18n.t("every_report.pd"))


# List header
report.page.list(:default).header do |header|
  header.item(:code_c).value I18n.t("activerecord.attributes.subscriber.subscriber_code")
  header.item(:fiscal_c).value I18n.t("activerecord.attributes.subscriber.fiscal_id_c")
  header.item(:name_c).value I18n.t("activerecord.attributes.subscriber.full_name")
  header.item(:street_c).value I18n.t("activerecord.attributes.subscriber.address_1")
  header.item(:tariff_c).value I18n.t("activerecord.attributes.subscriber.use_id")
  header.item(:start_at_c).value I18n.t("activerecord.attributes.subscriber.starting_at")
  header.item(:end_at_c).value I18n.t("activerecord.attributes.subscriber.ending_at")
  header.item(:contract_c).value I18n.t("activerecord.attributes.subscriber.data_contract")
  header.item(:tariff_scheme_c).value I18n.t("activerecord.attributes.subscriber.tariff_type_id")
  header.item(:debt_c).value I18n.t("activerecord.attributes.subscriber.debt")
end


# Page Title list
office_id = @subscriber_eco_report.first.office_id

# List detail
Subscriber.uncached do
  @subscriber_eco_report.find_each do |i|
    if !i.office_id.blank? && (i.office_id != office_id)
      report.page.list(:default).page_break
      report.page.list(:default) do |list|
        list.store.page_rows = 0
        list.store.page_debt = 0
      end
      office_id = i.office_id
    end

    if !i.tariffs.blank?
      _tariff_type = []
      i.subscriber_tariffs.each do |tt|
        if !_tariff_type.include? tt.tariff.tariff_type.name
          _tariff_type = _tariff_type << tt.tariff.tariff_type.name
        end
      end
      @tariff_type = _tariff_type.join(",")
    else
      @tariff_type = ""
    end
    debt = i.debt_current_date(@from,@to,@todebt).blank? ? 0 : i.debt_current_date(@from,@to,@todebt)

    report.page.list(:default).add_row do |row|
      report.page.values project_c: I18n.t("activerecord.attributes.subscriber.office")+": "
      report.page.values project: i.office.name
      row.item(:code).value i.full_code
      row.item(:fiscal).value i.fiscal_id
      row.item(:name).value i.full_name
      row.item(:street).value i.address_1
      row.item(:tariff).value i.use.name unless i.use.blank?
      row.item(:start_at).value formatted_date(i.starting_at) unless i.starting_at.blank?
      row.item(:end_at).value formatted_date(i.ending_at) unless i.ending_at.blank?
      row.item(:contract).value i.water_supply_contract.contracting_request.full_no unless i.water_supply_contract.blank?
      row.item(:tariff_scheme).value @tariff_type
      row.item(:debt).value number_with_precision(debt, precision: 4, delimiter: I18n.locale == :es ? "." : ",") unless debt.blank?
    end

    # Store page subtotals
    report.page.list(:default) do |list|
      list.store.page_rows += 1
      list.store.page_debt += debt
    end
  end
end
