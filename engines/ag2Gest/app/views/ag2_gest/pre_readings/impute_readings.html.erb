<script>
  $(document).ready(function () {
  $(".sel2").select2();
  $('.date_picker').datepicker({
      format : 'dd/mm/yyyy',
      weekStart : 1
  });

  // propagate date
  $(".icon-calendar").click(function() {
    $("tr").removeClass("date-clicked")
    row = $(this).closest(".prereading-row");
    date = row.find("input[type='text']").val();
    row.addClass("date-clicked");
    reading_ending_date = row.data("reading-ending-date");
    reading_starting_date = row.data("reading-starting-date");
    
    var d1 = reading_starting_date.split("/");
    var d2 = reading_ending_date.split("/");
    var c = date.split("/");

    var from = new Date(d1[2], parseInt(d1[1])-1, d1[0]);  // -1 because months are from 0 to 11
    var to   = new Date(d2[2], parseInt(d2[1])-1, d2[0]);
    var check = new Date(c[2], parseInt(c[1])-1, c[0]);

    if (check < from || check > to){
      alert("Lectura fuera de plazo")
    };
    $("tr.date-clicked").nextAll().find('input[type="text"]').val(date);
    $('html, body').animate({
      scrollTop: $(this).offset().top - 50
    }, 500);
  });

  // modal incidence
  $('a.btn.btn-warning').click(function(e){
    e.preventDefault();
    modal = $('#modal-incidence');
    form = modal.find("form");
    row = $(this).closest(".prereading-row");
    inputs = row.find("input");
    input_date = row.find("input[type='text']");
    input_index = row.find("input[type='number']");
    values = inputs.map(function () { return $(this).val(); }).get();
    date = values[0];
    index = values[1];
    if(index == ""){
      input_date = $("<input>").attr("type", "hidden").attr("name", "pre_reading[reading_date]").val(date);
      form.append($(input_date));
    }
    form.find("input[type='checkbox']").prop('checked', false);
    incidences = row.data("incedences");
    form.attr("action", "/es/ag2_gest/es/pre_readings/"+$(this).attr("id").split("-")[2]);
    $.each(incidences, function( index, value ) {
      form.find('input[value="'+value+'"]').prop('checked', true);
    });
    modal.modal('toggle');
  });

  // AJAX EVENT input change
  $(".prereading-row input").change(function() {
    row = $(this).closest(".prereading-row");
    form = row.find("form");
    inputs = row.find("input");
    input_date = row.find("input[type='text']");
    input_index = row.find("input[type='number']");
    values = inputs.map(function () { return $(this).val(); }).get();
    date = values[0];
    index = values[1];
    reading_ending_date = row.data("reading-ending-date");
    reading_starting_date = row.data("reading-starting-date");

    var d1 = reading_starting_date.split("/");
    var d2 = reading_ending_date.split("/");
    var c = date.split("/");

    var from = new Date(d1[2], parseInt(d1[1])-1, d1[0]);  // -1 because months are from 0 to 11
    var to   = new Date(d2[2], parseInt(d2[1])-1, d2[0]);
    var check = new Date(c[2], parseInt(c[1])-1, c[0]);

    check_consumption = function(){
      if(row.data("index-one") <= parseInt(index)){
        consumption = index - row.data("index-one");
      }else{
        consumption = (Math.pow(10,row.data("digits")) - row.data("index-one")) + parseInt(index)
      };
      previous_consumption = row.data("consumption-one");
      year_consumption = row.data("consumption-two");
      if( (previous_consumption!="" && year_consumption!="") && (consumption > previous_consumption + (0.5 * previous_consumption)) || (consumption < previous_consumption - (0.5 * previous_consumption)) || (consumption > year_consumption + (0.5 * year_consumption)) || (consumption < year_consumption - (0.5 * year_consumption)) ){
        alert("Detalles de consumo.\nP. Actual: "+consumption+"\nP. Anterior: "+previous_consumption+"\nA. Anterior: "+year_consumption)
      }
      if (index != "" ){
        row.find("td").addClass("row-green");
      }else{
        row.find("td").fadeOut(500).fadeIn(500);
      }
    };

    if (index != "" ){
      row.find("td").addClass("row-green");
    }else{
      row.find("td").removeClass("row-green");
      input_index.val("");
      var input = $("<input>").attr("type", "hidden").attr("name", "lapnot").val(true);
      form.append($(input));
      form.submit();
    }
    
    cons_act = index - row.data("index-one");
    con_baj = (row.data("consumption-one") / 2);
    con_exc = (row.data("consumption-one") * 2);

    // if both inputs have values
    if (inputs.filter(function() { return this.value == '' }).length == 0){
      // if index last period exits
      if (row.data("index-one") != "" && row.data("index-one") != 0){
        // if index < index last period
        if (index < row.data("index-one")){
          // vuelta de contador
          var lap_meter = confirm("El índice introducido es menor al anterior. ¿Desea continuar?");
          if (lap_meter == true) {
            var input = $("<input>").attr("type", "hidden").attr("name", "lap").val(true);
            form.append($(input));
            check_consumption();
            row.find(".wrench-column").show()
            form.submit();
          } else {
            if (row.data("index") == "" ){
              input_index.val("");
            }else{
              input_index.val(row.data("index"));
            }
          };
        // Consumo excesivo AND Contador Compartido
        } else if (row.data("consumption-one") != 0 && cons_act > con_exc && row.data("meters") > 1){
          // Consumo excesivo
          var lap_meter = confirm("Consumo excesivo y Contador Compartido. Incidencia Activada");
          if (lap_meter == true) {
            var input = $("<input>").attr("type", "hidden").attr("name", "lapconexs").val(true);
            form.append($(input));
            check_consumption();
            row.find(".wrench-column").show()
            form.submit();
          } else {
            if (row.data("index") == "" ){
              input_index.val("");
            }else{
              input_index.val(row.data("index"));
            }
          };
        // Consumo bajo AND Contador Compartido
        } else if (row.data("consumption-one") != 0 && cons_act < con_baj && row.data("meters") > 1){
          // Consumo excesivo
          var lap_meter = confirm("Bajo Consumo y Contador Compartido. Incidencia Activada");
          if (lap_meter == true) {
            var input = $("<input>").attr("type", "hidden").attr("name", "lapconbaj").val(true);
            form.append($(input));
            check_consumption();
            row.find(".wrench-column").show()
            form.submit();
          } else {
            if (row.data("index") == "" ){
              input_index.val("");
            }else{
              input_index.val(row.data("index"));
            }
          };
        // Consumo excesivo
        } else if (row.data("consumption-one") != 0 && cons_act > con_exc ){
          var lap_meter = confirm("Consumo excesivo. Incidencia Activada");
          if (lap_meter == true) {
            var input = $("<input>").attr("type", "hidden").attr("name", "lapconexs").val(true);
            form.append($(input));
            check_consumption();
            row.find(".wrench-column").show()
            form.submit();
          } else {
            if (row.data("index") == "" ){
              input_index.val("");
            }else{
              input_index.val(row.data("index"));
            }
          };
        // Consumo bajo
        } else if (row.data("consumption-one") != 0 && cons_act < con_baj ){
          var lap_meter = confirm("Bajo Consumo. Incidencia Activada");
          if (lap_meter == true) {
            var input = $("<input>").attr("type", "hidden").attr("name", "lapconbaj").val(true);
            form.append($(input));
            check_consumption();
            row.find(".wrench-column").show()
            form.submit();
          } else {
            if (row.data("index") == "" ){
              input_index.val("");
            }else{
              input_index.val(row.data("index"));
            }
          };
        // Contador Compartido
        } else if ( row.data("meters") > 1 ){
          var lap_meter = confirm("Contador Compartido");
          if (lap_meter == true) {
            var input = $("<input>").attr("type", "hidden").attr("name", "lapconexs2").val(true);
            form.append($(input));
            check_consumption();
            row.find(".wrench-column").show()
            form.submit();
          } else {
            if (row.data("index") == "" ){
              input_index.val("");
            }else{
              input_index.val(row.data("index"));
            }
          };
        // Contador parado
        } else if (index == row.data("index-one") && index == row.data("index-two")){
          var lap_meter = confirm("Posible contador parado");
          if (lap_meter == true) {
            var input = $("<input>").attr("type", "hidden").attr("name", "lapconexs2").val(true);
            form.append($(input));
            check_consumption();
            row.find(".wrench-column").show()
            form.submit();
          } else {
            if (row.data("index") == "" ){
              input_index.val("");
            }else{
              input_index.val(row.data("index"));
            }
          };
        // Lectura fuera de plazo
        } else if (check < from || check > to){
          var lap_meter = confirm("Lectura fuera de plazo");
          if (lap_meter == true) {
            var input = $("<input>").attr("type", "hidden").attr("name", "lapdate").val(true);
            form.append($(input));
            check_consumption();
            row.find(".wrench-column").show()
            form.submit();
          } else {
            if (row.data("index") == "" ){
              input_index.val("");
            }else{
              input_index.val(row.data("index"));
            }
          };
        } else {
          check_consumption();
          form.submit();
        };
      // index last period not exits NEVER SHOULD HAPPEN
      }else{
        form.submit();
      };
    };
  });

  // AJAX SUCCESS update prereading
  $("form").bind("ajax:success", function(xhr, data, status) {
    var row = $("#prereading-"+data["id"])

    $(".alert.alert-error").hide();
    $('#modal-incidence').modal("hide")
    incidences = []
    $.each(data["pre_reading_incidences"], function( index, value ) {
      incidences.push(value["reading_incidence_type_id"])
    });
    if(incidences.length != 0){
      row.find(".wrench-column").show()
      row.find("input[type='number']").val(row.data("index-one"));
    }
    if (row.data("index") == "" ){
      row.find("td").addClass("row-green");
    }else{
      row.find("td").fadeOut(500).fadeIn(500);
    }

    row.data("incedences", incidences);
    row.data("index", data["reading_index"]);
  });

 // AJAX ERROR update prereading
  $("form").bind("ajax:error", function(xhr, data, status) {
    var row = $(this).closest(".prereading-row");
    $(".alert.alert-error").hide();
    row.find("input[type='text']").val("");
    row.after('<tr class="alert alert-error"><td colspan="10" style="text-align: center;">'+ data.responseText +'</div>');
    $(".alert.alert-error").delay( 5000 ).fadeOut( 1500 );
  });

 // AJAX SUCCESS delete prereading
  $(".delete-prereading").bind("ajax:success", function(xhr, data, status) {
    $(this.closest("tr")).fadeOut();;
  });

  $('.container-fluid').show();
  $('#loading-msg').hide();
  });
</script>

<style type="text/css">
  .row-green{
    background-color: #dff0d8 !important;
  }

  .control-group {
    margin: 0px;
  }
  select, textarea, input[type="text"], input[type="password"], input[type="datetime"], input[type="datetime-local"], input[type="date"], input[type="month"], input[type="time"], input[type="week"], input[type="number"], input[type="email"], input[type="url"], input[type="search"], input[type="tel"], input[type="color"], .uneditable-input{
    margin: 0;
  }
  .btn-file {
      position: relative;
      overflow: hidden;
  }
  .btn-file input[type=file] {
      position: absolute;
      top: 0;
      right: 0;
      min-width: 100%;
      min-height: 100%;
      font-size: 100px;
      text-align: right;
      filter: alpha(opacity=0);
      opacity: 0;
      outline: none;
      background: white;
      cursor: inherit;
      display: block;
  }
</style>
<%= render '/layouts/ag2_gest/prereadingsbreadcrumb' %>

<h3>Confirmar Definitivas</h3>
<div id="loading-msg" class="alert">
  <strong><%= t('activerecord.attributes.pre_reading.pass_to_definitive') %><%= t('activerecord.attributes.pre_reading.loading') %></strong>
</div>
<div class="container-fluid" style="display:none;">
  <div class="row-fluid">
    <div class="span12" id="div_table">
      <table class="table table-condensed table-striped shrinked stu">
        <thead>
          <tr>
            <th><%= t('activerecord.attributes.pre_reading.route') %></th>
            <th><%= t('activerecord.attributes.pre_reading.reading_sequence_acronym') %></th>
            <th><%= t('activerecord.attributes.pre_reading.subscriber_id') %></th>
            <th><%= t('activerecord.attributes.pre_reading.delivery_address') %></th>
            <th><%= t('activerecord.attributes.pre_reading.meter_id') %></th>
            <th><%= t('activerecord.attributes.pre_reading.billing_period_id') %></th>
            <th><%= t('activerecord.attributes.pre_reading.reading_index_2') %></th>
            <th><%= t('activerecord.attributes.pre_reading.reading_index_1') %></th>
            <th><%= t('activerecord.attributes.pre_reading.reading_date') %></th>
            <th colspan="5"><%= t('activerecord.attributes.pre_reading.index') %></th>
          </tr>
        </thead>
        <tbody>
          <% @pre_readings.each_with_index do |pre_reading,index| %>
          <tr id="prereading-<%= pre_reading.id %>" class="prereading-row" data-id="<%= pre_reading.id %>" data-reading-ending-date="<%= pre_reading.billing_period.reading_ending_date.strftime("%d/%m/%Y") %>" data-reading-starting-date="<%= pre_reading.billing_period.reading_starting_date.strftime("%d/%m/%Y") %>" data-index="<%= pre_reading.reading_index %>" data-index-one="<%= pre_reading.reading_index_1 %>" data-index-two="<%= pre_reading.reading_index_2 %>" data-consumption-one="<%= pre_reading.try(:reading_1).try(:consumption) %>" data-consumption-two="<%= pre_reading.try(:reading_2).try(:consumption) %>" data-meters="<%= pre_reading.try(:meter).try(:subscribers).count %>" data-digits="<%= pre_reading.try(:meter).try(:meter_model).try(:digits) %>" data-incedences="<%= pre_reading.pre_reading_incidences.map(&:reading_incidence_type_id) %>">
              <%= simple_form_for pre_reading, :remote => true, :html => { "data-type" => :json, :id => "form-prereading-#{pre_reading.id}" } do |f| %>
                <td <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <%= pre_reading.try(:reading_route).try(:route_code) %>
                </td>
                <td <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <%= pre_reading.reading_sequence %>
                </td>
                <td <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <%= pre_reading.try(:subscriber).try(:subscriber_code) %>
                </td>
                <td <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <%= pre_reading.try(:subscriber).try(:address_1) %>
                </td>
                <td <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <%= pre_reading.try(:meter).try(:meter_code) %>
                </td>
                <td <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <%= pre_reading.try(:billing_period).try(:period) %>
                </td>
                <td style="width:6%" <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <%= "#{pre_reading.reading_2.try(:billing_period).try(:period)} <b>#{pre_reading.reading_index_2}</b>".html_safe  %>
                </td>
                <td style="width:6%" <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <%= "#{pre_reading.reading_1.try(:billing_period).try(:period)} <b>#{pre_reading.reading_index_1}</b>".html_safe %>
                </td>
                <td style="width:15%" <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <%= f.input :reading_date, :start_year => Time.now.year - 100, :end_year => Time.now.year + 100, :as => :string, label: false, :input_html => { :value => (pre_reading.reading_date ? pre_reading.reading_date.strftime("%d/%m/%Y") : Date.today.strftime("%d/%m/%Y")), :class => 'large-text-field date_picker input-sm'}, wrapper_html: { class: "pull-left", style: "width: 80%"}  %>
                  <a href="#" class="btn btn-mini btn-primary ">
                    <i class="icon-calendar icon-white"></i>
                  </a>
                </td>
                <td <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <%= f.input :reading_index, label: false, :input_html => { :value => (pre_reading.reading_index), :class => 'large-text-field input-sm', tabindex: index+1} %>
                </td>
                <td <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <i class="wrench-column icon-wrench" <%= 'style=display:none' if pre_reading.pre_reading_incidences.empty? %>></i>
                </td>
                <td <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <a id="modal-link-<%= pre_reading.id %>" href="#" class="btn btn-warning btn-mini"><i class="icon-wrench icon-white"></i></a>
                </td>
                <td <%= "class=row-green" unless pre_reading.incomplete? %>>
                  <%= link_to "<i class='icon-trash icon-white'></i>".html_safe, pre_reading_path(pre_reading), :data => { :confirm => "Estas seguro?" }, :method => :delete, :remote => true, class: "btn btn-danger btn-mini delete-prereading", id: "delete-#{pre_reading.id}" %>
                </td>
              <% end %>
            </tr>
          <% end %>
        </tbody>
      </table>
      <%= render :partial => '/layouts/pagination', :locals => { :ivar => @pre_readings } %>
    </div>
  </div>
  <div class="row">
    <%= link_to t('activerecord.attributes.pre_reading.pass_to_definitive'), to_reading_pre_readings_path(prereading: {reading_routes: @routes, period: @period, project: @project }), class: "btn btn-primary" %>
    <%= link_to t('activerecord.attributes.pre_reading.print'), to_pdf_pre_readings_path(:format => :pdf, prereading: {reading_routes: @routes, period: @period, project: @project }), class: "btn btn-primary", target: "_blank" %>
    <a data-disable-with="<%= t("activerecord.attributes.pre_reading.loading")%>" href="<%= show_list_pre_readings_path(format: :csv) %>" download class="btn btn-success pull-right"><%= I18n.t('activerecord.attributes.reading.exportcsv') %></a>

  </div>
  <br>
      <%= link_to t("ag2_gest.pre_readings.back_to_main_page"), ag2_gest.pre_readings_path %>
</div>

<!-- Modal -->
<div id="modal-incidence" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="width:440px;left:55%;">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="myModalLabel">Incidencias</h3>
  </div>
  <%= form_tag("", method: "put", "data-type" => :json, remote: true) do  %>
    <div class="modal-body">
      <!-- <form accept-charset="UTF-8" action="/es/ag2_gest/es/pre_readings/1513" class="simple_form edit_pre_reading" data-remote="true" data-type="json" id="form-prereading-1513" method="post" novalidate="novalidate">
      </form> -->
      <ul class="unstyled">
        <% ReadingIncidenceType.all.each do |incidence_type| %>
            <li style="width:50%;float:left;">
              <label class="checkbox">
                <%= check_box_tag 'incidence_type_ids[]', incidence_type.id %>
                <%= h incidence_type.name %>
              </label>
            </li>
        <% end %>
      </ul>
    </div>
    <div class="modal-footer">
      <%= submit_tag "Guardar", class: "btn btn-primary"%>
      <button class="btn" data-dismiss="modal" aria-hidden="true">Cerrar</button>
    </div>
  <% end %>
</div>
