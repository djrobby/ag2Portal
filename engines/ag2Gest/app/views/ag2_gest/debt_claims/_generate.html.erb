<!-- Modal Generate -->
<script type="text/javascript">
  $(document).ready(function() {
    $("#proc_mesage_dc").hide();
  });

  jQuery(function($) {
    /* modal_cash form.generate-form: Check required values before submit */
    $("form.generate-form").submit(function(){
      if ($('#debt_claim_office').val() == '' ||
          $('#debt_claim_office').val() == null) {
        alert("<%= I18n.t('activerecord.attributes.debt_claim.office') %> <%= I18n.t(:item_error) %>");
        return false;
      }
      if ($('#debt_claim_cash_payday_limit').val() == '' ||
          $('#debt_claim_cash_payday_limit').val() == null) {
        alert("<%= I18n.t('activerecord.attributes.debt_claim.payday_limit') %> <%= I18n.t(:item_error) %>");
        return false;
      }
    });

    // when #generate_code_btn is clicked
    $("#generate_code_btn").click(function() {
      // make a POST call and replace the content
      var company = $('#CompanyO_').val();
      if (company == "")
        company = "$";
      var posted_at = $('#PostedDateO_').val();
      if (posted_at == "")
        posted_at = "$";
      jQuery.getJSON('si_generate_no/' + company + '/' + posted_at, function(data) {
        $("#InternalNoO_").val(data.code);
        if ($("#InternalNoO_").val() == "$err") {
          $("#InternalNoO_").css('color', 'red');
          alert('<%= I18n.t("ag2_purchase.purchase_orders.no_error") %>');
          $('#InternalNoO_').select();
        } else {
          $("#InternalNoO_").css('color', text_field_color);
          // $('#InternalNoO_').trigger("change");
        }
      });
      return false;
    });

    $('#btn_accept_o').click(function() {
      var supplier = $('#SupplierO_ :selected').val();
      var order = $('#Order_').val();
      if (order == null) order = "";
      var offer_no = $('#NoO_').val();
      var offer_date = $('#DateO_').val();
      var internal_no = $('#InternalNoO_').val();
      var posted_at = $('#PostedDateO_').val();
      var company = $('#CompanyO_').val();
      if ((supplier == "") || (order == "")  || (offer_no == "")  || (offer_date == "") || (internal_no == "") || (posted_at == "") || (company == "")) {
        // Error
        alert('<%= I18n.t(:mandatory_subtitle) %>');
        return false;
      }
      // Right formatted date
      offer_date = right_date(offer_date, "<%= I18n.locale %>");
      posted_at = right_date(posted_at, "<%= I18n.locale %>");
      // Show message
      $("#proc_mesage_o").show();
      // make the POST call
      jQuery.getJSON('si_generate_invoice_from_order?supplier=' + supplier + '&order=' + order + '&offer_no=' + offer_no + '&offer_date=' + offer_date + '&internal_no=' + internal_no + '&posted_at=' + posted_at + '&company=' + company, function(data) {
        // Hide message
        $("#proc_mesage_o").hide();
        // AJAX refresh index table is necessary
        $(".icon-refresh-link").click();
        // Go on based on result
        if (data.code == "$err") {
          alert('<%= I18n.t("ag2_purchase.supplier_invoices.generate_invoice_error") %>');
        } else if (data.code == "$write") {
          alert('<%= I18n.t("ag2_purchase.supplier_invoices.generate_invoice_write") %>');
        } else {
          // Hide the modal and exit
          alert(data.code);
          $("#new-invoice-from-order").modal('hide');
        }
      });
      return false;
    });

    // when the #SupplierO_ field changes
    $("#SupplierO_").change(function() {
      // make a POST call and replace the content
      var supplier = $('#SupplierO_').val();
      if (supplier == "") supplier = 0;
      jQuery.getJSON('si_update_order_select_from_supplier/' + supplier, function(data) {
        var r = data.order;
        $("#Order_").html("");
        $("#Order_").select2("val", "");
        $("#Order_").append($('<option></option>').val("").html(""));
        if (!r.length) {
          $.each(data, function(id, option) {
            if (id == 'order' && option != "") {
              $("#Order_").append($('<option></option>').val(option[0]).html(option[1] + " " + option[2] + " " + option[3]));
            }
          });
        } else {
          $.each(r, function(id, option) {
            $("#Order_").append($('<option></option>').val(option[0]).html(option[1] + " " + option[2] + " " + option[3]));
          });
        }
      });
      // AJAX refresh index table is necessary
      $(".icon-refresh-link").click();
      return false;
    });

    // when the #Order_ field changes
    $("#Order_").change(function() {
      // make a POST call and replace the content
      var order = $('#Order_ :selected').val();
      if (order == "") order = 0;
      jQuery.getJSON('si_current_unbilled_balance_order/' + order, function(data) {
        $("#current-balance-o").html(data.balance);
      });
      // AJAX refresh index table is necessary
      $(".icon-refresh-link").click();
      return false;
    });
  });
</script>

<div id="generate-debt-claim" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="GenerateDebtClaim" aria-hidden="true" data-backdrop="static" style="display: none;">
  <div id="proc_mesage_dc" class="alert alert-info">
    <%= t(:generating) %>
  </div>
  <% e = t(:item_error) %>
  <div class="modal-header">
    <a class="close" data-dismiss="modal">&#215;</a>
    <h3><%= t('ag2_gest.debt_claims.generate.title') %></h3>
    <span class="shrinked"><%= I18n.t(:mandatory_subtitle) %></span>
  </div>
  <%= simple_form_for :debt_claim, url: generate_debt_claims_path, method: :post, :html => { class: 'modal-footer-right generate-form'} do |f| %>
    <div class="modal-body">
      <%= f.input :office, required: true, label: I18n.t("activerecord.attributes.debt_claim.office"), collection: @offices, inline_label: "Yes", :input_html => { :class => 'x-large-text-field sel4', data: { validation: "required", "validation-error-msg" => "#{e}" } }, :label_html => { :class => 'form-label' } %>
      <%= f.input :payday_limit, required: true, label: I18n.t("activerecord.attributes.debt_claim.payday_limit"), as: :date, inline_label: "Yes", input_html: { class: 'x-large-text-field ndate_picker', data: { validation: "required", "validation-error-msg" => "#{e}" } }, label_html: { class: 'form-label' } %>
      <%= f.input :projects, label: I18n.t("activerecord.attributes.debt_claim.project"), collection: @projects, inline_label: "Yes", input_html: { class: 'x-large-text-field sel4', data: { validation: "required", "validation-error-msg" => "#{e}" } }, label_html: { class: 'form-label' } %>
      <%= f.input :reading_routes, label: I18n.t("activerecord.attributes.debt_claim.reading_route"), collection: @reading_routes, inline_label: "Yes", input_html: { class: 'x-large-text-field sel4', data: { validation: "required", "validation-error-msg" => "#{e}" } }, label_html: { class: 'form-label' } %>
      <%= f.input :clients, label: I18n.t("activerecord.attributes.debt_claim.client"), collection: @clients, inline_label: "Yes", input_html: { class: 'x-large-text-field sel4', data: { validation: "required", "validation-error-msg" => "#{e}" } }, label_html: { class: 'form-label' } %>
      <%= f.input :subscribers, label: I18n.t("activerecord.attributes.debt_claim.subscriber"), collection: @subscribers, inline_label: "Yes", input_html: { class: 'x-large-text-field sel4', data: { validation: "required", "validation-error-msg" => "#{e}" } }, label_html: { class: 'form-label' } %>
      <%= f.input :invoice_types, label: I18n.t("activerecord.attributes.debt_claim.invoice_type"), collection: @invoice_types, inline_label: "Yes", input_html: { class: 'x-large-text-field sel4', multiple: 'multiple', data: { validation: "required", "validation-error-msg" => "#{e}" } }, label_html: { class: 'form-label' } %>
      <%= f.input :pending_amount, label: I18n.t("activerecord.attributes.debt_claim.pending_amount"), as: :decimal, inline_label: "Yes", input_html: { class: 'x-large-text-field number-text-field' }, label_html: { class: 'form-label' } %>
      <%= f.input :pending_invoices, label: I18n.t("activerecord.attributes.debt_claim.pending_invoices"), as: :integer, inline_label: "Yes", input_html: { class: 'x-large-text-field number-text-field' }, label_html: { class: 'form-label' } %>
    </div>
    <div class="modal-footer">
      <%= f.button :submit, t(:generate), :class => 'btn btn-primary', id: 'btn-submit-generate' %>
      <a class="btn btn-primary" data-dismiss="modal" href="#" id="btn_close"><%= t :close_button %></a>
    </div>
  <% end %>
</div>
