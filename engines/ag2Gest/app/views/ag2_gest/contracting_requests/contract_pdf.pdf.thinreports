if @contracting_request.blank?
	return
end

# Localization for numbers
delimiter = I18n.locale == :es ? "." : ","

report.set_layout tlf: 'reports/contract_pdf', layout_options: { default: true }

#
# Report events
#
# On page create
report.events.on :page_create do |e|
	# Set page-number
	e.page.item(:page_no).value(e.page.no)
end
# On report generate
report.events.on :generate do |e|
	e.pages.each do |page|
		# Set total-page-number
		page.item(:page_count).value(e.report.page_count)
	end
end

# New page & start
report.start_new_page

# Page header: Image block for Logo
report.page.values company_logo: "public/" + @contracting_request.project.company.logo.url(:original).split("?").first unless @contracting_request.project.company.logo.blank?

# Page header: Company
report.page.values(company_name: @contracting_request.project.company.name,
				   company_address_1: @contracting_request.project.company.address_1,
				   company_address_2: @contracting_request.project.company.address_2,
				   company_phones: @contracting_request.project.company.phone_and_fax,
				   company_email: @contracting_request.project.company.email_and_website,
				   company_fiscal_id: I18n.t("activerecord.attributes.company.fiscal_id_c") + ": " + @contracting_request.project.company.fiscal_id
				   )

# Page header
if @contracting_request.contracting_request_type_id == 2
	var_title = I18n.t("activerecord.attributes.water_supply_contract.title_contract_subrogation")
else
	var_title = I18n.t("activerecord.models.water_supply_contract.one")
end

report.page.values(form_title: var_title,
				   request_no_c: I18n.t("activerecord.attributes.contracting_request.request_no") + " :",
				   request_no: @water_supply_contract.full_no,
				   change_owner_c: I18n.t("activerecord.attributes.contracting_request.type") + " :",
				   change_owner: @contracting_request.contracting_request_type_id == 2 || @contracting_request.contracting_request_type_id == 4 ? I18n.t("ag2_gest.contracting_requests.report.change_c") : I18n.t("activerecord.attributes.water_supply_contract.change_c_up")
				  )
#
# Special Condition
report.page.values(special_condition_c: I18n.t("activerecord.attributes.water_supply_contract.special_condition_c"))
if !@contracting_request.project.water_supply_contract_template.blank?
	terms = @contracting_request.project.water_supply_contract_template.contract_template_terms.particular_terms
	terms_items = ""
	terms.each do |a|
		terms_items += a.term_no + " " + a.description + "\r\n"
	end
	report.page.values(special_condition: terms_items)
elsif !@contracting_request.project.office.water_supply_contract_template.blank?
	terms = @contracting_request.project.office.water_supply_contract_template.contract_template_terms.particular_terms
	terms_items = ""
	terms.each do |a|
		terms_items += a.term_no + " " + a.description + "\r\n"
	end
	report.page.values(special_condition: terms_items)
elsif !@contracting_request.project.company.water_supply_contract_template.blank?
	terms = @contracting_request.project.company.water_supply_contract_template.contract_template_terms.particular_terms
	terms_items = ""
	terms.each do |a|
		terms_items += a.term_no + " " + a.description + "\r\n"
	end
	report.page.values(special_condition: terms_items)
end
#
# Page footer
var_full_date = I18n.l(@water_supply_contract.contract_date, format: :long_whit_day) unless @water_supply_contract.contract_date.blank?
report.page.values(printed_at: Time.now,
				   pt: I18n.t("every_report.pt"),
				   pd: I18n.t("every_report.pd"),
				   currency_note: @contracting_request.project.company.invoice_footer,
				   full_date: @contracting_request.project.company.town.name + ", " + var_full_date.to_s,
				   company_sign: I18n.t("activerecord.attributes.water_supply_contract.company_sign"),
				   subscriber_sign: I18n.t("activerecord.attributes.water_supply_contract.subscriber_sign"),
				   r_company_sign: @contracting_request.project.office.r_first_name.to_s + " " + @contracting_request.project.office.r_last_name.to_s + " " + I18n.t("activerecord.attributes.water_supply_contract.company_text_6") + " " + @contracting_request.project.office.r_fiscal_id.to_s + "\r\n" + @contracting_request.project.office.r_position.to_s,
				   r_company_sign_lopd: I18n.t("activerecord.attributes.water_supply_contract.lopd") + ": " + I18n.t("activerecord.attributes.water_supply_contract.lopd_2")
					)
#
# Lists
if @contracting_request.contracting_request_type_id == 2
	var_master = WaterSupplyContract.where(:subscriber_id => @water_supply_contract.subscriber_id).where('client_id != ?', @water_supply_contract.client_id).order(:contract_date)
	if !var_master.last.blank?
		report.page.values(request_no_c_master: I18n.t("activerecord.attributes.water_supply_contract.master_contract") + ":",
				   					 request_no_master: var_master.last.full_no,
				   					 old_subscriber: I18n.t("activerecord.attributes.water_supply_contract.old_contract"),
									 old_subscriber_code_c: I18n.t("activerecord.attributes.report.client_code") + ": ",
				  					 old_subscriber_code: var_master.last.client.full_code,
									 old_fiscal_id_c: I18n.t("activerecord.attributes.client.fiscal_id") + ":",
									 old_fiscal_id: var_master.last.client.fiscal_id,
									 old_name_c: I18n.t("activerecord.attributes.contracting_request.info_name") + ":",
									 old_name: var_master.last.client.to_name,
									 old_street_c: I18n.t("activerecord.report.subscriber.direction") + ":",
									 old_street: var_master.last.client.address_1,
									 old_phone_c: I18n.t("activerecord.attributes.client.phone") + ":",
									 old_phone: var_master.last.client.phone,
									 old_zipcode_c: I18n.t("activerecord.attributes.client.zipcode") + ":",
									 old_zipcode: var_master.last.client.address_2,
			   						)
		if !var_master.last.subscriber.total_debt_unpaid.blank?
			report.layout.config.list(:default) do |c|
			# On list footer insertion
				c.events.on :footer_insert do |e|
				# Display page sutotals
					e.section.item(:debt_subrogation).value "* " + I18n.t("activerecord.attributes.water_supply_contract.debt_subrogation") + ":"
					e.section.item(:debt).value number_with_precision(var_master.last.subscriber.total_debt_unpaid, precision: 2, delimiter: I18n.locale == :es ? "." : ",")
				end
			end
			report.page.item(:special_condition_subrogation).style(:bold, true).value(" *" + I18n.t("activerecord.attributes.water_supply_contract.special_condition_subrogation"))
		end
	end
elsif @contracting_request.contracting_request_type_id == 4
	var_master = WaterSupplyContract.where(subscriber_id: @contracting_request.old_subscriber)
	if !var_master.last.blank?
		report.page.values(request_no_c_master: I18n.t("activerecord.attributes.water_supply_contract.master_contract") + ":",
				   			request_no_master: var_master.first.full_no)
	end
end
#
# general_conditioncontract_service_c
if @contracting_request.contracting_request_type_id == 2
	report.page.values(contract_service_c: I18n.t("activerecord.attributes.water_supply_contract.contract_service_subrogation"),
					   contract_remark: I18n.t("activerecord.attributes.water_supply_contract.contract_remark_subr") + I18n.t("activerecord.attributes.water_supply_contract.contract_service_subrogation") + I18n.t("activerecord.attributes.water_supply_contract.contract_remark_2") + @contracting_request.project.company.name + I18n.t("activerecord.attributes.water_supply_contract.company_text_3") + " " + @contracting_request.project.company.fiscal_id + I18n.t("activerecord.attributes.water_supply_contract.company_text_8") + " " + @contracting_request.project.company.town.name + ".")
else
	report.page.values(contract_service_c: I18n.t("activerecord.attributes.water_supply_contract.contract_service"),
					   contract_remark: I18n.t("activerecord.attributes.water_supply_contract.contract_remark") + I18n.t("activerecord.attributes.water_supply_contract.contract_service") + I18n.t("activerecord.attributes.water_supply_contract.contract_remark_2") + @contracting_request.project.company.name + I18n.t("activerecord.attributes.water_supply_contract.company_text_3") + " " + @contracting_request.project.company.fiscal_id + I18n.t("activerecord.attributes.water_supply_contract.company_text_8") + " " + @contracting_request.project.company.town.name + ".")
end


var_array = ""
ContractedTariff.where(water_supply_contract_id: @water_supply_contract.id).each do |t|
	if t.tariff.billable_item.biller_id == t.water_supply_contract.contracting_request.project.company_id
      if var_array == ""
        var_array += t.tariff.billable_concept.code
      else
        var_array += ("-" + t.tariff.billable_concept.code)
      end
    end
var_array 
end

var_billable_concept_array = var_array.split("-")
var_billable_concept_array_can = var_billable_concept_array -= %w{CMA} 
var_billable_concept_array_destroy = var_billable_concept_array -= %w{SUM SAN DEP} 
var_img = "app/assets/images/icon/glyph/black/ok.png"


arr = []
i = -1

var_billable_concept_array_can.each do |vbca|
	i += 1
	if vbca == "SUM" || vbca == "SAN" || vbca == "DEP"
		arr[i] = BillableConcept.where("code = ?",vbca).first.name
	else
		arr[i] = I18n.t("ag2_gest.contracting_requests.report.other_c")
	end
end

arr = arr.map do |e|
  if e == "Suministro"
    I18n.t("ag2_gest.contracting_requests.report.abast_c")
  else
    e
  end
end


#
# details
if arr[0] == nil
	report.page.item(:cs1).hide
	report.page.item(:cs1_img).hide
	report.page.item(:cs1_border).hide
else
	report.page.values(cs1: arr[0] ,
					   cs1_img: var_img
					   )
end
if arr[1] == nil
	report.page.item(:cs2).hide
	report.page.item(:cs2_img).hide
	report.page.item(:cs2_border).hide
else
	report.page.values(cs2: arr[1] ,
						cs2_img: var_img
						)
end
if arr[2] == nil
	report.page.item(:cs3).hide
	report.page.item(:cs3_img).hide
	report.page.item(:cs3_border).hide
else
	report.page.values(cs3: arr[2] ,
						cs3_img: var_img
						)
end
if arr[3] == nil
	report.page.item(:cs4).hide
	report.page.item(:cs4_img).hide
	report.page.item(:cs4_border).hide
else
	report.page.values(cs4: arr[3] ,
						cs4_img: var_img
						)
end

#
# r_client
report.page.values(r_client_c: I18n.t("ag2_gest.contracting_requests.show.r_entity_description"),
									 r_fiscal_id_c: I18n.t("activerecord.attributes.contracting_request.r_fiscal_id") + ":",
									 r_fiscal_id: @contracting_request.try(:r_fiscal_id),
									 r_name_c: I18n.t("activerecord.attributes.contracting_request.info_name") + ":",
									 r_name: @contracting_request.entity_info,
									 r_remark: "* " + I18n.t("activerecord.attributes.water_supply_contract.r_remark")
									 )							 
#
# client
report.page.values(client_c: I18n.t("activerecord.attributes.water_supply_contract.info_contract"),
									 subscriber_code_c: I18n.t("activerecord.attributes.report.client_code") + ": ",
				  					 subscriber_code: @contracting_request.subscriber.full_code,
									 fiscal_id_c: I18n.t("activerecord.attributes.client.fiscal_id") + ":",
									 fiscal_id: @contracting_request.client.fiscal_id,
									 name_c: I18n.t("activerecord.attributes.contracting_request.info_name") + ":",
									 name: @contracting_request.try(:client).try(:to_name),
									 street_c: I18n.t("activerecord.report.subscriber.direction") + ":",
									 street: @contracting_request.try(:client).try(:address_1),
									 phone_c: I18n.t("activerecord.attributes.client.phone") + ":",
									 phone: @contracting_request.try(:client).try(:phone),
									 zipcode_c: I18n.t("activerecord.attributes.client.zipcode") + ":",
									 zipcode: @contracting_request.try(:client).try(:address_2),
									 cellular_c: I18n.t("activerecord.attributes.client.cellular") + ":",
									 cellular: @contracting_request.try(:client).try(:cellular),
									 email_c: I18n.t("activerecord.attributes.client.email") + ":",
									 email:  @contracting_request.try(:client).try(:email)
									 )
#
# service_point
report.page.values(service_point_c: I18n.t("ag2_gest.contracting_requests.show.info_service_point"),
									 street_c_sp: I18n.t("activerecord.report.subscriber.direction") + ":",
									 street_sp: @contracting_request.subscriber_info_street,
									 ref_cadastral_c: I18n.t("activerecord.attributes.water_supply_contract.cadastral_reference") + ":",
									 ref_cadastral: @contracting_request.try(:water_supply_contract).try(:cadastral_reference),
									 zipcode_c_sp: I18n.t("activerecord.attributes.contracting_request.subscriber_zipcode_id") + ":",
									 zipcode_sp: @contracting_request.try(:subscriber_zipcode).try(:to_label),
									 center_c_sp: I18n.t("activerecord.attributes.contracting_request.subscriber_center_id") + ":",
									 center_sp: @contracting_request.try(:subscriber_center).try(:name),
									 town_c_sp: I18n.t("activerecord.attributes.contracting_request.subscriber_town_id") + ":",
									 town_sp: @contracting_request.try(:subscriber_town).try(:name),
									 region_c_sp: I18n.t("activerecord.attributes.contracting_request.subscriber_region_id") + ":",
									 region_sp: @contracting_request.try(:subscriber_region).try(:name),
									 country_c_sp: I18n.t("activerecord.attributes.contracting_request.subscriber_country_id") + ":",
									 country_sp:  @contracting_request.try(:subscriber_country).try(:name)
									 )

#
var_meter_date = @contracting_request.subscriber.meter_details.last.installation_date.strftime("%d/%m/%Y") unless @contracting_request.subscriber.meter_details.last.installation_date.blank?

# data service_point
report.page.values(sp_c: I18n.t("activerecord.attributes.water_supply_contract.info_service_point"),
									spl_c: I18n.t("activerecord.attributes.service_point.service_point_location_id") + ":",
									 spl: @contracting_request.try(:service_point).try(:service_point_location).try(:name),
									 spp_c: I18n.t("activerecord.attributes.service_point.service_point_purpose_id") + ":",
									 spp: @contracting_request.try(:service_point).try(:service_point_purpose).try(:name),
									 diametre_c: I18n.t("activerecord.attributes.meter.caliber_id") + ":",
									 diametre: @contracting_request.try(:water_supply_contract).try(:meter).try(:caliber).try(:caliber),
									 nominal_flow_c: I18n.t("activerecord.attributes.caliber.nominal_flow") + ":",
									 nominal_flow: @contracting_request.try(:water_supply_contract).try(:meter).try(:caliber).try(:nominal_flow),
									 sp_code_c: I18n.t("activerecord.attributes.service_point.code") + ":",
									 sp_code: @contracting_request.try(:service_point).try(:full_code),
									 use_c: I18n.t("activerecord.attributes.subscriber.use") + ": ",
									 use: @water_supply_contract.try(:subscriber).try(:use).try(:name),
									 tariff_type_c: I18n.t("activerecord.attributes.contracting_request.tariff_type") + ": ",
									 tariff_type: @tariff_type,
									 min_pressure_c: I18n.t("activerecord.attributes.water_supply_contract.min_pressure") + ": ",
									 min_pressure: @water_supply_contract.try(:min_pressure),
									 max_pressure_c: I18n.t("activerecord.attributes.water_supply_contract.max_pressure") + ": ",
									 max_pressure: @water_supply_contract.try(:max_pressure),
									 info_meter: I18n.t("activerecord.attributes.water_supply_contract.info_meter"),
									 meter_code_c: I18n.t("activerecord.attributes.meter.meter_code") + ":",
									 meter_code: @water_supply_contract.try(:meter).try(:meter_code),
									 meter_model_c: I18n.t("activerecord.attributes.meter.meter_model") + ":",
									 meter_model: @water_supply_contract.try(:meter).try(:meter_model).try(:meter_brand).try(:brand) + "/ " + @water_supply_contract.try(:meter).try(:meter_model).try(:model),
									 meter_date_c: I18n.t("activerecord.attributes.contracting_request.installation_date") + ":",
									 meter_date: var_meter_date,
									 meter_type_c: I18n.t("activerecord.attributes.work_order.meter_type_c") + ":",
									 meter_type: @water_supply_contract.try(:meter).try(:meter_model).try(:meter_type).try(:name),
									 instalation_index_c: I18n.t("activerecord.attributes.contracting_request.initial_reading") + ":",
									 instalation_index: @contracting_request.try(:subscriber).try(:meter_details).try(:last).try(:installation_reading)
									 )
#								 
#
# contract_term
report.page.values(contract_term_c: I18n.t("activerecord.attributes.water_supply_contract.contract_term") + " :",
				   contract_term: @water_supply_contract.try(:contract_term).blank? ? @water_supply_contract.try(:contract_term) : @water_supply_contract.try(:contract_term).capitalize)

#
#
# Factura
#
var_client_bank = ClientBankAccount.where(subscriber_id: @water_supply_contract.subscriber_id,ending_at: nil)
var_client_bank_full = var_client_bank.first.try(:p_format)
var_client_bank_titular = var_client_bank.first.try(:holder_name)
var_client_bank_nif = var_client_bank.first.try(:holder_fiscal_id)

if !@water_supply_contract.bill.blank?
report.layout.config.list(:default) do |c|
	# On list page footer insertion
	c.events.on :page_footer_insert do |e|
		# Display page sutotals
		e.section.item(:total_c).value(I18n.t("activerecord.attributes.water_supply_contract.total_pay") + ":")
		e.section.item(:total).value number_with_precision(@water_supply_contract.bill.invoices.first.total, precision: 2, delimiter: I18n.locale == :es ? "." : ",") unless @water_supply_contract.bill.total.blank?
		e.section.item(:fact_condition_c).value( I18n.t("activerecord.attributes.water_supply_contract.fact_condition"))
		e.section.item(:billing_frequency_c).value (I18n.t("activerecord.attributes.water_supply_contract.billing_frequency_c") + ": ")
		e.section.item(:billing_frequency).value @tariff_type_billing_frequency.tariff.billing_frequency.name
		e.section.item(:pay_method_c).value (I18n.t("activerecord.models.payment_method.one") + ": ")
		e.section.item(:pay_method).value !var_client_bank_full.blank? ? I18n.t("activerecord.attributes.water_supply_contract.bank") : I18n.t("activerecord.attributes.water_supply_contract.cash")
		e.section.item(:pay_sepa_order).value !var_client_bank_full.blank? ? I18n.t("activerecord.attributes.water_supply_contract.pay_sepa_order") : ""
		e.section.item(:pay_bank).value var_client_bank_full
		e.section.item(:pay_bank_tit_c).value !var_client_bank_full.blank? ? I18n.t("activerecord.attributes.supplier_bank_account.holder_name") + " :" : ""
		e.section.item(:pay_bank_tit).value var_client_bank_titular
		e.section.item(:pay_bank_nif_c).value !var_client_bank_full.blank? ? I18n.t("activerecord.attributes.supplier_bank_account.holder_fiscal_id_c") + " :" : ""
		e.section.item(:pay_bank_nif).value var_client_bank_nif
	end
end
#
report.page.list(:default).header do |header|
	header.item(:title2).value I18n.t("activerecord.attributes.water_supply_contract.ecom_condition_c")
end
#
#
a = @water_supply_contract.bill.invoices.first
	a.invoiced_subtotals_by_concept.each do |sub_concept|
		report.page.list(:default).add_row do |row|
			row.item(:tariff).value I18n.t("activerecord.attributes.contracting_request.amount_title") + sub_concept[1]
			row.item(:price).value number_with_precision(sub_concept[2], precision: 2, delimiter: I18n.locale == :es ? "." : ",")
		end
	end
	report.page.list(:default).add_row do |row|
		row.item(:subtotal_c).value (I18n.t("activerecord.attributes.bill.subtotal"))
		row.item(:subtotal).value  number_with_precision(a.subtotal, precision: 2, delimiter: I18n.locale == :es ? "." : ",") unless a.subtotal.blank?
	end
	a.tax_breakdown.each do |tax|
		if tax[0] == 0
		else
			report.page.list(:default).add_row do |row|
				row.item(:iva_c).value I18n.t("activerecord.attributes.contracting_request.iva_c") + " " + "(#{tax[0]}%" + " de " + number_with_precision(tax[1], precision: 2) + ")"
				row.item(:iva).value number_with_precision(tax[2], precision: 2)
			end
		end
	end	
end
#
#
# General Condition
#
#
report.set_layout tlf: 'reports/contract_condition_pdf', layout_options: { default: true }


# New page & start
report.start_new_page

# Page header: Image block for Logo
report.page.values company_logo: "public/" + @contracting_request.project.company.logo.url(:original).split("?").first unless @contracting_request.project.company.logo.blank?

# Page header: Company
report.page.values(company_name: @contracting_request.project.company.name,
				   company_address_1: @contracting_request.project.company.address_1,
				   company_address_2: @contracting_request.project.company.address_2,
				   company_phones: @contracting_request.project.company.phone_and_fax,
				   company_email: @contracting_request.project.company.email_and_website,
				   company_fiscal_id: I18n.t("activerecord.attributes.company.fiscal_id_c") + ": " + @contracting_request.project.company.fiscal_id
				   )
# Page header
if @contracting_request.contracting_request_type_id == 2
var_master = WaterSupplyContract.where(:subscriber_id => @water_supply_contract.subscriber_id).where('client_id != ?', @water_supply_contract.client_id).order(:contract_date)
	if !var_master.last.blank?
		report.page.values(request_no_c_master: I18n.t("activerecord.attributes.water_supply_contract.master_contract") + ":",
			   					 request_no_master: var_master.last.full_no)
	end
	var_title = I18n.t("activerecord.attributes.water_supply_contract.title_contract_subrogation")
else
	var_title = I18n.t("activerecord.models.water_supply_contract.one")
end
report.page.values(form_title: var_title,
				   request_no_c: I18n.t("activerecord.attributes.contracting_request.request_no") + " :",
				   request_no: @water_supply_contract.full_no,
				   change_owner_c: I18n.t("activerecord.attributes.contracting_request.type") + " :",
				   change_owner: @contracting_request.contracting_request_type_id == 2 || @contracting_request.contracting_request_type_id == 4 ? I18n.t("ag2_gest.contracting_requests.report.change_c") : I18n.t("activerecord.attributes.water_supply_contract.change_c_up")
				  )
# Page footer
report.page.values(printed_at: Time.now,
				   pt: I18n.t("every_report.pt"),
				   pd: I18n.t("every_report.pd"),
				   currency_note: @contracting_request.project.company.invoice_footer,
				   )

#
#_con1 = "1. " + I18n.t("activerecord.attributes.water_supply_contract._con1")
#_con2 = "2. " + I18n.t("activerecord.attributes.water_supply_contract._con2")
#_con3 = "3. " + I18n.t("activerecord.attributes.water_supply_contract._con3")
#_con4 = "4. " + I18n.t("activerecord.attributes.water_supply_contract._con4")
#_con5 = "5. " + I18n.t("activerecord.attributes.water_supply_contract._con5")
#_con6 = "6. " + I18n.t("activerecord.attributes.water_supply_contract._con6")
#_con7 = "7. " + I18n.t("activerecord.attributes.water_supply_contract._con7")
#_con8 = "8. " + I18n.t("activerecord.attributes.water_supply_contract._con8")
#_con9 = "9. " + I18n.t("activerecord.attributes.water_supply_contract._con9")
#_con10 = "10. " + I18n.t("activerecord.attributes.water_supply_contract._con10")
#_con11 = "11. " + I18n.t("activerecord.attributes.water_supply_contract._con11")
#_con12 = "12. " + I18n.t("activerecord.attributes.water_supply_contract._con12")
#_con13 = "13. " + I18n.t("activerecord.attributes.water_supply_contract._con13")
#_con14 = "14. " + I18n.t("activerecord.attributes.water_supply_contract._con14")
#_con15 = "15. " + I18n.t("activerecord.attributes.water_supply_contract._con15")
#_con16 = "16. " + I18n.t("activerecord.attributes.water_supply_contract._con16")
#_con17 = "17. " + I18n.t("activerecord.attributes.water_supply_contract._con17")
#_con18 = "18. " + I18n.t("activerecord.attributes.water_supply_contract._con18")
#_con19 = "19. " + I18n.t("activerecord.attributes.water_supply_contract._con19")
#_con20 = "20. " + I18n.t("activerecord.attributes.water_supply_contract._con20")
#_con21 = "21. " + I18n.t("activerecord.attributes.water_supply_contract._con21")
#_con22 = "22. " + I18n.t("activerecord.attributes.water_supply_contract._con22")
#_con23 = "23. " + I18n.t("activerecord.attributes.water_supply_contract._con23")
#_con24 = "24. " + I18n.t("activerecord.attributes.water_supply_contract.special_condition") + @contracting_request.contracting_request_type.description.upcase + I18n.t("activerecord.attributes.water_supply_contract.special_condition2")


#
# General Condition
report.page.values(general_condition: I18n.t("activerecord.attributes.water_supply_contract.general_condition"))

character_term = 0
character_term_total = 5750
general_terms_items = ""
general_terms_items_2 = ""

if !@contracting_request.project.water_supply_contract_template.blank?
	general_terms = @contracting_request.project.water_supply_contract_template.contract_template_terms.general_terms

	general_terms.each do |gt|
		_var = gt.term_no + " " + gt.description
		_size = character_term + _var.size
			
			if _size < character_term_total
				general_terms_items += _var + "\r\n"
				character_term = general_terms_items.size
			else
				general_terms_items_2 += _var + "\r\n"
				character_term += general_terms_items_2.size
			end
	end
	report.page.values(general_condition1: general_terms_items)
	report.page.values(general_condition2: general_terms_items_2)
elsif !@contracting_request.project.office.water_supply_contract_template.blank?
	general_terms = @contracting_request.project.office.water_supply_contract_template.contract_template_terms.general_terms

	general_terms.each do |gt|
		_var = gt.term_no + " " + gt.description
		_size = character_term + _var.size
			
			if _size < character_term_total
				general_terms_items += _var + "\r\n"
				character_term = general_terms_items.size
			else
				general_terms_items_2 += _var + "\r\n"
				character_term += general_terms_items_2.size
			end
	end
	report.page.values(general_condition1: general_terms_items)
	report.page.values(general_condition2: general_terms_items_2)
elsif !@contracting_request.project.company.water_supply_contract_template.blank?
	general_terms = @contracting_request.project.company.water_supply_contract_template.contract_template_terms.general_terms

	general_terms.each do |gt|
		_var = gt.term_no + " " + gt.description
		_size = character_term + _var.size
			
			if _size < character_term_total
				general_terms_items += _var + "\r\n"
				character_term = general_terms_items.size
			else
				general_terms_items_2 += _var + "\r\n"
				character_term += general_terms_items_2.size
			end
	end
	report.page.values(general_condition1: general_terms_items)
	report.page.values(general_condition2: general_terms_items_2)
end
