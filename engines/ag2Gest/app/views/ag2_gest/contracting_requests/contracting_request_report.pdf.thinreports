if @contracting_request_report.blank?
	return
end

# Localization for numbers
delimiter = I18n.locale == :es ? "." : ","

report.set_layout tlf: 'reports/contracting_request_report', layout_options: { default: true }

#
# Report events
#
# On page create
report.events.on :page_create do |e|
	# Set page-number
	e.page.item(:page_no).value(e.page.no)
end
# On report generate
report.events.on :generate do |e|
	e.pages.each do |page|
		# Set total-page-number
		page.item(:page_count).value(e.report.page_count)
	end
end

#
# List configuration (stores & events)
#
report.layout.config.list(:default) do |c|
	# Define the variables used in list
	c.use_stores page_rows: 0

	# On list page footer insertion
	c.events.on :page_footer_insert do |e|
		# Display page sutotals
		e.section.item(:sum_rows_title).value(I18n.t("ag2_gest.ag2_gest_track.contracting_request_report.sum_rows_title"))
		e.section.item(:sum_rows).value(e.store.page_rows)
		# Initialize subtotals to 0
		#e.store.page_rows = 0
	end
end

# New page & start
report.start_new_page

# Page header
report.page.values report_title: I18n.t("ag2_gest.contracting_requests.index.title")
report.page.values from_title: I18n.t("every_report.from_title")
report.page.values to_title: I18n.t("every_report.to_title")
report.page.values from: @from
report.page.values to: @to

# Page footer
report.page.values(printed_at: formatted_timestamp(Time.now),
				   pt: I18n.t("every_report.pt"),
				   pd: I18n.t("every_report.pd"))


# List header
report.page.list(:default).header do |header|
	header.item(:contract_c).value I18n.t("activerecord.attributes.contracting_request.request_no")
	header.item(:type_c).value I18n.t("activerecord.attributes.contracting_request.contracting_request_type")
	header.item(:client_c).value I18n.t("activerecord.attributes.contracting_request.client")
	header.item(:status_c).value I18n.t("activerecord.attributes.contracting_request.contracting_request_status")
	header.item(:date_c).value I18n.t("activerecord.attributes.contracting_request.request_date")
end


# Page Title list
project_id = @contracting_request_report.first.project_id

# List detail
@contracting_request_report.each do |i|
	if !i.project_id.blank? && (i.project_id != project_id)
		report.page.list(:default).page_break
		report.page.list(:default) do |list|	
			list.store.page_rows = 0
		end
		project_id = i.project_id
	end

	report.page.list(:default).add_row do |row|
		report.page.values project_c: I18n.t("activerecord.attributes.contracting_request.project_id")+": "
		report.page.values project: i.project.name
		row.item(:contract).value i.full_no
		row.item(:type).value i.contracting_request_type.description
	#data client
		full_client = ""
		if !i.client.blank?
			full_client += i.client.full_code.to_s
		else
			full_client += i.entity.full_code.to_s
		end
		if !i.client.blank?
			full_client += full_client.blank? ? i.client.full_name_or_company : " - " + i.client.full_name_or_company.to_s
		else
			full_client += full_client.blank? ? i.entity.full_name : " - " + i.entity.full_name.to_s
		end
		if !i.client.blank?
			full_client += full_client.blank? ? i.client.address_1 : " - " + i.client.address_1.to_s
		else
			full_client += full_client.blank? ? i.entity.address_1 : " - " + i.entity.address_1.to_s
		end
		row.item(:client).value full_client
		row.item(:status).value i.contracting_request_status.name
		row.item(:date).value formatted_date(i.request_date) unless i.request_date.blank?
	end

	# Store page subtotals
  report.page.list(:default) do |list|
		list.store.page_rows += 1
	end
end
