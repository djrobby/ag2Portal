if @close_cash_report.blank?
	return
end

# Localization for numbers
delimiter = I18n.locale == :es ? "." : ","

report.set_layout tlf: 'reports/close_cash_report', layout_options: { default: true }

#
# Report events
#
# On page create
report.events.on :page_create do |e|
	# Set page-number
	e.page.item(:page_no).value(e.page.no)
end
# On report generate
report.events.on :generate do |e|
	e.pages.each do |page|
		# Set total-page-number
		page.item(:page_count).value(e.report.page_count)
	end
end

#
# List configuration (stores & events)
#
report.layout.config.list(:default) do |c|
	# Define the variables used in list
	c.use_stores page_rows: 0, p_collected: 0, p_t_collected: 0, p_paid: 0, p_t_paid: 0

	# On list page footer insertion
	c.events.on :page_footer_insert do |e|
		# Display page sutotals
		e.section.item(:sum_rows_title).value(I18n.t("ag2_tech.ag2_tech_track.project_report.sum_rows_title"))
		e.section.item(:sum_rows).value(e.store.page_rows)
		e.section.item(:full_total_c).value I18n.t("ag2_products.ag2_products_track.every_report.cumulative_total")
		e.section.item(:collected).value number_with_precision(e.store.p_collected, precision: 2, delimiter: I18n.locale == :es ? "." : ",")
		e.section.item(:total_collected).value number_with_precision(e.store.p_t_collected, precision: 2, delimiter: I18n.locale == :es ? "." : ",")
		e.section.item(:paid).value number_with_precision(e.store.p_paid, precision: 2, delimiter: I18n.locale == :es ? "." : ",")
		e.section.item(:total_paid).value number_with_precision(e.store.p_t_paid, precision: 2, delimiter: I18n.locale == :es ? "." : ",")
		# Initialize subtotals to 0
		#e.store.page_rows = 0
	end
end

# New page & start
report.start_new_page

# Page header
report.page.values report_title: I18n.t("activerecord.models.cash_desk_closing.few")

# Page footer
report.page.values(printed_at: formatted_timestamp(Time.now),
				   pt: I18n.t("every_report.pt"),
				   pd: I18n.t("every_report.pd"))


# List header
report.page.list(:default).header do |header|
	header.item(:id_c).value I18n.t("activerecord.attributes.cash_desk_closing.id")
	header.item(:opening_balance_c).value I18n.t("activerecord.attributes.cash_desk_closing.opening_balance")
	header.item(:closing_balance_c).value I18n.t("activerecord.attributes.cash_desk_closing.closing_balance")
	header.item(:invoices_collected_c).value I18n.t("activerecord.attributes.cash_desk_closing.invoices_collected_c")
	header.item(:amount_collected_c).value I18n.t("activerecord.attributes.cash_desk_closing.amount_collected")
	header.item(:invoices_paid_c).value I18n.t("activerecord.attributes.cash_desk_closing.invoices_paid_c")
	header.item(:amount_paid_c).value I18n.t("activerecord.attributes.cash_desk_closing.amount_paid")
	header.item(:created_at_c).value t :created_at
	header.item(:created_by_c).value t :created_by
end


# Page Title list
company_id = @close_cash_report.first.company_id
project_id = @close_cash_report.first.project_id

# List detail
CashDeskClosing.uncached do
  @close_cash_report.find_each do |i|
  	if !i.company_id.blank? && (i.company_id != company_id)
  		report.page.list(:default).page_break
  		report.page.list(:default) do |list|
  			list.store.page_rows = 0
  			list.store.p_collected = 0
  			list.store.p_t_collected = 0
  			list.store.p_paid = 0
  			list.store.p_t_paid = 0
  		end
  		company_id = i.company_id
  	end
  	if !i.project_id.blank? && (i.project_id != project_id)
  		report.page.list(:default).page_break
  		report.page.list(:default) do |list|
  			list.store.page_rows = 0
  			list.store.p_collected = 0
  			list.store.p_paid = 0
  		end
  		project_id = i.project_id
  	end

  	report.page.list(:default).add_row do |row|
  		report.page.values company_c: I18n.t("activerecord.attributes.cash_desk_closing.company") + ": "
  		report.page.values project_c: I18n.t("activerecord.attributes.cash_desk_closing.project") + ": "
  		report.page.values company: i.company.name unless i.company.blank?
  		report.page.values project: i.project.to_label
  		row.item(:id).value i.id
  		row.item(:opening_balance).value number_with_precision(i.opening_balance, precision: 2, delimiter: I18n.locale == :es ? "." : ",")
  		row.item(:closing_balance).value number_with_precision(i.closing_balance, precision: 2, delimiter: I18n.locale == :es ? "." : ",")
  		row.item(:invoices_collected).value number_with_precision(i.invoices_collected, precision: 0, delimiter: I18n.locale == :es ? "." : ",")
  		row.item(:amount_collected).value number_with_precision(i.amount_collected, precision: 2, delimiter: I18n.locale == :es ? "." : ",")
  		row.item(:invoices_paid).value number_with_precision(i.invoices_paid, precision: 0, delimiter: I18n.locale == :es ? "." : ",")
  		row.item(:amount_paid).value number_with_precision(i.amount_paid, precision: 2, delimiter: I18n.locale == :es ? "." : ",")
  		row.item(:created_at).value i == @time_record ? formatted_timestamp(i.created_at) : formatted_timestamp(i.created_at.utc.getlocal)
  		row.item(:created_by).value User.find(i.created_by).email
  	end
  	# Store page subtotals
    report.page.list(:default) do |list|
  		list.store.page_rows += 1
  		list.store.p_collected += i.amount_collected
  		list.store.p_t_collected += i.amount_collected
  		list.store.p_paid += i.amount_paid
  		list.store.p_t_paid += i.amount_paid
  	end
  end
end
