<script type="text/javascript">
var text_field_color;

  $(document).ready(function() {
    // Select2
    $('select.sel2').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; },
      allowClear: true
    });
    // $('.date_picker').datepicker({
    //   format : 'dd/mm/yyyy',
    //   weekStart : 1
    // });
    $('.date_picker').datepicker({
      format : 'dd/mm/yyyy',
      weekStart : 1
    }).on('changeDate', function(e){
      $('.date_picker').datepicker('hide');
    });

    $('#form_new_service_point').bind("ajax:success", function(xhr, data, status) {
      var option = new Option(data.to_full_label,data.id);
      option.selected = true;
      $("select#contracting_request_service_point_id").append(option);
      $("select#contracting_request_service_point_id").trigger("change");
      $("#new-service-point").modal('hide');
      $("#new-service-point input").val("");
      $("#new-service-point .sel2").select2("val", "");
    });
    //Update offices for each company selected

    // Save default text color
    text_field_color = $("#service_point_code").css('color')
    // Icon inside text field: Validate Fiscal Id
    $('input.geniconify_serpoint').wrap('<span class="generateicon" title="<%=t('generate') %>" />').after($('<span/>').click(function() {
      $('#generate_serpoint_code_btn').trigger("click");
      return false;
    }));

  });
  jQuery(function($) {

    $("#company").change(function(e) {
      e.preventDefault(); //If this method is called, the default action of the event will not be triggered.
      var company_id = $('select#company :selected')[0].value; //id Element
      if (company_id == "") {
        company_id = "0";
      }
      jQuery.getJSON('update_offices_textfield_from_company/' + company_id, function(data) {

        var content = "";
            content += "<option></option>";
        if (data.length >= 1){
          data.forEach(function (data) {
            content += `<option value="${data.id}">${data.name}</option>`;
          });
        }

        $('#office').select2("val", ""); //Delete value select2 when fields change
        $('#office option').remove();
        $('#office').append(content);

      });
      return false;
    });

    // when the #fnt_town field changes
    $("#fnt_town").change(function() {

      // make a POST call and replace the content
      var contact = $('select#fnt_town :selected').val();
      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_province_textfield_from_town/' + contact, function(data) {

        $("#fnt_province").val(data.province_id);
        $("#fnt_region").val(data.region_id);
        $("#fnt_country").val(data.country_id);
      });
      return false;
    });
    // when the #fnt_province field changes
    $("#fnt_province").change(function() {
      // make a POST call and replace the content
      var contact = $('select#fnt_province :selected').val();
      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_region_textfield_from_province/' + contact, function(data) {
        $("#fnt_region").val(data.region_id);
        $("#fnt_country").val(data.country_id);
      });
      return false;
    });
    // when the #fnt_zipcode field changes
    $("#fnt_zipcode").change(function() {

      // make a POST call and replace the content
      var contact = $('select#fnt_zipcode :selected').val();
      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_province_textfield_from_zipcode/' + contact, function(data) {

        $("#fnt_town").val(data.town_id);
        $("#fnt_province").val(data.province_id);
        $("#fnt_region").val(data.region_id);
        $("#fnt_country").val(data.country_id);
      });
      return false;
    });

    // when #generate_code_btn is clicked
    $("#generate_serpoint_code_btn").click(function() {
      // make a POST call and replace the content
      var office = $('#service_point_office_id').val();
      if (office == "")
        office = "$";
      jQuery.getJSON('serpoint_generate_no/' + office, function(data) {
        $("#service_point_code").val(data.code);
        if ($("#service_point_code").val() == "$err") {
          $("#service_point_code").css('color', 'red');
          alert('<%= I18n.t("ag2_gest.service_points.code_error") %>');
        }
        else
          $("#service_point_code").css('color', text_field_color);
        $('#service_point_code').select();
      })
      return false;
    });

    // when the #fnt_region field changes
    $("#fnt_region").change(function() {
      // make a POST call and replace the content

      var contact = $('select#fnt_region :selected').val();
      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_country_textfield_from_region/' + contact, function(data) {
        $("#fnt_country").val(data.id);
      });
      return false;
    });

    // when changes street_directory, street_name and street_type changes and disbaled, or enables if empty
    $("#street_directory").change(function() {

      var contact = $('select#street_directory :selected').val();

      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_province_textfield_from_street_directory/' + contact, function(data) {

        $("#fnt_street_type").select2("val", data.street_type_id);
        $("#fnt_town").val(data.town_id);
        $("#fnt_province").val(data.province_id);
        $("#fnt_region").val(data.region_id);
        $("#fnt_country").val(data.country_id);
        $("#fnt_street_type").prop('disabled', true);
        $("#fnt_town").prop('disabled', true);
        $("#fnt_province").prop('disabled', true);
        $("#fnt_region").prop('disabled', true);
        $("#fnt_country").prop('disabled', true);
        if ((data.street_name == "") || (data.street_name == undefined)) {
          $("#street_name")[0].value = "";
          $("#street_name").prop('disabled', false);
          $("#fnt_street_type").prop('disabled', false);
          $("#fnt_town").prop('disabled', false);
          $("#fnt_province").prop('disabled', false);
          $("#fnt_region").prop('disabled', false);
          $("#fnt_country").prop('disabled', false);
        } else {
          $("#street_name")[0].value = data.street_name;
          $("#street_name").prop('disabled', true);
        }

      });
      return false;
    });
  }); //end jQuery
</script>

<div id="new-service-point" class="modal fade" style="display: none;">
  <%= simple_form_for ServicePoint.new, :method => :post, :remote => :true, :html => { "data-type" => :json, :class => 'modal-footer-right form-inline', :id => 'form_new_service_point' } do |f| %>
  <div class="modal-header">
    <a class="close" data-dismiss="modal">&#215;</a>
    <h3>Nuevo punto de servicio</h3>
    <span class="shrinked"><%= I18n.t(:mandatory_subtitle) %></span>
  </div>
  <div class="modal-body">
    <%= f.error_notification %>
    <%= f.input :organization_id, :as => :hidden, :input_html => { :value => session[:organization] }  %>
    <%= f.input :company_id, :as => :hidden, :input_html => { :value => session[:company] }  %>
    <%= f.input :office_id, :as => :hidden, :input_html => { :value => session[:office] }  %>
    <%= f.input :name, :autofocus => true, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :code, required: true, input_html: { onkeydown: "only_digit(event)", class: 'x-medium-text-field geniconify_serpoint', maxlength: 11 }, label_html: { class: 'form-label' } %>
    <%= f.input :gis_id, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :cadastral_reference, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <%#= f.association :service_point_type, :required => true, label: t('activerecord.attributes.service_point.service_point_type_id'), collection: ServicePointType.all(), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.name }, value_method: :id, :label_html => { :class => 'form-label' }%>
    <%= f.association :service_point_type, :required => true, label: t('activerecord.attributes.service_point.service_point_type_id'), collection: @service_point_types, :input_html => { :class => 'sel2 x-large-text-field' }, :label_html => { :class => 'form-label' }%>
    <%# if session[:organization] != '0' %>
      <%#= f.association :street_directory, :required => true, label: t('activerecord.attributes.service_point.street_directory_id'), collection: StreetDirectory.find_all_by_town_id(Organization.find(session[:organization]).companies.map(&:town_id), order: 'town_id, street_name'), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.street_name }, value_method: :id, :label_html => { :class => 'form-label' }%>
    <%# elsif current_user.organizations.count > 0 %>
      <%#= f.association :street_directory, :required => true, label: t('activerecord.attributes.service_point.street_directory_id'), collection: StreetDirectory.find_all_by_town_id(current_user.organizations.map{|o| o.towns.map(&:id)}.flatten.compact, order: 'town_id, street_name'), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.street_name }, value_method: :id, :label_html => { :class => 'form-label' }%>
    <%# else %>
      <%#= f.association :street_directory, :required => true, label: t('activerecord.attributes.service_point.street_directory_id'), collection: StreetDirectory.all(order: 'town_id, street_name'), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.street_name }, value_method: :id, :label_html => { :class => 'form-label' }%>
    <%# end %>
    <%= f.association :street_directory, :required => true, label: t('activerecord.attributes.service_point.street_directory_id'), collection: @offices, :input_html => { :class => 'sel2 x-large-text-field' }, :label_html => { :class => 'form-label' }%>
    <%= f.input :street_number, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :building, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :floor, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :floor_office, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :km, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <%#= f.association :zipcode, label: t('activerecord.attributes.service_point.zipcode_id'), collection: @zipcodes, :input_html => { :class => 'x-large-text-field' }, label_method: lambda { |zc| zc.to_label }, value_method: :id, :label_html => { :class => 'form-label' }%>
    <%= f.association :zipcode, label: t('activerecord.attributes.service_point.zipcode_id'), collection: @zipcodes, :input_html => { :class => 'x-large-text-field' }, :label_html => { :class => 'form-label' }%>
    <%= f.association :center, :required => true, label: t('activerecord.attributes.service_point.center_id'), collection: @centers, :input_html => { :class => 'x-large-text-field' }, :label_html => { :class => 'form-label' }%>
    <%#= f.association :service_point_location, :required => true, label: t('activerecord.attributes.service_point.service_point_location_id'), collection: ServicePointLocation.all(), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.name }, value_method: :id, :label_html => { :class => 'form-label' }%>
    <%= f.association :service_point_location, :required => true, label: t('activerecord.attributes.service_point.service_point_location_id'), collection: @service_point_locations, :input_html => { :class => 'sel2 x-large-text-field' }, :label_html => { :class => 'form-label' }%>
    <%#= f.association :service_point_purpose, :required => true, label: t('activerecord.attributes.service_point.service_point_purpose_id'), collection: ServicePointPurpose.all(), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.name }, value_method: :id, :label_html => { :class => 'form-label' }%>
    <%= f.association :service_point_purpose, :required => true, label: t('activerecord.attributes.service_point.service_point_purpose_id'), collection: @service_point_purposes, :input_html => { :class => 'sel2 x-large-text-field' }, :label_html => { :class => 'form-label' }%>
    <%= f.input :diameter, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :verified, :input_html => { :checked => true, :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :available_for_contract, :input_html => { :checked => true, :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <%# if session[:organization] != '0' %>
      <%#= f.association :reading_route, label: t('activerecord.attributes.service_point.reading_route_id'), collection: Organization.find(session[:organization]).projects.map{|p| p.reading_routes}.flatten, :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.name }, value_method: :id, :label_html => { :class => 'form-label' }%>
    <%# elsif current_user.organizations.count > 0 %>
      <%#= f.association :reading_route, label: t('activerecord.attributes.service_point.reading_route_id'), collection: current_user.organizations.map{|o| o.projects}.flatten.map{|p| p.reading_routes}.flatten, :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.name }, value_method: :id, :label_html => { :class => 'form-label' }%>
    <%# else %>
      <%#= f.association :reading_route, label: t('activerecord.attributes.service_point.reading_route_id'), collection: ReadingRoute.all(), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.name }, value_method: :id, :label_html => { :class => 'form-label' }%>
    <%# end %>
    <%= f.association :reading_route, label: t('activerecord.attributes.service_point.reading_route_id'), collection: @reading_routes, :input_html => { :class => 'sel2 x-large-text-field' }, :label_html => { :class => 'form-label' }%>
    <%= f.input :reading_sequence, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <%= f.input :reading_variant, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    <!-- Buttons -->
    <table class="form-table">
      <tbody>
        <tr class="form-tr">
          <td class="form-td-three left-winged"> <%= f.button :submit, :class => 'btn btn-primary' %> </td>
          <td class="form-td-three right-winged"><a href="#" id="generate_serpoint_code_btn" class="btn btn-warning"><%=t 'ag2_gest.service_points.generate_code_btn' %></a></td>
        </tr>
      </tbody>
    </table>
  <% end %>
  </div>
</div>
