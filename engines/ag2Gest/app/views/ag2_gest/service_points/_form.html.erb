<script type="text/javascript">
  $(document).ready(function() {
    // Select2
    $('select.sel2').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; },
      allowClear: true
    });

    $('.date_picker').datepicker({
      format : 'dd/mm/yyyy',
      weekStart : 1
    });
  });

  jQuery(function($) {

    //Update offices for each company selected
    $("#company").change(function(e) {

      e.preventDefault(); //If this method is called, the default action of the event will not be triggered.

      var company_id = $('select#company :selected')[0].value; //id Element

      if (company_id == "") {
        company_id = "0";
      }
      jQuery.getJSON('update_offices_textfield_from_company/' + company_id, function(data) {

        var content = "";
            content += "<option></option>";
        if (data.length >= 1){
          data.forEach(function (data) {
            content += `<option value="${data.id}">${data.name}</option>`;
          });
        }

        $('#office').select2("val", ""); //Delete value select2 when fields change
        $('#office option').remove();
        $('#office').append(content);

      });
      return false;
    });


    // when the #fnt_town field changes
    $("#fnt_town").change(function() {

      // make a POST call and replace the content
      var contact = $('select#fnt_town :selected').val();
      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_province_textfield_from_town/' + contact, function(data) {
        $("#fnt_province").select2("val", data.province_id);
        $("#fnt_region").select2("val", data.region_id);
        $("#fnt_country").select2("val", data.country_id);
      });
      return false;
    });

    // when the #fnt_province field changes
    $("#fnt_province").change(function() {
      // make a POST call and replace the content
      var contact = $('select#fnt_province :selected').val();
      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_region_textfield_from_province/' + contact, function(data) {
        $("#fnt_region").select2("val", data.region_id);
        $("#fnt_country").select2("val", data.country_id);
      });
      return false;
    });

    // when the #fnt_zipcode field changes
    $("#fnt_zipcode").change(function() {

      // make a POST call and replace the content
      var contact = $('select#fnt_zipcode :selected').val();
      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_province_textfield_from_zipcode/' + contact, function(data) {
        $("#fnt_town").select2("val", data.town_id);
        $("#fnt_province").select2("val", data.province_id);
        $("#fnt_region").select2("val", data.region_id);
        $("#fnt_country").select2("val", data.country_id);
      });
      return false;
    });

    // when the #fnt_region field changes
    $("#fnt_region").change(function() {
      // make a POST call and replace the content

      var contact = $('select#fnt_region :selected').val();
      if (contact == "")
        contact = "0";
      jQuery.getJSON('update_country_textfield_from_region/' + contact, function(data) {
        $("#fnt_country").select2("val", data.id);
      });
      return false;
    });


    // when changes street_directory, street_name and street_type changes and disbaled, or enables if empty
    $("#street_directory").change(function() {

      var contact = $('select#street_directory :selected').val();

      if (contact == "")
        contact = "0";

      jQuery.getJSON('update_province_textfield_from_street_directory/' + contact, function(data) {

        $("#fnt_street_type").select2("val", data.street_type_id);
        $("#fnt_town").select2("val", data.town_id);
        $("#fnt_province").select2("val", data.province_id);
        $("#fnt_region").select2("val", data.region_id);
        $("#fnt_country").select2("val", data.country_id);

        $("#fnt_street_type").prop('disabled', true);
        $("#fnt_town").prop('disabled', true);
        $("#fnt_province").prop('disabled', true);
        $("#fnt_region").prop('disabled', true);
        $("#fnt_country").prop('disabled', true);

        if ((data.street_name == "") || (data.street_name == undefined)) {
          $("#street_name")[0].value = "";
          $("#street_name").prop('disabled', false);
          $("#fnt_street_type").prop('disabled', false);
          $("#fnt_town").prop('disabled', false);
          $("#fnt_province").prop('disabled', false);
          $("#fnt_region").prop('disabled', false);
          $("#fnt_country").prop('disabled', false);
        } else {
          $("#street_name")[0].value = data.street_name;
          $("#street_name").prop('disabled', true);
        }

      });
      return false;
    });
  }); //end jQuery


</script>

<%= simple_form_for @service_point, :html => {:class => 'form-vertical well', :id => 'form_new_service_point' } do |f| %>
  <%= f.error_notification %>
  <%= display_base_errors resource %>

  <div class="row-fluid">
    <div class="span4">
      <%= f.input :name, :autofocus => true, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
    <div class="span4">
      <%= f.input :code, :autofocus => true, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
  </div>

  <div class="row-fluid">
    <div class="span4">
      <%= f.input :reading_variant, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
    <div class="span4">
      <%= f.input :gis_id, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
    <div class="span4">
      <%= f.input :cadastral_reference, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
  </div>

  <div class="row-fluid">
    <div class="span4">
      <%= f.association :office, label: t('activerecord.attributes.service_point.office_id'), collection: (session[:office].blank? ? Office.all : Office.where(id: session[:office]) ), include_blank: nil, :input_html => { :class => 'sel2 x-large-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
    <% unless session[:organization] == '0' %>
      <%= f.input :organization_id, :as => :hidden, :input_html => { :value => session[:organization] }  %>
    <% else %>
    <div class="span4">
      <%= f.association :organization, collection: Organization.all, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' }   %>
    </div>
    <% end %>
    <% if @company %>
      <%= f.input :company_id, :as => :hidden, :input_html => { :value => @company.id }  %>
    <% else %>
      <div class="span4">
        <%= f.association :company, collection: Company.all, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' }   %>
      </div>
    <% end %>
  </div>

  <div class="row-fluid">
    <div class="span4">
      <%= f.association :service_point_location, label: t('activerecord.attributes.service_point.service_point_location_id'), collection: ServicePointLocation.all(), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.name }, value_method: :id, :label_html => { :class => 'form-label' }%>
    </div>
    <div class="span4">
      <%= f.association :service_point_purpose, label: t('activerecord.attributes.service_point.service_point_purpose_id'), collection: ServicePointPurpose.all(), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.name }, value_method: :id, :label_html => { :class => 'form-label' }%>
    </div>
    <div class="span4">
      <%= f.association :service_point_type, label: t('activerecord.attributes.service_point.service_point_type_id'), collection: ServicePointType.all(), :input_html => { :class => 'sel2 x-large-text-field', :id => 'service_point_type' }, label_method: lambda { |st| st.name }, value_method: :id, :label_html => { :class => 'form-label' }%>
    </div>
  </div>

  <div class="row-fluid">
    <div class="span6">
      <%= f.association :street_directory, label: t('activerecord.attributes.service_point.street_directory_id'), collection: StreetDirectory.all(), :input_html => { :class => 'sel2 x-large-text-field', :id => 'street_directory' }, :label_html => { :class => 'form-label' }%>
    </div>
    <div class="span2">
      <%= f.input :street_number, required: true, :input_html => { :class => 'small-text-field number-text-field', :id => 'fnt_street_number' }, :label_html => { :class => 'form-label' } %>
    </div>
    <div class="span4">
      <%= f.association :center, label: t('activerecord.attributes.service_point.center_id'), collection: Center.all(), :input_html => { :class => 'sel2 x-large-text-field', :id => 'center' }, :label_html => { :class => 'form-label' }%>
    </div>
  </div>

  <div class="row-fluid">
    <div class="span3">
      <%= f.input :building, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
    <div class="span3">
      <%= f.input :floor, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
    <div class="span3">
      <%= f.input :floor_office, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
    <div class="span3">
    <%= f.association :zipcode, label: t('activerecord.attributes.service_point.zipcode_id'), collection: Zipcode.all(order: 'zipcode'), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |zc| zc.to_label }, value_method: :id, :label_html => { :class => 'form-label' }%>
    </div>
  </div>

  <div class="row-fluid">
    <div class="span4">
      <%= f.association :reading_route, label: t('activerecord.attributes.service_point.reading_route_id'), collection: (session[:office]=='0' ? ReadingRoute.all() : ReadingRoute.where(office_id: session[:office])), :input_html => { :class => 'sel2 x-large-text-field' }, :label_html => { :class => 'form-label' }%>
    </div>
    <div class="span4">
      <%= f.input :diameter, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
    <div class="span4">
      <%= f.input :reading_sequence, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
  </div>

  <div class="row-fluid">
    <div class="span4">
      <%#= f.association :service_point_purpose, label: t('activerecord.attributes.service_point.service_point_purpose_id'), collection: ServicePointPurpose.all(), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.name }, value_method: :id, :label_html => { :class => 'form-label' }%>
      <%= f.input :available_for_contract, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
    <div class="span4">
      <%= f.input :verified, :input_html => { :class => 'x-medium-text-field' }, :label_html => { :class => 'form-label' } %>
    </div>
  </div>

  <%= f.button :submit, :class => 'btn-primary' %>
<% end %>
