<script type="text/javascript">
  var text_field_color;

  function metersSelect2ForNew(intialValue) {
    var target_url = "/search_meters";
    $('#Meter').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; },
      dropdownCssClass: 'shrinked',
      dropdownAutoWidth: true,
      placeholder: intialValue,
      allowClear: true,
      ajax: {
        url: target_url,
        dataType: "json",
        delay: 250,
        data: function(term, page) {
          return {
            q: term || '',
            page: page || 1
          };
        },
        results: function(data, page) {
          return {
            results: data
          }
        },
        cache: true
      }
    });
  }

  $(document).ready(function() {
    // $('.date_picker').datepicker({
    //   format : 'dd/mm/yyyy',
    //   weekStart : 1
    // });
    $('.date_picker').datepicker({
      format : 'dd/mm/yyyy',
      weekStart : 1
    }).on('changeDate', function(e){
      $('.date_picker').datepicker('hide');
    });

    // Select2
    $('select.sel2').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; },
      allowClear: true
    });

    // Setup special search (select2)
    metersSelect2ForNew("<%= @master_meter %>");

    // Set initial focus
    $(this).find(".form-label:first").focus();
  });

  jQuery(function($) {
    // when the #meter_company_id field changes
    $("#meter_company_id").change(function() {
      // make a POST call and replace the content
      //var meter = $('select#meter_company_id :selected').val();
      var meter = $('select#meter_company_id').val();
      if (meter == "")
        meter = "0";
      jQuery.getJSON('me_update_office_select_from_company/' + meter, function(data) {
        var w = data.offices;
        $("#meter_office_id").html("");
        $("#meter_office_id").select2("val", "");
        $("#meter_office_id").append($('<option></option>').val("").html(""));
        if (!w.length) {
          $.each(data, function(id, option) {
            if (id == 'companies' && option != "") {
              $("#meter_office_id").append($('<option></option>').val(option.id).html(option.name));
            }
          });
        } else {
          $.each(w, function(id, option) {
            $("#meter_office_id").append($('<option></option>').val(option.id).html(option.name));
          });
        }
      });
      return false;
    });

    // when the #meter_organization_id field changes
    $("#meter_organization_id").change(function() {
      // make a POST call and replace the content
      //var meter = $('select#meter_organization_id :selected').val();
      var meter = $('select#meter_organization_id').val();
      if (meter == "")
        meter = "0";
      jQuery.getJSON('me_update_company_select_from_organization/' + meter, function(data) {
        var c = data.companies;
        var w = data.offices;
        // Companies
        $("#meter_company_id").html("");
        $("#meter_company_id").val("");
        $("#meter_company_id").append($('<option></option>').val("").html(""));
        if (!c.length) {
          $.each(data, function(id, option) {
            if (id == 'companies' && option != "") {
              $("#meter_company_id").append($('<option></option>').val(option.id).html(option.name));
            }
          });
        } else {
          $.each(c, function(id, option) {
            $("#meter_company_id").append($('<option></option>').val(option.id).html(option.name));
          });
        }
        // Offices
        $("#meter_office_id").html("");
        $("#meter_office_id").select2("val", "");
        $("#meter_office_id").append($('<option></option>').val("").html(""));
        if (!w.length) {
          $.each(data, function(id, option) {
            if (id == 'offices' && option != "") {
              $("#meter_office_id").append($('<option></option>').val(option.id).html(option.name));
            }
          });
        } else {
          $.each(w, function(id, option) {
            $("#meter_office_id").append($('<option></option>').val(option.id).html(option.name));
          });
        }
      });
      return false;
    });

    // when #input_change_meter changes
    $("#input_change_meter").change(function() {
      // make a POST call and replace the content
      var meter = $('#input_change_meter').val();
      if (meter == "")
        meter = "$";
      jQuery.getJSON('me_find_meter/' + meter, function(data) {
        $("#alert_change").html(data.alert);
        if (data.code == "$err") {
          $("#alert_change").css('color', 'red');
          alert('<%= I18n.t("activerecord.attributes.meter.master_meter") %>' + " " + data.alert);
          $('#input_change_meter').val("");
        } else {
          $("#alert_change").css('color', text_field_color);
          $('#sel2_association_change').val(data.meter_id);
        }
      });
      return false;
    });
  });
</script>

<%= simple_form_for @meter, :html => { :class => 'form-vertical well' } do |f| %>
<%= f.error_notification %>
<%= display_base_errors resource %>
<%= f.input :id, as: :hidden, input_html: { class: 'mid-text-field' }, label_html: { class: 'form-label' } %>
<div>
  <label class="multi-field-label-two">
    <% if session[:organization] != '0' %>
    <%= f.association :organization, collection: Organization.where("id = ?", "#{session[:organization]}").all, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% elsif current_user.organizations.count > 0 %>
    <%= f.association :organization, collection: current_user.organizations.order('name'), input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% else %>
    <%= f.association :organization, collection: Organization.order('name'), input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %>
    <% end %>
  </label>
  <label class="multi-field-label-two"> <%= f.input :meter_code, :required => true, :input_html => { :class => 'x-large-text-field', maxlength: 12 }, :label_html => { :class => 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two">
    <% if session[:company] != '0' %>
    <%= f.association :company, collection: Company.where("id = ?", "#{session[:company]}").all, input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% elsif current_user.companies.count > 0 %>
    <%= f.association :company, collection: current_user.companies.order('name'), input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% else %>
    <%= f.association :company, collection: @companies, :input_html => { :class => 'x-large-text-field sel2' }, :label_html => { :class => 'form-label' } %>
    <% end %>
  </label>
  <label class="multi-field-label-two"> <%= f.association :office, :required => true, collection: (session[:office]=="0" ? Office.all : Office.where(id: session[:office]) ), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.to_label }, value_method: :id, :label_html => { :class => 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.association :meter_owner, label: t('activerecord.attributes.meter.meter_owner_id'), collection: MeterOwner.all(), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.name }, value_method: :id, :label_html => { :class => 'form-label' }%> </label>
    <label class="multi-field-label-two">
      <%#= f.association :master_meter, collection: @master_meter, input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %>
      <%= label_tag "label_meter", t("activerecord.attributes.meter.master_meter"), :class => 'form-label' %>
      <%= text_field_tag "Meter", params[:MasterMeter], :class => 'x-large-text-field', data: { allow: { clear: 'false' } } %>
    </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.association :meter_model, label: t('activerecord.attributes.meter.meter_model_id'), collection: MeterModel.all(), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.full_name }, value_method: :id, :label_html => { :class => 'form-label' }%> </label>
  <label class="multi-field-label-two"> <%= f.association :caliber, label: t('activerecord.attributes.meter.caliber_id'), collection: Caliber.all(), :input_html => { :class => 'sel2 x-large-text-field' }, label_method: lambda { |st| st.caliber }, value_method: :id, :label_html => { :class => 'form-label' }%> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.input :manufacturing_year, :required => true, :autofocus => true, :input_html => { :class => 'mid-text-field', max: 9999}, :limit => 4, :default => 0, :label_html => { :class => 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :purchase_date, :start_year => Time.now.year - 100, :end_year => Time.now.year + 100, :as => :string, :input_html => { :value => (f.object.purchase_date.strftime("%d/%m/%Y") if f.object.purchase_date), :class => 'mid-text-field date_picker' }, :label_html => { :class => 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.input :first_installation_date, :start_year => Time.now.year - 100, :end_year => Time.now.year + 100, :as => :string, :input_html => { :value => (f.object.first_installation_date.strftime("%d/%m/%Y") if f.object.first_installation_date), :class => 'mid-text-field date_picker' }, :label_html => { :class => 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :expiry_date, :start_year => Time.now.year - 100, :end_year => Time.now.year + 100, :as => :string, :input_html => { :value => (f.object.expiry_date.strftime("%d/%m/%Y") if f.object.expiry_date), :class => 'mid-text-field date_picker' }, :label_html => { :class => 'form-label' } %> </label>
</div>
<span class="left-floated shrinked" style="vertical-align: bottom" id="alert_change"></span>
<%= f.button :submit, :class => 'btn-primary' %>
<% end %>
