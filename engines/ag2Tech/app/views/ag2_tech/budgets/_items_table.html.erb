<script>
  $(document).ready(function() {
    $('.isel2').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; },
      dropdownCssClass: 'shrinked',
      dropdownAutoWidth: true,
      containerCssClass: 'sub-select2-field'
    });

    // Trigger to display totals at table foot
    $('#items-table').bind('totals', function(event) {
      // Sum necessary values from table rows
      var m01 = 0;
      var m02 = 0;
      var m03 = 0;
      var m04 = 0;
      var m05 = 0;
      var m06 = 0;
      var m07 = 0;
      var m08 = 0;
      var m09 = 0;
      var m10 = 0;
      var m11 = 0;
      var m12 = 0;
      var anu = 0;
      var cor = 0;
      $('#items-table tr.fields:visible').each(function() {
        m01 += parseFloat(right_number($(this).find('input.fnt-month01').val(), 4));
        m02 += parseFloat(right_number($(this).find('input.fnt-month02').val(), 4));
        m03 += parseFloat(right_number($(this).find('input.fnt-month03').val(), 4));
        m04 += parseFloat(right_number($(this).find('input.fnt-month04').val(), 4));
        m05 += parseFloat(right_number($(this).find('input.fnt-month05').val(), 4));
        m06 += parseFloat(right_number($(this).find('input.fnt-month06').val(), 4));
        m07 += parseFloat(right_number($(this).find('input.fnt-month07').val(), 4));
        m08 += parseFloat(right_number($(this).find('input.fnt-month08').val(), 4));
        m09 += parseFloat(right_number($(this).find('input.fnt-month09').val(), 4));
        m10 += parseFloat(right_number($(this).find('input.fnt-month10').val(), 4));
        m11 += parseFloat(right_number($(this).find('input.fnt-month11').val(), 4));
        m12 += parseFloat(right_number($(this).find('input.fnt-month12').val(), 4));
        anu += parseFloat(right_number($(this).find('input.fnt-annual').val(), 4));
        cor += parseFloat(right_number($(this).find('input.fnt-corrected').val(), 4));
      });
      m01 = parseInt(right_number(m01.toString(), 4) * 10000);
      m02 = parseInt(right_number(m02.toString(), 4) * 10000);
      m03 = parseInt(right_number(m03.toString(), 4) * 10000);
      m04 = parseInt(right_number(m04.toString(), 4) * 10000);
      m05 = parseInt(right_number(m05.toString(), 4) * 10000);
      m06 = parseInt(right_number(m06.toString(), 4) * 10000);
      m07 = parseInt(right_number(m07.toString(), 4) * 10000);
      m08 = parseInt(right_number(m08.toString(), 4) * 10000);
      m09 = parseInt(right_number(m09.toString(), 4) * 10000);
      m10 = parseInt(right_number(m10.toString(), 4) * 10000);
      m11 = parseInt(right_number(m11.toString(), 4) * 10000);
      m12 = parseInt(right_number(m12.toString(), 4) * 10000);
      anu = parseInt(right_number(anu.toString(), 4) * 10000);
      cor = parseInt(right_number(cor.toString(), 4) * 10000);
      jQuery.getJSON('bu_item_totals/' + m01 + '/' + m02 + '/' + m03 + '/' + m04 + '/' +
                                         m05 + '/' + m06 + '/' + m07 + '/' + m08 + '/' +
                                         m09 + '/' + m10 + '/' + m11 + '/' + m12 + '/' +
                                         anu + '/' + cor, function(data) {
        document.getElementById('foot-total01').innerHTML = data.total01;
        document.getElementById('foot-total02').innerHTML = data.total02;
        document.getElementById('foot-total03').innerHTML = data.total03;
        document.getElementById('foot-total04').innerHTML = data.total04;
        document.getElementById('foot-total05').innerHTML = data.total05;
        document.getElementById('foot-total06').innerHTML = data.total06;
        document.getElementById('foot-total07').innerHTML = data.total07;
        document.getElementById('foot-total08').innerHTML = data.total08;
        document.getElementById('foot-total09').innerHTML = data.total09;
        document.getElementById('foot-total10').innerHTML = data.total10;
        document.getElementById('foot-total11').innerHTML = data.total11;
        document.getElementById('foot-total12').innerHTML = data.total12;
        document.getElementById('foot-annual').innerHTML = data.annual;
        document.getElementById('foot-corrected').innerHTML = data.corrected;
      });
    });
    // Update and display totals
    $('#items-table').trigger('totals');
  }); 

  jQuery(function($) {
    // when the .fnt-month01 field changes
    $(".fnt-month01").change(function() {
      var _this = (this);
      recalculate_bu_table(_this);
      return false;
    });

    // when the .fnt-month02 field changes
    $(".fnt-month02").change(function() {
      var _this = (this);
      recalculate_bu_table(_this);
      return false;
    });

    // when the .fnt-month03 field changes
    $(".fnt-month03").change(function() {
      var _this = (this);
      recalculate_bu_table(_this);
      return false;
    });

    // when the .fnt-month04 field changes
    $(".fnt-month04").change(function() {
      var _this = (this);
      recalculate_bu_table(_this);
      return false;
    });

    // when the .fnt-month05 field changes
    $(".fnt-month05").change(function() {
      var _this = (this);
      recalculate_bu_table(_this);
      return false;
    });

    // when the .fnt-month06 field changes
    $(".fnt-month06").change(function() {
      var _this = (this);
      recalculate_bu_table(_this);
      return false;
    });

    // when the .fnt-month07 field changes
    $(".fnt-month07").change(function() {
      var _this = (this);
      recalculate_bu_table(_this);
      return false;
    });

    // when the .fnt-month08 field changes
    $(".fnt-month08").change(function() {
      var _this = (this);
      recalculate(_this);
      return false;
    });

    // when the .fnt-month09 field changes
    $(".fnt-month09").change(function() {
      var _this = (this);
      recalculate_bu_table(_this);
      return false;
    });

    // when the .fnt-month10 field changes
    $(".fnt-month10").change(function() {
      var _this = (this);
      recalculate_bu_table(_this);
      return false;
    });

    // when the .fnt-month11 field changes
    $(".fnt-month11").change(function() {
      var _this = (this);
      recalculate_bu_table(_this);
      return false;
    });

    // when the .fnt-month12 field changes
    $(".fnt-month12").change(function() {
      var _this = (this);
      recalculate_bu_table(_this);
      return false;
    });

    // when the .fnt-corrected field changes
    $(".fnt-corrected").change(function() {
      var tbl = true;
      var cor = $(_this).closest('tr').find('.fnt-corrected').val();
      if (cor == "")
        cor = "0";
      // Right formatted for passing as REST parameter
      cor = parseInt(right_number(cor, 4) * 10000);
      jQuery.getJSON('bu_update_corrected/' + cor + "/" + tbl, function(data) {
        $(_this).closest('tr').find('.fnt-corrected').val(data.corrected);
        // Update and display totals
        $('#items-table').trigger('totals');
      });
      return false;
    });
    
    // Recalculate amounts
    function recalculate_bu_table(_this) {
      // make a POST call and replace the content
      var tbl = true;
      var m01 = $(_this).closest('tr').find('.fnt-month01').val();
      if (m01 == "")
        m01 = "0";
      var m02 = $(_this).closest('tr').find('.fnt-month02').val();
      if (m02 == "")
        m02 = "0";
      var m03 = $(_this).closest('tr').find('.fnt-month03').val();
      if (m03 == "")
        m03 = "0";
      var m04 = $(_this).closest('tr').find('.fnt-month04').val();
      if (m04 == "")
        m04 = "0";
      var m05 = $(_this).closest('tr').find('.fnt-month05').val();
      if (m05 == "")
        m05 = "0";
      var m06 = $(_this).closest('tr').find('.fnt-month06').val();
      if (m06 == "")
        m06 = "0";
      var m07 = $(_this).closest('tr').find('.fnt-month07').val();
      if (m07 == "")
        m07 = "0";
      var m08 = $(_this).closest('tr').find('.fnt-month08').val();
      if (m08 == "")
        m08 = "0";
      var m09 = $(_this).closest('tr').find('.fnt-month09').val();
      if (m09 == "")
        m09 = "0";
      var m10 = $(_this).closest('tr').find('.fnt-month10').val();
      if (m10 == "")
        m10 = "0";
      var m11 = $(_this).closest('tr').find('.fnt-month11').val();
      if (m11 == "")
        m11 = "0";
      var m12 = $(_this).closest('tr').find('.fnt-month12').val();
      if (m12 == "")
        m12 = "0";
      // Right formatted for passing as REST parameter
      m01 = parseInt(right_number(m01.toString(), 4) * 10000);
      m02 = parseInt(right_number(m02.toString(), 4) * 10000);
      m03 = parseInt(right_number(m03.toString(), 4) * 10000);
      m04 = parseInt(right_number(m04.toString(), 4) * 10000);
      m05 = parseInt(right_number(m05.toString(), 4) * 10000);
      m06 = parseInt(right_number(m06.toString(), 4) * 10000);
      m07 = parseInt(right_number(m07.toString(), 4) * 10000);
      m08 = parseInt(right_number(m08.toString(), 4) * 10000);
      m09 = parseInt(right_number(m09.toString(), 4) * 10000);
      m10 = parseInt(right_number(m10.toString(), 4) * 10000);
      m11 = parseInt(right_number(m11.toString(), 4) * 10000);
      m12 = parseInt(right_number(m12.toString(), 4) * 10000);
      jQuery.getJSON('bu_update_annual/' + m01 + '/' + m02 + '/' + m03 + '/' + m04 + '/' +
                                           m05 + '/' + m06 + '/' + m07 + '/' + m08 + '/' +
                                           m09 + '/' + m10 + '/' + m11 + '/' + m12 + "/" + tbl, function(data) {
        $(_this).closest('tr').find('.fnt-month01').val(data.month01);
        $(_this).closest('tr').find('.fnt-month02').val(data.month02);
        $(_this).closest('tr').find('.fnt-month03').val(data.month03);
        $(_this).closest('tr').find('.fnt-month04').val(data.month04);
        $(_this).closest('tr').find('.fnt-month05').val(data.month05);
        $(_this).closest('tr').find('.fnt-month06').val(data.month06);
        $(_this).closest('tr').find('.fnt-month07').val(data.month07);
        $(_this).closest('tr').find('.fnt-month08').val(data.month08);
        $(_this).closest('tr').find('.fnt-month09').val(data.month09);
        $(_this).closest('tr').find('.fnt-month10').val(data.month10);
        $(_this).closest('tr').find('.fnt-month11').val(data.month11);
        $(_this).closest('tr').find('.fnt-month12').val(data.month12);
        $(_this).closest('tr').find('.fnt-annual').val(data.annual);
        // Update and display totals
        $('#items-table').trigger('totals');
      });
    }

    /*
     * Very special function!
     * This one re-calculate table totals after delete an item
     * When the .icon-trash clicked
     * Replace behavior of link_to_remove_fields
     * (the same was done in nested_wo.js)
     */
    $(".icon-trash").click(function() {
      remove_fields(this);
      // Update and display totals
      $('#items-table').trigger('totals');
    });
  });
</script>

<table id="items-table" class="table table-condensed table-striped shrinked fixed">
  <!-- account -->
  <col width="11%" />
  <!-- month01 -->
  <col width="6%" />
  <!-- month02 -->
  <col width="6%" />
  <!-- month03 -->
  <col width="6%" />
  <!-- month04 -->
  <col width="6%" />
  <!-- month05 -->
  <col width="6%" />
  <!-- month06 -->
  <col width="6%" />
  <!-- month07 -->
  <col width="6%" />
  <!-- month08 -->
  <col width="6%" />
  <!-- month09 -->
  <col width="6%" />
  <!-- month10 -->
  <col width="6%" />
  <!-- month11 -->
  <col width="6%" />
  <!-- month12 -->
  <col width="6%" />
  <!-- annual -->
  <col width="6%" />
  <!-- corrected -->
  <col width="6%" />
  <!-- button -->
  <col width="5%" />
  <thead>
    <%= render 'items_header' %>
  </thead>
  <tfoot>
    <%= render 'items_table_footer', f: f %>
  </tfoot>
  <tbody>
    <%= f.simple_fields_for :budget_items, defaults: { input_html: { class: 'sub-form' } } do |i| %>
    <tr class="fields">
      <td><%= i.association :charge_account, label: false, wrapper: false, collection: @charge_accounts, input_html: { class: 'isel2 fnt-account' } %></td>
      <td><%= i.input :month_01, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.month_01, precision: 4) if i.object.month_01), class: 'sub-number-text-field fnt-month01' } %></td>
      <td><%= i.input :month_02, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.month_02, precision: 4) if i.object.month_02), class: 'sub-number-text-field fnt-month02' } %></td>
      <td><%= i.input :month_03, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.month_03, precision: 4) if i.object.month_03), class: 'sub-number-text-field fnt-month03' } %></td>
      <td><%= i.input :month_04, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.month_04, precision: 4) if i.object.month_04), class: 'sub-number-text-field fnt-month04' } %></td>
      <td><%= i.input :month_05, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.month_05, precision: 4) if i.object.month_05), class: 'sub-number-text-field fnt-month05' } %></td>
      <td><%= i.input :month_06, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.month_06, precision: 4) if i.object.month_06), class: 'sub-number-text-field fnt-month06' } %></td>
      <td><%= i.input :month_07, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.month_07, precision: 4) if i.object.month_07), class: 'sub-number-text-field fnt-month07' } %></td>
      <td><%= i.input :month_08, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.month_08, precision: 4) if i.object.month_08), class: 'sub-number-text-field fnt-month08' } %></td>
      <td><%= i.input :month_09, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.month_09, precision: 4) if i.object.month_09), class: 'sub-number-text-field fnt-month09' } %></td>
      <td><%= i.input :month_10, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.month_10, precision: 4) if i.object.month_10), class: 'sub-number-text-field fnt-month10' } %></td>
      <td><%= i.input :month_11, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.month_11, precision: 4) if i.object.month_11), class: 'sub-number-text-field fnt-month11' } %></td>
      <td><%= i.input :month_12, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.month_12, precision: 4) if i.object.month_12), class: 'sub-number-text-field fnt-month12' } %></td>
      <td><%= i.input :annual, disabled: true, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.annual, precision: 4) if i.object.annual), class: 'sub-number-text-field sub-disabled-field fnt-annual' } %></td>
      <td><%= i.input :corrected_amount, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.corrected_amount, precision: 4) if i.object.corrected_amount), class: 'sub-number-text-field fnt-corrected' } %></td>
      <% if @breadcrumb == 'create' || @breadcrumb == 'update' %>
      <td><%= link_to_remove_fields('<i class="icon-trash"></i>'.html_safe, i) %></td>
      <% end %>
    </tr>
    <% end %>
  </tbody>
</table>
