<script>
  var text_field_color;
  var old_org = '';
  var old_typ = '';
  var old_code = '';
  var _thisForm = '';

  $(document).ready(function() {
    $('select.sel2').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; },
      allowClear: true
    });
    $('.date_picker').datepicker({
      format : 'dd/mm/yyyy',
      weekStart : 1
    }).on('changeDate', function(e){
      $('.date_picker').datepicker('hide');
    });

    // Initialize form variable
    _thisForm = $("#infrastructure_code").closest('form')[0];

    // Save default text color
    text_field_color = $("#infrastructure_code").css('color');

    // Icon inside text field: Generate No
    $('input.iconify').wrap('<span class="generateicon" title="<%=t('generate') %>" />').after($('<span/>').click(function() {
      $('#generate_code_btn').trigger("click");
      return false;
    }));

    // Disable fields if #infrastructure_code blank
    var code = $('#infrastructure_code').val();
    if (code == "")
      code = "0";
    if (code == "0") {
      // Empty code: Disable
      $('#submit_btn').hide();
    } else {
      // Code OK: Enable
      $('#submit_btn').show();
      old_typ = $('#infrastructure_infrastructure_type_id').val();
    }

    // Disable generate_code_btn if infrastructure_organization_id blank
    var order = $('#infrastructure_organization_id').val();
    if (order == "")
      order = "0";
    if (order == "0") {
      // Empty company: Hide
      $('#generate_code_btn').hide();
    } else {
      // Organization OK: Show (if not updating)
      old_org = $('#infrastructure_organization_id').val();
      old_code = $('#infrastructure_code').val();
      if ('<%= @breadcrumb %>' == "update") {
        $('#generate_code_btn').hide();
      } else {
        $('#generate_code_btn').show();
      }
    }

    // Can't change code if editing
    if ('<%= @breadcrumb %>' == "update") {
      $('#infrastructure_code').prop('readonly', true);
    } else {
      $('#infrastructure_code').prop('readonly', false);
    }

    // Set initial focus
    $(this).find(".form-label:first").focus();
  });

  jQuery(function($) {
    // when the #infrastructure_code field changes
    $("#infrastructure_code").change(function() {
      var order = $('#infrastructure_code').val();
      if (order == "")
        order = "0";
      if (order == "0") {
        // Empty order: Disable
        $('#submit_btn').hide();
      } else {
        // Order OK: Enable
        $('#submit_btn').show();
      }
    });

    // when #generate_code_btn is clicked
    $("#generate_code_btn").click(function() {
      // make a POST call and replace the content
      var org = $('select#infrastructure_organization_id').val();
      if (org == "")
        org = "$";
      var type = $('select#infrastructure_infrastructure_type_id').val();
      if (type == "")
        type = "$";
      jQuery.getJSON('in_generate_code/' + org + '/' + type, function(data) {
        $("#infrastructure_code").val(data.code);
        if ($("#infrastructure_code").val() == "$err") {
          $("#infrastructure_code").css('color', 'red');
          alert('<%= I18n.t("ag2_tech.infrastructures.code_error") %>');
          $('#infrastructure_code').select();
        } else {
          $("#infrastructure_code").css('color', text_field_color);
          $("#infrastructure_code").trigger("change");
        }
      });
      return false;
    });

    // when the #infrastructure_infrastructure_type_id field changes
    $("#infrastructure_infrastructure_type_id").change(function() {
      var type = $('select#infrastructure_infrastructure_type_id').val();
      if (type == "")
        type = "0";
      if (type == "0") {
        // Empty type: Disable
        $('#infrastructure_code').prop('disabled', true);
        $('#generate_code_btn').hide();
        $('#submit_btn').hide();
      } else {
        // Type OK: Enable
        $('#infrastructure_code').prop('disabled', false);
        $('#generate_code_btn').show();
        $('#submit_btn').show();
      }
      // Disable generate_code_btn if infrastructure_infrastructure_type_id blank
      show_hide_generate_code_btn();
    });

    // when the #infrastructure_office_id field changes
    $("#infrastructure_office_id").change(function() {
      // make a POST call and replace the content
      var project = $('select#infrastructure_office_id').val();
      if (project == "")
        project = "0";
      jQuery.getJSON('in_update_company_textfield_from_office/' + project, function(data) {
        $("#infrastructure_company_id").val(data.id);
      })
      return false;
    });

    // when the #infrastructure_organization_id field changes
    $("#infrastructure_organization_id").change(function() {
      // make a POST call and replace the content
      var project = $('select#infrastructure_organization_id').val();
      if (project == "")
        project = "0";
      jQuery.getJSON('in_update_company_and_office_textfields_from_organization/' + project, function(data) {
        var c = data.companies;
        var o = data.offices;
        var t = data.types;
        // Companies
        $("#infrastructure_company_id").html("");
        $("#infrastructure_company_id").val("");
        $("#infrastructure_company_id").append($('<option></option>').val("").html(""));
        if (!c.length) {
          $.each(data, function(id, option) {
            if (id == 'companies' && option != "") {
              $("#infrastructure_company_id").append($('<option></option>').val(option.id).html(option.name));
            }
          });
        } else {
          $.each(c, function(id, option) {
            $("#infrastructure_company_id").append($('<option></option>').val(option.id).html(option.name));
          });
        }
        // Offices
        $("#infrastructure_office_id").html("");
        $("#infrastructure_office_id").val("");
        $("#infrastructure_office_id").append($('<option></option>').val("").html(""));
        if (!o.length) {
          $.each(data, function(id, option) {
            if (id == 'offices' && option != "") {
              $("#infrastructure_office_id").append($('<option></option>').val(option[0]).html(option[1] + " (" + option[2] + ")"));
            }
          });
        } else {
          $.each(o, function(id, option) {
            $("#infrastructure_office_id").append($('<option></option>').val(option[0]).html(option[1] + " (" + option[2] + ")"));
          });
        }
        // Types
        $("#infrastructure_infrastructure_type_id").html("");
        $("#infrastructure_infrastructure_type_id").select2("val", "");
        $("#infrastructure_infrastructure_type_id").append($('<option></option>').val("").html(""));
        if (!t.length) {
          $.each(data, function(id, option) {
            if (id == 'types' && option != "") {
              $("#infrastructure_infrastructure_type_id").append($('<option></option>').val(option.id).html(option.name));
            }
          });
        } else {
          $.each(t, function(id, option) {
            $("#infrastructure_infrastructure_type_id").append($('<option></option>').val(option.id).html(option.name));
          });
        }
      });
      // No organization selected: No company, no office, no type
      if (project == "0") {
        $("#infrastructure_company_id").val(0);
        $("#infrastructure_office_id").val(0);
        $("#infrastructure_infrastructure_type_id").select2("val", "");
      }
      // Disable generate_code_btn if infrastructure_organization_id blank
      show_hide_generate_code_btn();
      return false;
    });
  });

  function show_hide_generate_code_btn() {
    // Disable generate_code_btn if infrastructure_organization_id and infrastructure_infrastructure_type_id are blank
    var org = $('select#infrastructure_organization_id').val();
    if (org == "")
      org = "$";
    var type = $('select#infrastructure_infrastructure_type_id').val();
    if (type == "")
      type = "$";
    if (org != "$" && type != "$") {
      // Show (if not updating)
      if ('<%= @breadcrumb == 'update' %>') {
        if (old_org == $('#infrastructure_organization_id').val() && old_typ == $('#infrastructure_infrastructure_type_id').val()) {
          $('#infrastructure_code').val(old_code);
          $("#infrastructure_code").css('color', text_field_color);
          $('#generate_code_btn').hide();
        } else {
          $('#generate_code_btn').show();
        }
      } else {
        $('#generate_code_btn').show();
      }
    } else {
      // Hide
      $('#generate_code_btn').hide();
    }
  }
</script>

<%= simple_form_for @infrastructure, :html => {:class => 'form-vertical well' } do |f| %>
<%= f.error_notification %>
<%= display_base_errors resource %>
<div>
  <label class="multi-field-label-two">
    <% if session[:organization] != '0' %>
    <%= f.association :organization, collection: Organization.where("id = ?", "#{session[:organization]}").all, input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% elsif current_user.organizations.count > 0 %>
    <%= f.association :organization, collection: current_user.organizations.order('name'), input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% else %>
    <%= f.association :organization, collection: Organization.order('name'), input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %>
    <% end %>
  </label>
  <label class="multi-field-label-two"> <%= f.association :infrastructure_type, collection: @infrastructure_types, input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two">
    <% if session[:office] != '0' %>
    <%= f.association :office, collection: Office.where("id = ?", "#{session[:office]}").all, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% elsif current_user.offices.count > 0 %>
    <%= f.association :office, collection: current_user.offices.order('name'), input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% else %>
    <%= f.association :office, collection: @offices, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %>
    <% end %>
  </label>
  <label class="multi-field-label-two">
    <% if session[:company] != '0' %>
    <%= f.association :company, collection: Company.where("id = ?", "#{session[:company]}").all, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% elsif current_user.companies.count > 0 %>
    <%= f.association :company, collection: current_user.companies.order('name'), input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% else %>
    <%= f.association :company, collection: @companies, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %>
    <% end %>
  </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.input :code, input_html: { class: 'mid-text-field iconify' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :name, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<!-- Buttons -->
<table class="form-table">
  <tbody>
    <tr class="form-tr">
      <td class="form-td-three left-winged"> <%= f.button :submit, :class => 'btn-primary', :id => 'submit_btn' %> </td>
      <td class="form-td-three right-winged"><a href="#" id="generate_code_btn" class="btn btn-warning"><%=t 'ag2_tech.infrastructures.generate_code_btn' %></a></td>
    </tr>
  </tbody>
</table>
<% end %>
