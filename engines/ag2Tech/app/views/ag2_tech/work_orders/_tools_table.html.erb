<script>
  var _f = '';

  $(document).ready(function() {
    $('.tsel2').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; },
      dropdownCssClass: 'shrinked',
      dropdownAutoWidth: true,
      containerCssClass: 'sub-select2-field'
    });

    // Trigger to display totals at table foot
    $('#tools-table').bind('totals', function(event) {
      // Sum necessary values from table rows
      var minutes = 0;
      var costs = 0;
      var count = 0;
      $('#tools-table tr.fields:visible').each(function() {
        minutes += parseFloat(right_number($(this).find('input.fnt-minutes').val(), 2));
        costs += parseFloat(right_number($(this).find('input.fnt-costst').val(), 4));
        count += 1;
      });
      minutes = parseInt(right_number(minutes.toString(), 2) * 100);
      costs = parseInt(right_number(costs.toString(), 4) * 10000);
      jQuery.getJSON('wo_tool_totals/' + minutes + '/' + costs + '/' + count, function(data) {
        document.getElementById('foot-minutes').innerHTML = data.minutes;
        //document.getElementById('foot-hours-avg').innerHTML = data.average;
        document.getElementById('foot-totalt').innerHTML = data.total;
      });
    });
    // Update and display totals
    $('#tools-table').trigger('totals');
    // Retrieves parent values
    _f = $(".fnt-tool").closest('form')[0];
  }); 

  jQuery(function($) {
    // when the .fnt-tool field changes
    $(".fnt-tool").change(function() {
      // preserve the current object
      var _this = (this);
      // make a POST call and replace the content
      var tbl = true;
      var tool = $(this).closest('tr').find('select.fnt-tool :selected').val();
      if (tool == "")
        tool = "0";
      var minutes = $(this).closest('tr').find('.fnt-minutes').val();
      if (minutes == "")
        minutes = "0";
      // Right formatted for passing as REST parameter
      minutes = parseInt(right_number(minutes, 2) * 100);
      jQuery.getJSON('wo_update_costs_from_tool/' + tool + '/' + minutes + '/' + tbl, function(data) {
        $(_this).closest('tr').find('.fnt-costt').val(data.cost);
        $(_this).closest('tr').find('.fnt-costst').val(data.costs);
        // Update and display totals is necessary
        $('#tools-table').trigger('totals');
      });
      return false;
    });

    // when the .fnt-minutes field changes
    $(".fnt-minutes").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate_wot_table(_this);
      return false;
    });

    // when the .fnt-costt field changes
    $(".fnt-costt").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate_wot_table(_this);
      return false;
    });
    
    // Recalculate costs
    function recalculate_wot_table(_this) {
      // make a POST call and replace the content
      var tbl = true;
      var cost = $(_this).closest('tr').find('.fnt-costt').val();
      if (cost == "")
        cost = "0";
      var minutes = $(_this).closest('tr').find('.fnt-minutes').val();
      if (minutes == "")
        minutes = "0";
      // Right formatted for passing as REST parameter
      cost = parseInt(right_number(cost, 4) * 10000);
      minutes = parseInt(right_number(minutes, 2) * 100);
      jQuery.getJSON('wo_update_costs_from_cost_or_minutes/' + cost + '/' + minutes + '/' + tbl, function(data) {
        $(_this).closest('tr').find('.fnt-minutes').val(data.minutes);
        $(_this).closest('tr').find('.fnt-costt').val(data.cost);
        $(_this).closest('tr').find('.fnt-costst').val(data.costs);
        // Update and display totals
        $('#tools-table').trigger('totals');
      });
    }

    /*
     * Very special function!
     * This one re-calculate table totals after delete an item
     * When the .icon-trash clicked
     * Replace behavior of link_to_remove_fields
     * (the same was done in nested_wo.js)
     */
    $(".icon-trash").click(function() {
      remove_fields(this);
      // Update and display totals
      $('#tools-table').trigger('totals');
    });
  });
</script>

<table id="tools-table" class="table table-condensed table-striped shrinked fixed">
  <!-- tool -->
  <col width="60%" />
  <!-- minutes -->
  <col width="11%" />
  <!-- cost -->
  <col width="12%" />
  <!-- costs -->
  <col width="12%" />
  <!-- button -->
  <col width="5%" />
  <thead>
    <%= render 'tools_header' %>
  </thead>
  <tfoot>
    <%= render 'tools_table_footer', f: f %>
  </tfoot>
  <tbody>
    <%= f.simple_fields_for :work_order_tools, defaults: { input_html: { class: 'sub-form' } } do |i| %>
    <tr class="fields">
      <td><%= i.association :tool, label: false, wrapper: false, collection: @tools, input_html: { class: 'tsel2 fnt-tool' } %></td>
      <td><%= i.input :minutes, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.minutes, precision: 2) if i.object.minutes), class: 'sub-number-text-field fnt-minutes' } %></td>
      <td><%= i.input :cost, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.cost, precision: 4) if i.object.cost), class: 'sub-number-text-field fnt-costt' } %></td>
      <td><%= i.input :costs, disabled: true, label: false, wrapper: false, as: :string, input_html: { value: (number_with_precision(i.object.costs, precision: 4) if i.object.costs), class: 'sub-number-text-field sub-disabled-field fnt-costst' } %></td>
      <% if @breadcrumb == 'create' || @breadcrumb == 'update' %>
      <td><%= link_to_remove_fields('<i class="icon-trash"></i>'.html_safe, i) %></td>
      <% end %>
    </tr>
    <% end %>
  </tbody>
</table>
