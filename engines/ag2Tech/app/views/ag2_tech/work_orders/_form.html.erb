<script>
  var _thisForm = '';
  
  $(document).ready(function() {
    $('select.sel2').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; },
      allowClear: true
    });
    $('.date_picker').datepicker({
      format : 'dd/mm/yyyy',
      weekStart : 1
    }).on('changeDate', function(e){
      $('.date_picker').datepicker('hide');
    });
    $('.date_picker_time').datepicker({
      format : 'dd/mm/yyyy',
      weekStart : 1
    }).on('changeDate', function(e){
      var dt = es_date(e.date) + ' ' + es_time(e.date);
      $(this).val(dt);
      $('.date_picker').datepicker('hide');
    });
    
    // Initialized form variable
    _thisForm = $("#work_order_order_no").closest('form')[0];

    // Disable fields if Order# blank
    var order = $('#work_order_order_no').val();
    if (order == "")
      order = "0";
    if (order == "0") {
      // Empty order: Disable
      $('#submit_btn').hide();
      $('.fnt-new-btn').hide();
      $('.fnt-new-worker-btn').hide();
    } else {
      // Order OK: Enable
      $('#submit_btn').show();
      $('.fnt-new-btn').show();
      $('.fnt-new-worker-btn').show();
    }
  });
  
  jQuery(function($) {
    // when the #work_order_order_no field changes
    $("#work_order_order_no").change(function() {
      var order = $('#work_order_order_no').val();
      if (order == "")
        order = "0";
      if (order == "0") {
        // Empty order: Disable
        $('#submit_btn').hide();
        $('.fnt-new-btn').hide();
        $('.fnt-new-worker-btn').hide();
      } else {
        // Order OK: Enable
        $('#submit_btn').show();
        $('.fnt-new-btn').show();
        $('.fnt-new-worker-btn').show();
      }
    });
    
    // when the #work_order_project_id field changes
    $("#work_order_project_id").change(function() {
      // make a POST call and replace the content
      var order = $('select#work_order_project_id :selected').val();
      if (order == "")
        order = "0";
      jQuery.getJSON('wo_update_account_textfield_from_project/' + order, function(data) {
        var c = data.charge_account;
        var s = data.store;
        var w = data.worker;
        $("#work_order_charge_account_id").html("");
        $("#work_order_charge_account_id").select2("val", "");
        $("#work_order_charge_account_id").append($('<option></option>').val("").html(""));
        if (!c.length) {
          $.each(data, function(id, option) {
            if (id == 'charge_account' && option != "") {
              $("#work_order_charge_account_id").append($('<option></option>').val(option.id).html(option.account_code + " " + option.name));
            }
          });
        } else {
          $.each(c, function(id, option) {
            $("#work_order_charge_account_id").append($('<option></option>').val(option.id).html(option.account_code + " " + option.name));
          });
        }
        $("#work_order_store_id").html("");
        $("#work_order_store_id").select2("val", "");
        $("#work_order_store_id").append($('<option></option>').val("").html(""));
        if (!s.length) {
          $.each(data, function(id, option) {
            if (id == 'store' && option != "") {
              $("#work_order_store_id").append($('<option></option>').val(option.id).html(option.name));
            }
          });
        } else {
          $.each(s, function(id, option) {
            $("#work_order_store_id").append($('<option></option>').val(option.id).html(option.name));
          });
        }
        // In charge
        $("#work_order_in_charge_id").html("");
        $("#work_order_in_charge_id").select2("val", "");
        $("#work_order_in_charge_id").append($('<option></option>').val("").html(""));
        if (!w.length) {
          $.each(data, function(id, option) {
            if (id == 'worker' && option != "") {
              $("#work_order_in_charge_id").append($('<option></option>').val(option.id).html(option.last_name + ', ' + option.first_name));
            }
          });
        } else {
          $.each(w, function(id, option) {
            $("#work_order_in_charge_id").append($('<option></option>').val(option.id).html(option.last_name + ', ' + option.first_name));
          });
        }
        // Should change #work_order_workers_worker_id
      });
      return false;
    });

    // when the #work_order_area_id field changes
    $("#work_order_area_id").change(function() {
      // make a POST call and replace the content
      var order = $('select#work_order_area_id :selected').val();
      if (order == "")
        order = "0";
      jQuery.getJSON('wo_update_worker_select_from_area/' + order, function(data) {
        if (data != null) $("#work_order_in_charge_id").select2("val", data.id);
        /*
        $("#work_order_in_charge_id").html("");
        $("#work_order_in_charge_id").select2("val", "");
        $("#work_order_in_charge_id").append($('<option></option>').val("").html(""));
        $.each(data, function(id, option) {
          $("#work_order_in_charge_id").append($('<option></option>').val(option.id).html(option.last_name + ", " + option.first_name));
        });
        */
      });
      return false;
    });

    // when the #work_order_client_id field changes
    $("#work_order_client_id").change(function() {
      // make a POST call and replace the content
      var order = $('select#work_order_client_id :selected').val();
      if (order == "")
        order = "0";
      jQuery.getJSON('wo_update_petitioner_textfield_from_client/' + order, function(data) {
        $("#work_order_petitioner").val(data.name);
      });
      return false;
    });
    
    // when submit    
    $(_thisForm).on('submit', function() {
      var qty = '';
      var price = '';
      var cost = '';
      // Must change decimal separator, if comma, in items table numeric fields
      $('#items-table tr.fields').each(function() {
        qty = $(this).find('input.fnt-quantity').val().replace(",", ".");
        price = $(this).find('input.fnt-price').val().replace(",", ".");
        cost = $(this).find('input.fnt-cost').val().replace(",", ".");
        $(this).find('input.fnt-quantity').val(qty);
        $(this).find('input.fnt-price').val(price);
        $(this).find('input.fnt-cost').val(cost);
      });
      // Must change decimal separator, if comma, in workers table numeric fields
      $('#workers-table tr.fields').each(function() {
        qty = $(this).find('input.fnt-hours').val().replace(",", ".");
        cost = $(this).find('input.fnt-costw').val().replace(",", ".");
        $(this).find('input.fnt-hours').val(qty);
        $(this).find('input.fnt-costw').val(cost);
      });
      //e.preventDefault();
    });
  });
</script>

<%= simple_form_for @work_order, :html => { :class => 'form-vertical well' } do |f| %>
<%= f.error_notification %>
<%= display_base_errors resource %>
<%= f.input :description, autofocus: true, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %>
<%= f.association :project, collection: Project.all(order: 'project_code'), input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %>
<div>
  <label class="multi-field-label-two"> <%= f.association :work_order_type, collection: WorkOrderType.all(order: 'name'), input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label-under-sel2' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :order_no, input_html: { class: 'mid-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.association :work_order_labor, collection: WorkOrderLabor.all(order: 'name'), input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.association :work_order_status, collection: WorkOrderStatus.all(order: 'id'), input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.association :area, collection: Area.all(order: 'name'), input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.association :in_charge, collection: @workers, input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.association :charge_account, collection: @charge_accounts, input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.association :store, collection: Store.all(order: 'name'), input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two-table"> <%= f.association :client, collection: Client.all(order: 'client_code'), input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two-table"> <%= f.input :petitioner, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.input :location, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :pub_record, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-three"> <%= f.input :started_at, start_year: Time.now.year - 100, end_year: Time.now.year + 100, as: :string, input_html: { value: (f.object.started_at.strftime("%d/%m/%Y") if f.object.started_at), class: 'large-text-field date_picker' }, label_html: { class: 'form-label-under-sel2' } %> </label>
  <label class="multi-field-label-three"> <%= f.input :completed_at, start_year: Time.now.year - 100, end_year: Time.now.year + 100, as: :string, input_html: { value: (f.object.completed_at.strftime("%d/%m/%Y") if f.object.completed_at), class: 'large-text-field date_picker' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-three"> <%= f.input :closed_at, start_year: Time.now.year - 100, end_year: Time.now.year + 100, as: :string, input_html: { value: (f.object.closed_at.strftime("%d/%m/%Y") if f.object.closed_at), class: 'large-text-field date_picker' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-four"> <%= f.input :reported_at, start_year: Time.now.year - 100, end_year: Time.now.year + 100, as: :string, input_html: { value: (f.object.reported_at.strftime("%d/%m/%Y %H:%M:%S") if f.object.reported_at), class: 'm-large-text-field date_picker_time' }, label_html: { class: 'form-label-under-sel2' } %> </label>
  <label class="multi-field-label-four"> <%= f.input :approved_at, start_year: Time.now.year - 100, end_year: Time.now.year + 100, as: :string, input_html: { value: (f.object.approved_at.strftime("%d/%m/%Y %H:%M:%S") if f.object.approved_at), class: 'm-large-text-field date_picker_time' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-four"> <%= f.input :certified_at, start_year: Time.now.year - 100, end_year: Time.now.year + 100, as: :string, input_html: { value: (f.object.certified_at.strftime("%d/%m/%Y") if f.object.certified_at), class: 'm-large-text-field date_picker' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-four"> <%= f.input :posted_at, start_year: Time.now.year - 100, end_year: Time.now.year + 100, as: :string, input_html: { value: (f.object.posted_at.strftime("%d/%m/%Y") if f.object.posted_at), class: 'm-large-text-field date_picker' }, label_html: { class: 'form-label' } %> </label>
</div>
<!-- Items -->
<table class="form-table">
  <tbody>
    <tr class="form-tr underlined-tr">
      <td class="form-td-two left-winged">
        <h4><%= t 'ag2_tech.work_orders.items_info' %></h4>
      </td>
      <td class="form-td-two right-winged">
        <%= link_to_add_fields(t("ag2_tech.work_orders.btn_new_item"), f, :work_order_items, "item_fields", "new-item-fields", class: "btn btn-warning fnt-new-btn") %>
      </td>
    </tr>
  </tbody>
</table>
<%= render 'items_table', f: f %>
<!-- Workers -->
<table class="form-table">
  <tbody>
    <tr class="form-tr underlined-tr">
      <td class="form-td-two left-winged">
        <h4><%= t 'ag2_tech.work_orders.workers_info' %></h4>
      </td>
      <td class="form-td-two right-winged">
        <%= link_to_add_fields(t("ag2_tech.work_orders.btn_new_worker"), f, :work_order_workers, "worker_fields", "new-worker-fields", class: "btn btn-warning fnt-new-worker-btn") %>
      </td>
    </tr>
  </tbody>
</table>
<%= render 'workers_table', f: f %>
<!-- Remarks -->
<%= f.input :remarks, as: :text, input_html: { class: 'x-large-text-field', rows: 3 }, label_html: { class: 'form-label' } %>
<!-- Buttons -->
<%= f.button :submit, class: 'btn-primary', id: 'submit_btn' %>
<% end %>
