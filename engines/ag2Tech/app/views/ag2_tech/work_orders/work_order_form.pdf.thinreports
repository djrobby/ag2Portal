if @work_order.nil?
	return
end
if @items.count <= 0 ||
   @workers.count <= 0 ||
   @subcontractors.count <= 0 ||
   @tools.count <= 0 ||
   @vehicles.count <= 0
	return
end

# Localization for numbers
delimiter = I18n.locale == :es ? "." : ","

report.set_layout tlf: 'reports/work_order_form', layout_options: { default: true }

#
# Report events
#
# On page create
report.events.on :page_create do |e|
	# Set page-number
	e.page.item(:page_no).value(e.page.no)
end
# On report generate
report.events.on :generate do |e|
	e.pages.each do |page|
		# Set total-page-number
		page.item(:page_count).value(e.report.page_count)
	end
end

#
# Lists configuration (stores & events)
#
# Items
report.layout.config.list(:items) do |c|
	# Define the variables used in list
	c.use_stores i_page_quantity: 0, i_page_costs: 0, i_page_amount: 0, i_page_tax: 0

	# On list page footer insertion
	c.events.on :page_footer_insert do |e|
		# Display page sutotals
		e.section.item(:page_subtotals).value(I18n.t("every_report.page_subtotals"))
		e.section.item(:i_page_quantity).value(number_with_precision(e.store.i_page_quantity, precision: 4))
		e.section.item(:i_page_costs).value(number_with_precision(e.store.i_page_costs, precision: 4))
		e.section.item(:i_page_amount).value(number_with_precision(e.store.i_page_amount, precision: 4))
		e.section.item(:i_page_tax).value(number_with_precision(e.store.i_page_tax, precision: 4))
		# Initialize subtotals to 0
		e.store.page_quantity = 0
		e.store.i_page_costs = 0
		e.store.i_page_amount = 0
		e.store.i_page_tax = 0
	end
	# On list footer insertion
	c.events.on :footer_insert do |e|
		# Display list totals
		e.section.item(:i_costs_c).value(I18n.t("activerecord.attributes.work_order.bonus")
		e.section.item(:i_subtotal_c).value(I18n.t("activerecord.attributes.work_order.subtotal"))
		e.section.item(:i_taxable_c).value(I18n.t("activerecord.attributes.work_order.taxable_c"))
		e.section.item(:i_taxes_c).value(I18n.t("activerecord.attributes.work_order.taxes"))
		e.section.item(:i_total_c).value(I18n.t("activerecord.attributes.work_order.total").upcase)
		e.section.item(:i_costs).value(number_with_precision(@work_order.bonus, precision: 2, delimiter: delimiter))
		e.section.item(:i_subtotal).value(number_with_precision(@work_order.subtotal, precision: 2, delimiter: delimiter))
		e.section.item(:i_taxable).value(number_with_precision(@work_order.taxable, precision: 2, delimiter: delimiter))
		e.section.item(:i_taxes).value(number_with_precision(@work_order.taxes, precision: 2, delimiter: delimiter))
		e.section.item(:i_total).value(number_with_precision(@work_order.total, precision: 2, delimiter: delimiter))
		# Display tax details
		e.section.item(:i_tax_details).value(I18n.t("activerecord.attributes.work_order.tax_breakdown"))
		@work_order.tax_breakdown.each do |tb|
			e.section.item(:i_tax_list).value(tb[0].to_s.rjust(2, '0') + " " + tb[1] + ": " +
											number_with_precision(tb[3], precision: 2, delimiter: delimiter) + " Ã— " +
											number_with_precision(tb[2], precision: 2, delimiter: delimiter) + "% = " +
											number_with_precision(tb[4], precision: 2, delimiter: delimiter) + "\n")
		end
	end
end
# Workers
# Subcontractors
# Tools
# Vehicles


# New page & start
report.start_new_page

# Page header: Image block for Logo
report.page.values company_logo: "public/" + @work_order.project.company.logo.url(:original).split("?").first unless @work_order.project.company.logo.blank?
# Page header: Company
report.page.values(company_name: @work_order.project.company.name,
				   company_address_1: @work_order.project.company.address_1,
				   company_address_2: @work_order.project.company.address_2,
				   company_phones: @work_order.project.company.phone_and_fax,
				   company_email: @work_order.project.company.email_and_website,
				   company_fiscal_id: I18n.t("activerecord.attributes.company.fiscal_id_c") + ": " + @work_order.project.company.fiscal_id)
# Page header: Others
report.page.values(form_title: I18n.t("activerecord.models.work_order.one"),
				   order_no_title: I18n.t("activerecord.attributes.work_order.order_no_report") + ":",
				   order_no: @work_order.full_no,
				   order_date_title: I18n.t("activerecord.attributes.work_order.order_date") + ":",
				   order_date: @work_order.created_at.strftime("%d/%m/%Y"),
				   master_order_title: I18n.t("activerecord.attributes.work_order.master_order_report") + ":",
				   master_order: @work_order.master_order.full_no,
				   description_title: I18n.t("activerecord.attributes.work_order.description") + ":",
				   description: @work_order.description,
				   project_title: I18n.t("activerecord.attributes.work_order.project") + ":",
				   project: @work_order.project.full_name,
				   type_title: I18n.t("activerecord.attributes.work_order.work_order_type") + ":",
				   type: @work_order.work_order_type,
				   labor_title: I18n.t("activerecord.attributes.work_order.work_order_labor") + ":",
				   labor: @work_order.work_order_labor,
				   area_title: I18n.t("activerecord.attributes.work_order.area") + ":",
				   area: @work_order.area.full_name,
				   in_charge_title: I18n.t("activerecord.attributes.work_order.in_charge") + ":",
				   in_charge: @work_order.in_charge.full_name,
				   charge_account_title: I18n.t("activerecord.attributes.work_order.charge_account") + ":",
				   charge_account: @work_order.charge_account.full_name,
				   store_title: I18n.t("activerecord.attributes.work_order.store") + ":",
				   store: @work_order.store.name,
				   client_title: I18n.t("activerecord.attributes.work_order.client") + ":",
				   client: @work_order.client.full_name,
				   petitioner_title: I18n.t("activerecord.attributes.work_order.petitioner") + ":",
				   petitioner: @work_order.petitioner,
				   location_title: I18n.t("activerecord.attributes.work_order.location") + ":",
				   location: @work_order.location,
				   pub_record_title: I18n.t("activerecord.attributes.work_order.pub_record_report") + ":",
				   pub_record: @work_order.pub_record,
				   status_title: I18n.t("activerecord.attributes.work_order.work_order_status") + ":",
				   status: @work_order.work_order_status.name,
				   started_at_title: I18n.t("activerecord.attributes.work_order.started_at") + ":",
				   started_at: @work_order.started_at.strftime("%d/%m/%Y"),
				   completed_at_title: I18n.t("activerecord.attributes.work_order.completed_at") + ":",
				   completed_at: @work_order.completed_at.strftime("%d/%m/%Y"),
				   closed_at_title: I18n.t("activerecord.attributes.work_order.closed_at") + ":",
				   closed_at: @work_order.closed_at.strftime("%d/%m/%Y"),
				   reported_at_title: I18n.t("activerecord.attributes.work_order.reported_at") + ":",
				   reported_at: @work_order.reported_at.strftime("%d/%m/%Y %H:%M:%S"),
				   approved_at_title: I18n.t("activerecord.attributes.work_order.approved_at") + ":",
				   approved_at: @work_order.approved_at.strftime("%d/%m/%Y %H:%M:%S"),
				   certified_at_title: I18n.t("activerecord.attributes.work_order.certified_at") + ":",
				   certified_at: @work_order.certified_at.strftime("%d/%m/%Y"),
				   posted_at_title: I18n.t("activerecord.attributes.work_order.posted_at") + ":",
				   posted_at: @work_order.posted_at.strftime("%d/%m/%Y"))
# Page footer
report.page.values(printed_at: Time.now,
				   pt: I18n.t("every_report.pt"),
				   pd: I18n.t("every_report.pd"),
				   currency_note: I18n.t("every_report.currency_note"),
				   remarks_title: I18n.t("activerecord.attributes.work_order.remarks"),
				   remarks: @work_order.remarks)

# List header
report.page.list(:items).header do |header|
	header.item(:no_c).value "#"
	header.item(:product_c).value I18n.t("activerecord.attributes.work_order_item.code")
	header.item(:description_c).value I18n.t("activerecord.attributes.work_order_item.description_c")
	header.item(:quantity_c).value I18n.t("activerecord.attributes.work_order_item.quantity_c")
	header.item(:price_c).value I18n.t("activerecord.attributes.work_order_item.price_c")
	header.item(:discount_c).value I18n.t("activerecord.attributes.work_order_item.discount_c")
	header.item(:amount_c).value I18n.t("activerecord.attributes.work_order_item.amount_c")
	header.item(:tax_c).value I18n.t("activerecord.attributes.work_order_item.tax_c")
	header.item(:delivery_date_c).value I18n.t("activerecord.attributes.work_order_item.delivery_date")
end

# List detail
no = 0
@items.each do |i|
	report.page.list(:items).add_row do |row|
		no = no + 1
    	row.item(:no).value no
    	row.item(:product).value i.product.full_code unless i.product.blank?
    	row.item(:description).value i.description unless i.description.blank?
    	row.item(:quantity).value number_with_precision(i.quantity, precision: 4) unless i.quantity.blank?
    	row.item(:price).value number_with_precision(i.price, precision: 4) unless i.price.blank?
    	row.item(:discount).value number_with_precision(i.discount, precision: 4) unless i.discount.blank?
    	row.item(:amount).value number_with_precision(i.amount, precision: 4) unless i.amount.blank?
    	row.item(:tax).value number_with_precision(i.tax, precision: 4) unless i.tax.blank?
    	row.item(:delivery_date).value i.delivery_date.strftime("%d/%m/%Y") unless i.delivery_date.blank?
	end
	# Store page subtotals
    report.page.list(:items) do |list|
		list.store.page_quantity += i.quantity
		list.store.page_discount += i.discount
		list.store.page_amount += i.amount
		list.store.page_tax += i.tax
    end	
end
