<script>
  var _f = '';
  var _s = "0";
  
  $(document).ready(function() {
    /*
     * Retrieves parent values
     */
    // Form
    _f = $("#fnt-product").closest('form')[0];
    // Store
    _s = $('select#work_order_store_id :selected').val();
    if (_s == "") _s = "0";
    // Charge Account
    $("#fnt-charge-account").html("");
    $('#work_order_charge_account_id option').clone().appendTo('#fnt-charge-account');
    var _c = $('#work_order_charge_account_id :selected').val();
    if (_c == "") _c = "0";
    $('#fnt-charge-account').val(_c);
    // Product
    initP();

    // Set focus
    $(".modal").on('shown', function() {
      $(this).find(".form-label:first").focus();
    });
  });

  jQuery(function($) {
    // when the #fnt-product field changes
    $("#fnt-product").change(function() {
      // preserve the current object
      var _this = (this);
      // make a POST call and replace the content
      var tbl = false;
      var product = $('select#fnt-product :selected').val();
      if (typeof product === "undefined") {
        tbl = true;
        product = $(_this).closest('tr').find('.fnt-product').val();
      }
      if (product == "")
        product = "0";
      var qty = $('#fnt-quantity').val();
      if (typeof qty === "undefined") {
        tbl = true;
        qty = $(_this).closest('tr').find('.fnt-quantity').val();
      }
      if (qty == "")
        qty = "0";
      // Right formatted for passing as REST parameter
      qty = parseInt(right_number(qty, 4) * 10000);
      //qty = qty.replace(",", ".") * 10000;
      jQuery.getJSON('wo_update_description_prices_from_product/' + product + '/' + qty + '/' + _s + '/' + tbl, function(data) {
        if (data.tbl == "true") {
          $(_this).closest('tr').find('.fnt-description').val(data.description);
          $(_this).closest('tr').find('.fnt-cost').val(data.cost);
          $(_this).closest('tr').find('.fnt-costs').val(data.costs);
          $(_this).closest('tr').find('.fnt-price').val(data.price);
          $(_this).closest('tr').find('.fnt-amount').val(data.amount);
          $(_this).closest('tr').find(".fnt-tax-type").val(data.type);
          $(_this).closest('tr').find('.fnt-tax').val(data.tax);
        } else {
          $("#fnt-description").val(data.description);
          $("#fnt-cost").val(data.cost);
          $("#fnt-costs").val(data.costs);
          $("#fnt-price").val(data.price);
          $("#fnt-amount").val(data.amount);
          $("#fnt-tax-type").val(data.type);
          $("#fnt-tax").val(data.tax);
          $("#current-stock").html(data.stock);
        }
        // Update and display totals is necessary
        $('#items-table').trigger('totals');
      });
      return false;
    });

    // when the #fnt-quantity field changes
    $("#fnt-quantity").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate_woi_fields(_this);
      return false;
    });

    // when the #fnt-price field changes
    $("#fnt-price").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate_woi_fields(_this);
      return false;
    });

    // when the #fnt-cost field changes
    $("#fnt-cost").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate_woi_fields(_this);
      return false;
    });

    // Recalculate amounts & prices
    function recalculate_woi_fields(_this) {
      // make a POST call and replace the content
      var tbl = false;
      var cost = $('#fnt-cost').val();
      if (typeof cost === "undefined") {
        tbl = true;
        cost = $(_this).closest('tr').find('.fnt-cost').val();
      }
      if (cost == "")
        cost = "0";
      var price = $('#fnt-price').val();
      if (typeof price === "undefined") {
        tbl = true;
        price = $(_this).closest('tr').find('.fnt-price').val();
      }
      if (price == "")
        price = "0";
      var qty = $('#fnt-quantity').val();
      if (typeof qty === "undefined") {
        tbl = true;
        qty = $(_this).closest('tr').find('.fnt-quantity').val();
      }
      if (qty == "")
        qty = "0";
      var tax_type = $('#fnt-tax-type').val();
      if (typeof tax_type === "undefined") {
        tbl = true;
        tax_type = $(_this).closest('tr').find('.fnt-tax-type').val();
      }
      if (tax_type == "")
        tax_type = "0";
      var product = $('select#fnt-product :selected').val();
      if (typeof product === "undefined") {
        tbl = true;
        product = $(_this).closest('tr').find('.fnt-product').val();
      }
      if (product == "")
        product = "0";
      // Right formatted for passing as REST parameter
      cost = parseInt(right_number(cost, 4) * 10000);
      price = parseInt(right_number(price, 4) * 10000);
      qty = parseInt(right_number(qty, 4) * 10000);
      jQuery.getJSON('wo_update_amount_and_costs_from_price_or_quantity/' + cost + '/' + price + '/' + qty + '/' + tax_type + '/' + product + "/" + tbl, function(data) {
        if (data.tbl == "true") {
          $(_this).closest('tr').find('.fnt-quantity').val(data.quantity);
          $(_this).closest('tr').find('.fnt-cost').val(data.cost);
          $(_this).closest('tr').find('.fnt-costs').val(data.costs);
          $(_this).closest('tr').find('.fnt-price').val(data.price);
          $(_this).closest('tr').find('.fnt-amount').val(data.amount);
          $(_this).closest('tr').find('.fnt-tax').val(data.tax);
        } else {
          $('#fnt-quantity').val(data.quantity);
          $('#fnt-cost').val(data.cost);
          $('#fnt-costs').val(data.costs);
          $('#fnt-price').val(data.price);
          $('#fnt-amount').val(data.amount);
          $('#fnt-tax').val(data.tax);
        }
        // Update and display totals
        $('#items-table').trigger('totals');
      });
    }
  });

  // Initialize
  function initP() {
    // make a POST call and replace the content
    var order = $('select#work_order_organization_id :selected').val();
    if (order == "")
      order = "0";
    jQuery.getJSON('wo_update_product_select_from_organization/' + order, function(data) {
      var prods = data.product
      // Product
      $("#fnt-product").html("");
      $("#fnt-product").select2("val", "");
      $("#fnt-product").append($('<option></option>').val("").html(""));
      if (!prods.length) {
        $.each(data, function(id, option) {
          if (id == 'product' && option != "") {
            $("#fnt-product").append($('<option></option>').val(option[0]).html(option[1] + " " + option[2]));
          }
        });
      } else {
        $.each(prods, function(id, option) {
          $("#fnt-product").append($('<option></option>').val(option[0]).html(option[1] + " " + option[2]));
        });
      }
    });
  }
</script>

<div id="new-item-fields" class="modal hide fade" data-backdrop="static">
  <% e = t(:item_error) %>
  <div class="modal-header">
    <a class="close" data-dismiss="modal">Ã—</a>
    <h3><%= t("ag2_tech.work_orders.add_item") %></h3>
    <span class="shrinked"><%= I18n.t(:mandatory_subtitle) %></span>
  </div>
  <div class="modal-body">
    <a href="javascript:scrollToAnchorModal('#fnt-tax');" style="float: right" id="go-bottom"><i class="icon-arrow-down" title="<%=t(:bottom) %>"></i></a>
    <%= f.association :charge_account, collection: @charge_accounts, input_html: { class: 'x-large-text-field fsel2 field', id: 'fnt-charge-account', data: { validation: "required", "validation-error-msg" => "#{e}" } }, label_html: { class: 'form-label' } %>
    <div style="overflow: hidden; padding-left: 0em;">
      <%= f.association :product, collection: @products, input_html: { class: 'x-large-text-field fsel2 field', id: 'fnt-product', data: { validation: "required", "validation-error-msg" => "#{e}" } }, label_html: { class: 'form-label fnt-product-label' } %>
    </div>
    <%= f.input :description, input_html: { class: 'x-large-text-field field', maxlength: 40, id: 'fnt-description', data: { validation: "required", "validation-error-msg" => "#{e}" }, onkeyup: "caps(this)" }, label_html: { class: 'form-label' } %>
    <%= f.input :quantity, as: :string, input_html: { value: (number_with_precision(f.object.quantity, precision: 4) if f.object.quantity), class: 'mid-text-field number-text-field field', id: 'fnt-quantity' }, label_html: { class: 'form-label' } %>
    <%= f.input :cost, as: :string, input_html: { value: (number_with_precision(f.object.cost, precision: 4) if f.object.cost), class: 'mid-text-field number-text-field field', id: 'fnt-cost' }, label_html: { class: 'form-label' } %>
    <%= f.input :costs, disabled: true, as: :string, input_html: { value: (number_with_precision(f.object.costs, precision: 4) if f.object.costs), class: 'mid-text-field number-text-field sub-disabled-field field', id: 'fnt-costs' }, label_html: { class: 'form-label' } %>
    <%= f.input :price, as: :string, input_html: { value: (number_with_precision(f.object.price, precision: 4) if f.object.price), class: 'mid-text-field number-text-field field', id: 'fnt-price' }, label_html: { class: 'form-label' } %>
    <%= f.input :amount, disabled: true, as: :string, input_html: { value: (number_with_precision(f.object.amount, precision: 4) if f.object.amount), class: 'mid-text-field number-text-field sub-disabled-field field', id: 'fnt-amount' }, label_html: { class: 'form-label' } %>
    <%= f.association :tax_type, collection: TaxType.where('expiration IS NULL').order('description'), input_html: { class: 'x-large-text-field field', id: 'fnt-tax-type', data: { validation: "required", "validation-error-msg" => "#{e}" } }, label_html: { class: 'form-label' } %>
    <a href="javascript:scrollToAnchorModal('#fnt-product');" style="float: right" id="go-top"><i class="icon-arrow-up" title="<%=t(:top) %>"></i></a>
    <a href="javascript:goToAnchorModal('.fnt-product-label');" style="float: right" id="go-to"><i class="icon-bookmark" title="<%=t(:goto_prod) %>"></i></a>
    <div style="overflow: hidden; padding-left: 0em;">
      <%= f.input :tax, disabled: true, as: :string, input_html: { value: (number_with_precision(f.object.tax, precision: 4) if f.object.tax), class: 'mid-text-field number-text-field sub-disabled-field field', id: 'fnt-tax' }, label_html: { class: 'form-label' } %>
    </div>
    <%= f.input :_destroy, as: :hidden, input_html: { class: 'field' } %>
  </div>
  <div class="modal-footer">
    <span class="left-floated shrinked" style="vertical-align: bottom"><%= t("ag2_tech.work_orders.add_item_to", var: @work_order.full_no) unless @work_order.order_no.blank? %>&#8226;</span>
    <span class="left-floated shrinked" style="vertical-align: bottom"><%= t("activerecord.attributes.stock.current") %>=</span>
    <span class="left-floated shrinked" style="vertical-align: bottom" id="current-stock">0,0000</span>
    <button id="addButton" type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true"><%= t('ag2_tech.work_orders.btn_add_item') %></button>
    <button id="cancelButton" type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true"><%= t :close_button %></button>
  </div>
</div>

<script type="text/javascript">
  sel2NoMatch = '<%= t("select2.no_matches") %>';
  wo_itemFieldsUI.init(sel2NoMatch);
</script>
