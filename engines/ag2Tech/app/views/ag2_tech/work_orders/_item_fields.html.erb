<script>
  $(document).ready(function() {
    // Retrieves parent values
    var _f = $("#fnt-product").closest('form')[0];
  });

  jQuery(function($) {
    // when the #fnt-product field changes
    $("#fnt-product").change(function() {
      // make a POST call and replace the content
      var product = $('select#fnt-product :selected').val();
      if (product == "")
        product = "0";
      var qty = $('#fnt-quantity').val();
      if (qty == "")
        qty = "0";
      // Right formatted for passing as REST parameter
      qty = parseInt(right_number(qty, 4) * 10000);
      //qty = qty.replace(",", ".") * 10000;
      jQuery.getJSON('wo_update_description_prices_from_product/' + product + '/' + qty, function(data) {
        $("#fnt-description").val(data.description);
        $("#fnt-cost").val(data.cost);
        $("#fnt-costs").val(data.costs);
        $("#fnt-price").val(data.price);
        $("#fnt-amount").val(data.amount);
        $("#fnt-tax-type").val(data.type);
        $("#fnt-tax").val(data.tax);
      });
      return false;
    });


    // when the #fnt-quantity field changes
    $("#fnt-quantity").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate(_this);
      return false;
    });

    // when the #fnt-price field changes
    $("#fnt-price").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate(_this);
      return false;
    });

    // when the #fnt-cost field changes
    $("#fnt-cost").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate(_this);
      return false;
    });

    // Recalculate amounts & prices
    function recalculate(_this) {
      // make a POST call and replace the content
      var price = $('#fnt-cost').val();
      if (cost == "")
        cost = "0";
      var price = $('#fnt-price').val();
      if (price == "")
        price = "0";
      var qty = $('#fnt-quantity').val();
      if (qty == "")
        qty = "0";
      var tax_type = $('#fnt-tax-type').val();
      if (tax_type == "")
        tax_type = "0";
      // Right formatted for passing as REST parameter
      cost = parseInt(right_number(cost, 4) * 10000);
      price = parseInt(right_number(price, 4) * 10000);
      qty = parseInt(right_number(qty, 4) * 10000);
      jQuery.getJSON('wo_update_amount_and_costs_from_price_or_quantity/' + cost + '/' + price + '/' + qty + '/' + tax_type + '/' + product, function(data) {
        $('#fnt-quantity').val(data.quantity);
        $('#fnt-cost').val(data.cost);
        $('#fnt-costs').val(data.costs);
        $('#fnt-price').val(data.price);
        $('#fnt-amount').val(data.amount);
        $('#fnt-tax').val(data.tax);
      })
    }
  })
</script>

<div id="new-item-fields" class="modal hide fade" data-backdrop="static">
  <% e = t(:item_error) %>
  <div class="modal-header">
    <a class="close" data-dismiss="modal">Ã—</a>
    <h3><%= t("ag2_tech.work_orders.add_item") %></h3>
    <span class="shrinked"><%= I18n.t(:mandatory_subtitle) %></span>
  </div>
  <div class="modal-body">
    <%= f.association :product, collection: Product.all(order: 'main_description'), input_html: { class: 'x-large-text-field fsel2 field', id: 'fnt-product', data: { validation: "required", "validation-error-msg" => "#{e}" } }, label_html: { class: 'form-label' } %>
    <%= f.input :description, input_html: { class: 'x-large-text-field field', maxlength: 40, id: 'fnt-description', data: { validation: "required", "validation-error-msg" => "#{e}" }, onkeyup: "caps(this)" }, label_html: { class: 'form-label' } %>
    <%= f.input :quantity, as: :string, input_html: { value: (number_with_precision(f.object.quantity, precision: 4) if f.object.quantity), class: 'mid-text-field number-text-field field', id: 'fnt-quantity' }, label_html: { class: 'form-label' } %>
    <%= f.input :cost, as: :string, input_html: { value: (number_with_precision(f.object.cost, precision: 4) if f.object.cost), class: 'mid-text-field number-text-field field', id: 'fnt-cost' }, label_html: { class: 'form-label' } %>
    <%= f.input :costs, disabled: true, as: :string, input_html: { value: (number_with_precision(f.object.costs, precision: 4) if f.object.costs), class: 'mid-text-field number-text-field sub-disabled-field field', id: 'fnt-costs' }, label_html: { class: 'form-label' } %>
    <%= f.input :price, as: :string, input_html: { value: (number_with_precision(f.object.price, precision: 4) if f.object.price), class: 'mid-text-field number-text-field field', id: 'fnt-price' }, label_html: { class: 'form-label' } %>
    <%= f.input :amount, disabled: true, as: :string, input_html: { value: (number_with_precision(f.object.amount, precision: 4) if f.object.amount), class: 'mid-text-field number-text-field sub-disabled-field field', id: 'fnt-amount' }, label_html: { class: 'form-label' } %>
    <%= f.association :tax_type, collection: TaxType.where('expiration IS NULL').order('description'), input_html: { class: 'x-large-text-field field', id: 'fnt-tax-type', data: { validation: "required", "validation-error-msg" => "#{e}" } }, label_html: { class: 'form-label' } %>
    <%= f.input :tax, disabled: true, as: :string, input_html: { value: (number_with_precision(f.object.tax, precision: 4) if f.object.tax), class: 'mid-text-field number-text-field sub-disabled-field field', id: 'fnt-tax' }, label_html: { class: 'form-label' } %>
    <%= f.input :_destroy, as: :hidden, input_html: { class: 'field' } %>
  </div>
  <div class="modal-footer">
    <span class="left-floated" style="vertical-align: bottom"><%= t("ag2_tech.work_orders.add_item_to", var: @work_order.order_no) unless @work_order.order_no.blank? %></span>
    <button id="addButton" type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true"><%= t('ag2_tech.work_orders.btn_add_item') %></button>
    <button id="cancelButton" type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true"><%= t :close_button %></button>
  </div>
</div>

<script type="text/javascript">
  sel2NoMatch = '<%= t("select2.no_matches") %>';
  wo_itemFieldsUI.init(sel2NoMatch);
</script>