if @order_items_report.blank?
	return
end

# Localization for numbers
delimiter = I18n.locale == :es ? "." : ","

report.set_layout tlf: 'reports/purchase_items_report', layout_options: { default: true }

#
# Report events
#
# On page create
report.events.on :page_create do |e|
	# Set page-number
	e.page.item(:page_no).value(e.page.no)
end
# On report generate
report.events.on :generate do |e|
	e.pages.each do |page|
		# Set total-page-number
		page.item(:page_count).value(e.report.page_count)
	end
end

#
# List configuration (stores & events)
#
report.layout.config.list(:default) do |c|
	# Define the variables used in list
	c.use_stores page_rows: 0, page_quantity: 0, page_total: 0, page_balance: 0

	c.events.on :page_footer_insert do |e|
		# Display page sutotals
		e.section.item(:sum_items_title).value(I18n.t("ag2_products.ag2_products_track.every_report.cumulative_items"))
		e.section.item(:sum_rows_title).value(I18n.t("ag2_products.ag2_products_track.every_report.cumulative_total") + " (" + I18n.t("activerecord.attributes.purchase_order.quantity") + " - " + I18n.t("activerecord.attributes.purchase_order.balance") + " - " + I18n.t("activerecord.attributes.purchase_order.total") + ")") 
		e.section.item(:sum_rows).value(e.store.page_rows)
		e.section.item(:quantity_rows).value(number_with_precision(e.store.page_quantity, precision: 2))
		e.section.item(:balance_rows).value(number_with_precision(e.store.page_balance, precision: 2))
		e.section.item(:total_rows).value number_with_precision(e.store.page_total, precision: 2, delimiter: I18n.locale == :es ? "." : ",")
	  end
end

# New page & start
report.start_new_page

# Page header
report.page.values report_title: I18n.t("activerecord.models.purchase_order.pending")
report.page.values from_title: I18n.t("every_report.from_title")
report.page.values to_title: I18n.t("every_report.to_title")
report.page.values from: @from
report.page.values to: @to
# Page footer
report.page.values(printed_at: formatted_timestamp(Time.now),
				   pt: I18n.t("every_report.pt"),
				   pd: I18n.t("every_report.pd"))


# List header
report.page.list(:default).header do |header|
	report.page.values order_no_c: I18n.t("activerecord.attributes.purchase_order.order_no")
	report.page.values order_date_c: I18n.t("activerecord.attributes.purchase_order.order_date")
	report.page.values order_status_c: I18n.t("activerecord.attributes.purchase_order.order_status")
	report.page.values supplier_c: I18n.t("activerecord.attributes.purchase_order.supplier")
	report.page.values charge_account_c: I18n.t("activerecord.attributes.purchase_order.charge_account")
	report.page.values quantity_c: I18n.t("activerecord.attributes.purchase_order.quantity")
	report.page.values balance_c: I18n.t("activerecord.attributes.purchase_order.balance")
	report.page.values total_c: I18n.t("activerecord.attributes.purchase_order.total")
	report.page.values approver_c: I18n.t("activerecord.attributes.purchase_order.approver")
	header.item(:full_code_items_c).value I18n.t("activerecord.attributes.purchase_order_item.product_c")
	header.item(:description_items_c).value I18n.t("activerecord.attributes.purchase_order_item.description_c")
	header.item(:charge_account_items_c).value I18n.t("activerecord.attributes.purchase_order_item.charge_account")
	header.item(:quantity_items_c).value I18n.t("activerecord.attributes.purchase_order_item.quantity_c")
	header.item(:net_price_items_c).value I18n.t("activerecord.attributes.purchase_order_item.price_c")
	header.item(:amount_items_c).value I18n.t("activerecord.attributes.purchase_order_item.amount_c")
	header.item(:balance_items_c).value I18n.t("activerecord.attributes.purchase_order_item.balance_c")
end

  report.page.list(:default) do |list|
  	list.store.page_quantity = @order_items_report.first.purchase_order.quantity
  	list.store.page_balance = @order_items_report.first.purchase_order.balance
	list.store.page_total = @order_items_report.first.purchase_order.total
  end

order_number = @order_items_report.first.purchase_order.order_no


# List detail
@order_items_report.each do |i|

			if !i.purchase_order.order_no.blank? && (i.purchase_order.order_no != order_number)
				report.page.list(:default).page_break
				report.page.list(:default) do |list|
					list.store.page_rows = 0
					list.store.page_quantity += i.purchase_order.quantity
					list.store.page_balance += i.purchase_order.balance
					list.store.page_total += i.purchase_order.total
				end
				order_number = i.purchase_order.order_no
			end

	report.page.list(:default).add_row do |row|
		report.page.values order_no: i.purchase_order.full_no
		if i.purchase_order.balance <= 0
			report.page.values img: (URI.decode('app/assets/images/icon/glyph/black/star-point.png'))
        elsif i.purchase_order.balance == i.purchase_order.quantity
			report.page.values img: (URI.decode('app/assets/images/icon/glyph/black/warning-sign.png'))
        else
			report.page.values img: (URI.decode('app/assets/images/icon/glyph/black/empty-star.png'))
		end
		report.page.values order_date: formatted_date(i.purchase_order.order_date) unless i.purchase_order.order_date.blank?
		report.page.values order_status: i.purchase_order.order_status.name
		report.page.values supplier: i.purchase_order.supplier.partial_name
		report.page.values charge_account: i.charge_account.partial_name unless i.charge_account.blank?
		report.page.values quantity: number_with_precision(i.purchase_order.quantity, precision: 2) unless i.purchase_order.quantity.blank?
		report.page.values balance: number_with_precision(i.purchase_order.balance, precision: 2) unless i.purchase_order.balance.blank?
		report.page.values total: number_with_precision(i.purchase_order.total, precision: 2, delimiter: I18n.locale == :es ? "." : ",") unless i.purchase_order.total.blank?
		report.page.values approver: i.purchase_order.approver.email unless i.purchase_order.approver.blank?
		row.item(:full_code_items).value i.product.full_code
		row.item(:description_items).value i.description
		row.item(:charge_account_items).value i.charge_account.partial_name unless i.charge_account.blank?
		row.item(:quantity_items).value number_with_precision(i.quantity, precision: 4)
		row.item(:net_price_items).value number_with_precision(i.net_price, precision: 4)
		row.item(:amount_items).value number_with_precision(i.amount, precision: 4)
		row.item(:balance_items).value number_with_precision(i.balance, precision: 4)
	end
	# Store page subtotals
  report.page.list(:default) do |list|
		list.store.page_rows += 1
	end
end
