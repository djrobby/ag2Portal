<script>
  var _thisForm = '';
  $(document).ready(function() {
    $('.sel2').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; }
    });

    // Initialized form variable
    _thisForm = $("#purchase_price_factor").closest('form')[0];
  });

  jQuery(function($) {
    // when the #purchase_price_price field changes
    $("#purchase_price_price").change(function() {
      var num = $('#purchase_price_price').val();
      if (num == "")
        num = "0";
      // Right formatted for passing as REST parameter
      num = parseInt(right_number(num, 4) * 10000);
      jQuery.getJSON('pp_format_numbers/' + num, function(data) {
        $('#purchase_price_price').val(data.num);
      });
      return false;
    });

    // when submit    
    $(_thisForm).on('submit', function() {
      // Must change decimal separator, if comma, in numeric fields
      var num = $('#purchase_price_price').val().replace(",", ".");
      $('#purchase_price_price').val(num);
    });
  });  
</script>

<%= simple_form_for @purchase_price, :html => {:class => 'form-vertical well' } do |f| %>
<%= f.error_notification %>
<%= display_base_errors resource %>
<% if @product %>
<%= f.association :product, autofocus: true, collection: Product.where("id = ?", "#{@product.id}").all, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' }, include_blank: false %>
<% else %>
<%= f.association :product, autofocus: true, collection: Product.all(order: 'main_description'), input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %>
<% end %>
<% if @supplier %>
<%= f.association :supplier, collection: Supplier.where("id = ?", "#{@supplier.id}").all, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' }, include_blank: false %>
<% else %>
<%= f.association :supplier, collection: Supplier.all(order: 'name'), input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %>
<% end %>
<div>
  <label class="multi-field-label-two"> <%= f.association :measure, collection: Measure.all(order: 'description'), input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :factor, as: :string, input_html: { value: (number_with_precision(f.object.factor, precision: 4) if f.object.factor), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-three"> <%= f.input :code, input_html: { class: 'large-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-three"> <%= f.input :price, as: :string, input_html: { value: (number_with_precision(f.object.price, precision: 4) if f.object.price), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-three"> <%= f.input :favorite, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' }, boolean_style: :inline %> </label>
</div>
<%= f.button :submit, :class => 'btn-primary' %>
<% end %>
