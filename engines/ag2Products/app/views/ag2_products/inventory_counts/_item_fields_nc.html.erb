<script>
  var _f = '';
  var _s = '';

  $(document).ready(function() {
    /*
     * Retrieves parent values
     */
    // Form
    _f = $("#fnt-product").closest('form')[0];
    // Store
    _s = $('#inventory_count_store_id').val();
    if (_s == "") _s = "0";
    // Product
    init();

    // Set focus
    $(".modal").on('shown', function() {
      $(this).find(".form-label:first").focus();
    });
  });

  jQuery(function($) {
    // when the #fnt-product field changes
    $("#fnt-product").change(function() {
      // preserve the current object
      var _this = (this);
      // make a POST call and replace the content
      var tbl = false;
      var product = $('select#fnt-product').val();
      if (typeof product === "undefined") {
        tbl = true;
        product = $(this).closest('tr').find('.fnt-product').val();
      }
      if (product == "")
        product = "0";
      var qty = $('#fnt-quantity').val();
      if (typeof qty === "undefined") {
        tbl = true;
        qty = $(_this).closest('tr').find('.fnt-quantity').val();
      }
      if (qty == "")
        qty = "0";
      // Right formatted for passing as REST parameter
      qty = parseInt(right_number(qty, 4) * 10000);
      //qty = qty.replace(",", ".") * 10000;
      jQuery.getJSON('ic_update_from_product_store/' + product + '/' + qty + '/' + _s + "/" + tbl, function(data) {
        if (data.tbl == "true") {
          $(_this).closest('tr').find('.fnt-initial').val(data.initial);
          $(_this).closest('tr').find('.fnt-current').val(data.stock);
          $(_this).closest('tr').find('.fnt-average-price').val(data.average_price);
          $(_this).closest('tr').find('.fnt-price').val(data.average_price);
        } else {
          $("#fnt-initial").val(data.initial);
          $("#fnt-current").val(data.stock);
          $("#fnt-average-price").val(data.average_price);
          $("#fnt-price").val(data.average_price);
          //$("#current-stock").html(data.stock);
        }
      });
      return false;
    });

    // when the #fnt-quantity field changes
    $("#fnt-quantity").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate_ic_fields(_this);
      return false;
    });

    // when the #fnt-price field changes
    $("#fnt-price").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate_ic_fields(_this);
      return false;
    });

    // Recalculate amounts & prices
    function recalculate_ic_fields(_this) {
      // make a POST call and replace the content
      var tbl = false;
      var qty = $('#fnt-quantity').val();
      if (typeof qty === "undefined") {
        tbl = true;
        qty = $(_this).closest('tr').find('.fnt-quantity').val();
      }
      if (qty == "")
        qty = "0";
      var price = $('#fnt-price').val();
      if (typeof price === "undefined") {
        tbl = true;
        price = $(_this).closest('tr').find('.fnt-price').val();
      }
      if (price == "")
        price = "0";
      // Right formatted for passing as REST parameter
      qty = parseInt(right_number(qty, 4) * 10000);
      price = parseInt(right_number(price, 4) * 10000);
      jQuery.getJSON('ic_totals/' + qty + "/" + price + "/" + tbl, function(data) {
        if (data.tbl == "true") {
          $(_this).closest('tr').find('.fnt-quantity').val(data.qty);
          $(_this).closest('tr').find('.fnt-price').val(data.total);
          // Table: Update and display totals is necessary
          $('#items-table-nc').trigger('totals');
        } else {
          $('#fnt-quantity').val(data.qty);
          $('#fnt-price').val(data.total);
          // Fields: Update and display totals already did in nested
        }
      });
    }
  });

  // Initialize
  function init() {
    // make a POST call and replace the content
    var org = $('select#inventory_count_organization_id').val();
    if (org == "")
      org = "0";
    jQuery.getJSON('ic_update_product_select_from_organization/' + org, function(data) {
      var prods = data.product
      // Product
      $("#fnt-product").html("");
      $("#fnt-product").select2("val", "");
      $("#fnt-product").append($('<option></option>').val("").html(""));
      if (!prods.length) {
        $.each(data, function(id, option) {
          if (id == 'product' && option != "") {
            $("#fnt-product").append($('<option></option>').val(option[0]).html(option[1] + " " + option[2]));
          }
        });
      } else {
        $.each(prods, function(id, option) {
          $("#fnt-product").append($('<option></option>').val(option[0]).html(option[1] + " " + option[2]));
        });
      }
    });
  }
</script>

<div id="new-item-fields-nc" class="modal hide fade" data-backdrop="static">
  <% e = t(:item_error) %>
  <div class="modal-header">
    <a class="close" data-dismiss="modal">Ã—</a>
    <h3><%= t("ag2_products.inventory_counts.add_item") %></h3>
    <span class="shrinked"><%= I18n.t(:mandatory_subtitle) %></span>
  </div>
  <div class="modal-body">
    <%= f.association :product, collection: @products, input_html: { class: 'x-large-text-field fsel2 field', id: 'fnt-product', data: { validation: "required", "validation-error-msg" => "#{e}" } }, label_html: { class: 'form-label fnt-product-label' } %>
    <%= f.input :initial, as: :hidden, input_html: { value: (number_with_precision(f.object.initial, precision: 4) if f.object.initial), class: 'mid-text-field number-text-field sub-disabled-field field', id: 'fnt-initial' }, label_html: { class: 'form-label' } %>
    <%= f.input :current, as: :hidden, input_html: { value: (number_with_precision(f.object.current, precision: 4) if f.object.current), class: 'mid-text-field number-text-field sub-disabled-field field', id: 'fnt-current' }, label_html: { class: 'form-label' } %>
    <%= f.input :average_price, as: :hidden, input_html: { value: (number_with_precision(f.object.average_price, precision: 4) if f.object.average_price), class: 'mid-text-field number-text-field sub-disabled-field field', id: 'fnt-average-price' }, label_html: { class: 'form-label' } %>
    <%= f.input :quantity, as: :string, input_html: { value: (number_with_precision(f.object.quantity, precision: 4) if f.object.quantity), class: 'mid-text-field number-text-field field', id: 'fnt-quantity' }, label_html: { class: 'form-label' } %>
    <%= f.input :price, as: :hidden, input_html: { value: (number_with_precision(f.object.price, precision: 4) if f.object.price), class: 'mid-text-field number-text-field field', id: 'fnt-price' }, label_html: { class: 'form-label' } %>
    <%= f.input :_destroy, as: :hidden, input_html: { class: 'field' } %>
  </div>
  <div class="modal-footer">
    <span class="left-floated shrinked" style="vertical-align: bottom"><%= t("ag2_products.inventory_counts.add_item_to", var: @inventory_count.count_no) unless @inventory_count.count_no.blank? %>&#8226;</span>
    <!--<span class="left-floated shrinked" style="vertical-align: bottom"><%= t("activerecord.attributes.stock.current") %>=</span>-->
    <!--<span class="left-floated shrinked" style="vertical-align: bottom" id="current-stock">0,0000</span>-->
    <button id="addButton" type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true"><%= t('ag2_products.inventory_counts.btn_add_item') %></button>
    <button id="cancelButton" type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true"><%= t :close_button %></button>
  </div>
</div>

<script type="text/javascript">
  sel2NoMatch = '<%= t("select2.no_matches") %>';
  ic_nc_itemFieldsUI.init(sel2NoMatch);
</script>
