<script>
  var text_field_color;
  var _thisForm = '';
  var old_fam = '';
  var old_org = '';
  var old_code = '';

  $(document).ready(function() {
    $('select.sel2').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; },
      allowClear: true
    });

    // Setup drag & drop
    dd_import_files('#dd_files', '#image_content', 'pr_update_attachment');
    // Disable fields if Product Family blank
    var product = $('#product_product_family_id').val();
    if (product == "")
      product = "0";
    if (product == "0") {
      // Empty family: Disable
      $('#product_product_code').prop('disabled', true);
      $('#product_main_description').prop('disabled', true);
      $('#product_aux_description').prop('disabled', true);
      $('#generate_code_btn').hide();
      $('#submit_btn').hide();
    } else {
      // Family OK: Enable
      $('#product_product_code').prop('disabled', false);
      $('#product_main_description').prop('disabled', false);
      $('#product_aux_description').prop('disabled', false);
      $('#generate_code_btn').show();
      $('#submit_btn').show();
      old_fam = $('#product_product_family_id').val();
    }
    // Save default text color
    text_field_color = $("#product_product_code").css('color')
    $('#product_product_family_id').focus();

    // Initialized form variable
    _thisForm = $("#product_product_family_id").closest('form')[0];

    // Icon inside text field: Generate Code
    $('input.iconify').wrap('<span class="generateicon" title="<%=t('generate') %>" />').after($('<span/>').click(function() {
      $('#generate_code_btn').trigger("click");
      return false;
    }));

    // Disable generate_code_btn if product_organization_id blank
    var org = $('#product_organization_id').val();
    if (org == "")
      org = "$";
    if (org == "$") {
      // Empty organization: Hide
      $('#generate_code_btn').hide();
    } else {
      // Organization OK: Show (if not updating)
      old_org = $('#product_organization_id').val();
      old_code = $('#product_product_code').val();
      if ('<%= @breadcrumb %>' == "update") {
        $('#generate_code_btn').hide();
      } else {
        $('#generate_code_btn').show();
      }
    }

    // Can't change code if editing
    if ('<%= @breadcrumb %>' == "update") {
      $('#product_product_code').prop('readonly', true);
    } else {
      $('#product_product_code').prop('readonly', false);
    }

    // Set initial focus
    $(this).find(".form-label:first").focus();
  });

  jQuery(function($) {
    // when #generate_code_btn is clicked
    $("#generate_code_btn").click(function() {
      // make a POST call and replace the content
      var product = $('select#product_product_family_id').val();
      if (product == "")
        product = "$";
      var org = $('#product_organization_id').val();
      if (org == "")
        org = "$";
      jQuery.getJSON('pr_update_code_textfield/' + product + '/' + org, function(data) {
        $("#product_product_code").val(data.code);
        if ($("#product_product_code").val() == "$err") {
          $("#product_product_code").css('color', 'red');
          alert('<%= I18n.t("ag2_products.products.code_error") %>');
          $('#product_product_code').select();
        } else {
          $("#product_product_code").css('color', text_field_color);
        }
      })
      return false;
    });

    // when the #product_organization_id field changes
    $("#product_organization_id").change(function() {
      // make a POST call and replace the content
      var product = $('select#product_organization_id').val();
      if (product == "")
        product = "0";
      jQuery.getJSON('pr_update_family_textfield_from_organization/' + product, function(data) {
        var f = data.families;
        // Families
        $("#product_product_family_id").html("");
        $("#product_product_family_id").val("");
        $("#product_product_family_id").append($('<option></option>').val("").html(""));
        if (!f.length) {
          $.each(data, function(id, option) {
            if (id == 'technicians' && option != "") {
              $("#product_product_family_id").append($('<option></option>').val(option.id).html(option.family_code + " " + option.name.substring(0,41)));
            }
          });
        } else {
          $.each(f, function(id, option) {
            $("#product_product_family_id").append($('<option></option>').val(option.id).html(option.family_code + " " + option.name.substring(0,41)));
          });
        }
      });
      if (product == '0') $("#product_product_family_id").val(0);
      // Disable generate_code_btn if product_organization_id blank
      show_hide_generate_code_btn();
      return false;
    });

    // when the #product_product_family_id field changes
    $("#product_product_family_id").change(function() {
      var product = $('select#product_product_family_id').val();
      if (product == "")
        product = "0";
      if (product == "0") {
        // Empty family: Disable
        $('#product_product_code').prop('disabled', true);
        $('#product_main_description').prop('disabled', true);
        $('#product_aux_description').prop('disabled', true);
        $("#product_active").prop('checked', false);
        $('#generate_code_btn').hide();
        $('#submit_btn').hide();
      } else {
        // Family OK: Enable
        $('#product_product_code').prop('disabled', false);
        $('#product_main_description').prop('disabled', false);
        $('#product_aux_description').prop('disabled', false);
        $("#product_active").prop('checked', true);
        $('#generate_code_btn').show();
        $('#submit_btn').show();
      }
      // Disable generate_code_btn if product_product_family_id blank
      show_hide_generate_code_btn();
    });

    // when the #product_product_code field changes
    $("#product_product_code").change(function() {
      // replace the color
      $("#product_product_code").css('color', text_field_color);
    });

    // when the #product_reference_price field changes
    $("#product_reference_price").change(function() {
      var num = $('#product_reference_price').val();
      if (num == "")
        num = "0";
      // Right formatted for passing as REST parameter
      num = parseInt(right_number(num, 4) * 10000);
      jQuery.getJSON('pr_format_amount/' + num, function(data) {
        $('#product_reference_price').val(data.num);
      });
      return false;
    });

    // when the #product_last_price field changes
    $("#product_last_price").change(function() {
      var num = $('#product_last_price').val();
      if (num == "")
        num = "0";
      // Right formatted for passing as REST parameter
      num = parseInt(right_number(num, 4) * 10000);
      jQuery.getJSON('pr_format_amount/' + num, function(data) {
        $('#product_last_price').val(data.num);
      });
      return false;
    });

    // when the #product_average_price field changes
    $("#product_average_price").change(function() {
      var num = $('#product_average_price').val();
      if (num == "")
        num = "0";
      // Right formatted for passing as REST parameter
      num = parseInt(right_number(num, 4) * 10000);
      jQuery.getJSON('pr_format_amount/' + num, function(data) {
        $('#product_average_price').val(data.num);
      });
      return false;
    });

    // when the #product_sell_price field changes
    $("#product_sell_price").change(function() {
      var num = $('#product_sell_price').val();
      if (num == "")
        num = "0";
      // Right formatted for passing as REST parameter
      num = parseInt(right_number(num, 4) * 10000);
      jQuery.getJSON('pr_format_amount/' + num, function(data) {
        $('#product_sell_price').val(data.num);
      });
      return false;
    });

    // when the #product_markup field changes
    $("#product_markup").change(function() {
      var markup = $('#product_markup').val();
      if (markup == "")
        markup = "0";
      var sell = $('#product_sell_price').val();
      if (sell == "")
        sell = "0";
      var reference = $('#product_reference_price').val();
      if (reference == "")
        reference = "0";
      // Right formatted for passing as REST parameter
      markup = parseInt(right_number(markup, 2) * 100);
      sell = parseInt(right_number(sell, 4) * 10000);
      reference = parseInt(right_number(reference, 4) * 10000);
      jQuery.getJSON('pr_markup/' + markup + '/' + sell + '/' + reference, function(data) {
        $('#product_markup').val(data.markup);
        $('#product_sell_price').val(data.sell);
        });
      return false;
    });

    // when submit
    $(_thisForm).on('submit', function() {
      // Must change decimal separator, if comma, in numeric fields
      var r = $('#product_reference_price').val().replace(",", ".");
      var l = $('#product_last_price').val().replace(",", ".");
      var a = $('#product_average_price').val().replace(",", ".");
      var s = $('#product_sell_price').val().replace(",", ".");
      var m = $('#product_markup').val().replace(",", ".");
      $('#product_reference_price').val(r);
      $('#product_last_price').val(l);
      $('#product_average_price').val(a);
      $('#product_sell_price').val(s);
      $('#product_markup').val(m);
    });
  });

  function show_hide_generate_code_btn() {
    // Disable generate_code_btn if product_organization_id and product_product_family_id are blank
    var product = $('select#product_product_family_id').val();
    if (product == "")
      product = "$";
    var org = $('select#product_organization_id').val();
    if (org == "")
      org = "$";
    if (product != "$" && org != "$") {
      // Show (if not updating)
      if ('<%= @breadcrumb %>' == "update") {
        if (old_org == $('#product_organization_id').val() && old_fam == $('#product_product_family_id').val()) {
          $('#product_product_code').val(old_code);
          $("#product_product_code").css('color', text_field_color);
          $('#generate_code_btn').hide();
        } else {
          $('#generate_code_btn').show();
        }
      } else {
        $('#generate_code_btn').show();
      }
    } else {
      // Hide
      $('#generate_code_btn').hide();
    }
  }
</script>

<%= simple_form_for @product, html: { class: 'form-vertical well' } do |f| %>
<%= f.error_notification %>
<%= display_base_errors resource %>
<div>
  <label class="multi-field-label-two">
    <% if session[:organization] != '0' %>
    <%= f.association :organization, collection: Organization.where("id = ?", "#{session[:organization]}").all, input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% elsif current_user.organizations.count > 0 %>
    <%= f.association :organization, collection: current_user.organizations.order('name'), input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' }, include_blank: false %>
    <% else %>
    <%= f.association :organization, collection: Organization.order('name'), input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %>
    <% end %>
  </label>
  <label class="multi-field-label-two"> <%= f.association :product_family, collection: @product_families, input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-three"> <%= f.input :product_code, input_html: { class: 'large-text-field iconify' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-three"> <%= f.association :product_type, collection: ProductType.all(order: 'description'), input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-three"> <%= f.input :active, input_html: { class: 'mid-text-field' }, label_html: { class: 'form-label' }, boolean_style: :inline %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.input :main_description, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :aux_description, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.association :measure, collection: Measure.all(order: 'description'), input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.association :manufacturer, collection: Manufacturer.all(order: 'name'), input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<%= f.input :remarks, as: :text, input_html: { class: 'x-large-text-field', rows: 2 }, label_html: { class: 'form-label' } %>
<h4><%= t 'ag2_products.products.commercial_info' %></h4>
<div>
  <label class="multi-field-label-two"> <%= f.input :manufacturer_p_code, input_html: { class: 'large-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :aux_code, input_html: { class: 'large-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.association :tax_type, collection: TaxType.where('expiration IS NULL').order('description'), input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :reference_price, as: :string, input_html: { value: (number_with_precision(f.object.reference_price, precision: 4) if f.object.reference_price), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.input :last_price, as: :string, input_html: { value: (number_with_precision(f.object.last_price, precision: 4) if f.object.last_price), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :average_price, as: :string, input_html: { value: (number_with_precision(f.object.average_price, precision: 4) if f.object.average_price), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.input :markup, as: :string, input_html: { value: (number_with_precision(f.object.markup, precision: 2) if f.object.markup), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :sell_price, as: :string, input_html: { value: (number_with_precision(f.object.sell_price, precision: 4) if f.object.sell_price), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.input :warranty_time, input_html: { class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :life_time, input_html: { class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<!-- Attachment -->
<table class="form-table">
  <tbody>
    <tr class="form-tr">
      <td class="form-td-two left-winged"> <%= f.input :image, as: :file, input_html: { accept: 'image/*' }, label_html: { class: 'form-label' } %> </td>
      <td class="form-td-two right-winged">
      <div id="dd_files">
        <% if !@product.image_file_name.nil? %>
          <span id="image_text"></span>
          <img id="image_content" src="<%= @product.image.url %>">
        <% else %>
          <span id="image_text"><%= t 'dd_image_message' %></span>
          <img id="image_content" hidden>
        <% end %>
      </div></td>
    </tr>
  </tbody>
</table>
<br />
<!-- Buttons -->
<table class="form-table">
  <tbody>
    <tr class="form-tr">
      <td class="form-td-three left-winged"> <%= f.button :submit, class: 'btn-primary', id: 'submit_btn' %> </td>
      <% if @breadcrumb == 'update'%>
      <td class="form-td-three centered">
        <% if !cannot_edit(@product) %>
        <%= render partial: '/layouts/ag2_products/productstocksprices', locals: { product: @product } %>
        <% end %>
      </td>
      <% end %>
      <td class="form-td-three right-winged"><a href="#" id="generate_code_btn" class="btn btn-warning"><%=t 'ag2_products.products.generate_code_btn' %></a></td>
    </tr>
  </tbody>
</table>
<% end %>
