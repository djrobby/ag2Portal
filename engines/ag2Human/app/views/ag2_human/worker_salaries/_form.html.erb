<script>
  var _thisForm = '';

  $(document).ready(function() {
    $('.sel2').select2({
      formatNoMatches: function(m) { return '<%= I18n.t("select2.no_matches") %>'; }
    });
    // Initialize form variable
    _thisForm = $("#worker_salary_year").closest('form')[0];
  });

  jQuery(function($) {
    // when the #worker_salary_gross_salary field changes
    $("#worker_salary_gross_salary").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate(_this);
      return false;
    });

    // when the #worker_salary_variable_salary field changes
    $("#worker_salary_variable_salary").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate(_this);
      return false;
    });

    // when the #worker_salary_social_security_cost field changes
    $("#worker_salary_social_security_cost").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate(_this);
      return false;
    });

    // when the #worker_salary_day_pct field changes
    $("#worker_salary_day_pct").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate(_this);
      return false;
    });

    // when the #worker_salary_overtime field changes
    $("#worker_salary_overtime").change(function() {
      // preserve the current object
      var _this = (this);
      recalculate(_this);
      return false;
    });
    
    // when submit    
    $(_thisForm).on('submit', function() {
      // Must change decimal separator, if comma, in numeric fields
      var gs = $('#worker_salary_gross_salary').val().replace(",", ".");
      var vs = $('#worker_salary_variable_salary').val().replace(",", ".");
      var ss = $('#worker_salary_social_security_cost').val().replace(",", ".");
      var dp = $('#worker_salary_day_pct').val().replace(",", ".");
      var ot = $('#worker_salary_overtime').val().replace(",", ".");
      $('#worker_salary_gross_salary').val(gs);
      $('#worker_salary_variable_salary').val(vs);
      $('#worker_salary_social_security_cost').val(ss);
      $('#worker_salary_day_pct').val(dp);
      $('#worker_salary_overtime').val(ot);
    });
    
    // Recalculate amounts
    function recalculate(_this) {
      // make a POST call and replace the content
      var gs = $('#worker_salary_gross_salary').val();
      var vs = $('#worker_salary_variable_salary').val();
      var ss = $('#worker_salary_social_security_cost').val();
      var dp = $('#worker_salary_day_pct').val();
      var ot = $('#worker_salary_overtime').val();
      if (gs == "")
        gs = "0";
      if (vs == "")
        vs = "0";
      if (ss == "")
        ss = "0";
      if (dp == "")
        dp = "0";
      if (ot == "")
        ot = "0";
      // Right formatted for passing as REST parameter
      gs = parseInt(right_number(gs, 2) * 100);
      vs = parseInt(right_number(vs, 2) * 100);
      ss = parseInt(right_number(ss, 2) * 100);
      dp = parseInt(right_number(dp, 2) * 100);
      ot = parseInt(right_number(ot, 2) * 100);
      jQuery.getJSON('ws_update_amounts/' + gs + '/' + vs + '/' + ss + '/' + dp + '/' + ot, function(data) {
        $('#worker_salary_gross_salary').val(data.gs);
        $('#worker_salary_variable_salary').val(data.vs);
        $('#worker_salary_social_security_cost').val(data.ss);
        $('#worker_salary_day_pct').val(data.dp);
        $('#worker_salary_overtime').val(data.ot);
      });
    }
  });  
</script>

<%= simple_form_for @worker_salary, :html => {:class => 'form-vertical well' } do |f| %>
<%= f.error_notification %>
<%= display_base_errors resource %>
<% if @worker_item %>
<%= f.association :worker_item, autofocus: true, collection: WorkerItem.where("id = ?", "#{@worker_item.id}").all, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' }, include_blank: false %>
<% else %>
<%= f.association :worker_item, autofocus: true, collection: WorkerItem.order('id').all, input_html: { class: 'x-large-text-field sel2' }, label_html: { class: 'form-label' } %>
<% end %>
<div>
  <label class="multi-field-label-two"> <%= f.input :year, input_html: { class: 'mid-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :active, input_html: { class: 'x-large-text-field' }, label_html: { class: 'form-label' }, boolean_style: :inline %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.input :gross_salary, as: :string, input_html: { value: (number_with_precision(f.object.gross_salary, precision: 2) if f.object.gross_salary), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :variable_salary, as: :string, input_html: { value: (number_with_precision(f.object.variable_salary, precision: 2) if f.object.variable_salary), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.input :social_security_cost, as: :string, input_html: { value: (number_with_precision(f.object.social_security_cost, precision: 2) if f.object.social_security_cost), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
  <label class="multi-field-label-two"> <%= f.input :day_pct, as: :string, input_html: { value: (number_with_precision(f.object.day_pct, precision: 2) if f.object.day_pct), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<div>
  <label class="multi-field-label-two"> <%= f.input :overtime, as: :string, input_html: { value: (number_with_precision(f.object.overtime, precision: 2) if f.object.overtime), class: 'large-text-field number-text-field' }, label_html: { class: 'form-label' } %> </label>
</div>
<%= f.button :submit, :class => 'btn-primary' %>
<% end %>
