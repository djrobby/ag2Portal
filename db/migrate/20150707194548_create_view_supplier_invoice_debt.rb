class CreateViewSupplierInvoiceDebt < ActiveRecord::Migration
  def up
    execute 'create view supplier_invoice_debts as
    select `supplier_invoices`.`id` AS `supplier_invoice_id`,`supplier_invoices`.`organization_id` AS `organization_id`,`supplier_invoices`.`invoice_no` AS `invoice_no`,
    coalesce(sum((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`))),0) AS `subtotal`,
    (case when ((`supplier_invoices`.`discount_pct` = 0) or isnull(`supplier_invoices`.`discount_pct`)) then coalesce(sum(((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`)) * (`tax_types`.`tax` / 100))),0) else (coalesce(sum(((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`)) * (`tax_types`.`tax` / 100))),0) * (`supplier_invoices`.`discount_pct` / 100)) end) AS `taxes`,
    (case when ((`supplier_invoices`.`discount_pct` = 0) or isnull(`supplier_invoices`.`discount_pct`)) then 0 else (coalesce(sum((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`))),0) * (`supplier_invoices`.`discount_pct` / 100)) end) AS `bonus`,
    (case when ((`supplier_invoices`.`discount_pct` = 0) or isnull(`supplier_invoices`.`discount_pct`)) then coalesce(sum((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`))),0) else (coalesce(sum((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`))),0) - (coalesce(sum((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`))),0) * (`supplier_invoices`.`discount_pct` / 100))) end) AS `taxable`,
    (case when ((`supplier_invoices`.`discount_pct` = 0) or isnull(`supplier_invoices`.`discount_pct`)) then (coalesce(sum((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`))),0) + coalesce(sum(((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`)) * (`tax_types`.`tax` / 100))),0)) else ((coalesce(sum((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`))),0) - (coalesce(sum((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`))),0) * (`supplier_invoices`.`discount_pct` / 100))) + (coalesce(sum(((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`)) * (`tax_types`.`tax` / 100))),0) * (`supplier_invoices`.`discount_pct` / 100))) end) AS `total`,
    coalesce(sum(`supplier_payments`.`amount`),0) AS `paid`,
    (case when ((`supplier_invoices`.`discount_pct` = 0) or isnull(`supplier_invoices`.`discount_pct`)) then ((coalesce(sum((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`))),0) + coalesce(sum(((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`)) * (`tax_types`.`tax` / 100))),0)) - coalesce(sum(`supplier_payments`.`amount`),0)) else (((coalesce(sum((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`))),0) - (coalesce(sum((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`))),0) * (`supplier_invoices`.`discount_pct` / 100))) + (coalesce(sum(((`supplier_invoice_items`.`quantity` * (`supplier_invoice_items`.`price` - `supplier_invoice_items`.`discount`)) * (`tax_types`.`tax` / 100))),0) * (`supplier_invoices`.`discount_pct` / 100))) - coalesce(sum(`supplier_payments`.`amount`),0)) end) AS `debt`
    from (((`supplier_invoices` join `supplier_invoice_items` on((`supplier_invoices`.`id` = `supplier_invoice_items`.`supplier_invoice_id`))) join `tax_types` on((`supplier_invoice_items`.`tax_type_id` = `tax_types`.`id`)))
    left join `supplier_payments` on((`supplier_payments`.`supplier_invoice_id` = `supplier_invoices`.`id`))) having (`debt` > 0)'
  end

  def down
    execute 'drop view supplier_invoice_debts'
  end
end
